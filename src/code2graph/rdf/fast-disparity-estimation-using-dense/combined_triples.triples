mkdir_images	followed_by	get_max_disparity
train_network	call	train_all
Activation('relu')	followed_by	Conv2D(filters=32, kernel_size=1, padding='same')
train_batch	call	build_model
get_max_disparity	call	load
MaxPooling2D(8)	followed_by	range
build_model	call	Conv2D(filters=32, kernel_size=5, padding='same')
ZeroPadding2D	has_padding	(2, 0)
RMSprop	followed_by	predict_disparity
Dropout(dropout)	followed_by	concatenate
range	followed_by	train_batch
train_all	call	LambdaCallback
train_network	call	range
get_epe	followed_by	get_epe
get_max_disparity	call	load_test_disparity
range	followed_by	concatenate
build_model	call	Activation('tanh', name='disparity_output')
Activation('relu')	followed_by	Conv2D(filters=16, kernel_size=5, padding='same')
Predictor.__init__	call	get_max_disparity
load_train_data	call	load
range	followed_by	Conv2D(filters=32, kernel_size=5, padding='same', dilation_rate=dilation_rate)
.predictor	call	train_network
train_network	call	train_batch
train_all	call	binary_crossentropy
BatchNormalization()	followed_by	Activation('relu')
Conv2D(filters=32, kernel_size=5, padding='same')	followed_by	MaxPooling2D(8)
Conv2DTranspose(filters=1, kernel_size=9, padding='same')	call	Conv2DTranspose
load_test_disparity	call	min
.predictor	call	Settings.__init__
load	followed_by	max
train_all	followed_by	train_batch
load_test_data	call	load
train_all	call	DenseMapNet.__init__
Activation('relu')	followed_by	Conv2D(filters=64, kernel_size=1, padding='same')
load	followed_by	load
BatchNormalization()	followed_by	Activation('relu', name='downsampled_stereo')
build_model	call	MaxPooling2D(8)
predict_disparity	call	build_model
reshape	followed_by	reshape
LambdaCallback	followed_by	load_train_data
BatchNormalization()	call	BatchNormalization
train_batch	call	predict_disparity
build_model	call	Activation('relu')
Conv2D(filters=1, kernel_size=5, padding='same', dilation_rate=2)	call	Conv2D
build_model	call	Conv2D(filters=32, kernel_size=5, padding='same', dilation_rate=dilation_rate)
count_nonzero	followed_by	predict_images
get_epe	followed_by	range
.predictor	call	predict_disparity
.predictor	call	Predictor.__init__
Conv2DTranspose	has_padding	same
Conv2D(filters=1, kernel_size=5, padding='same', dilation_rate=2)	followed_by	concatenate
ModelCheckpoint	followed_by	load_train_data
Model	followed_by	binary_crossentropy
Activation('relu', name='downsampled_stereo')	followed_by	range
Settings.__init__	followed_by	Predictor.__init__
build_model	call	Conv2D(filters=1, kernel_size=5, padding='same', dilation_rate=2)
load_mask	call	load
Activation('tanh', name='disparity_output')	followed_by	Activation('sigmoid', name='disparity_output')
get_epe	call	range
SGD	followed_by	binary_crossentropy
Activation	has_name	downsampled_stereo
build_model	call	Conv2D(filters=64, kernel_size=1, padding='same')
load_test_disparity	call	max
train_batch	call	shuffle
train_batch	followed_by	predict_disparity
Activation	has_name	disparity_output
concatenate	followed_by	MaxPooling2D(8)
Activation('relu')	call	Activation
range	has_arg0	0
Activation('sigmoid', name='disparity_output')	call	Activation
build_model	call	plot_model
build_model	followed_by	RMSprop
Conv2D	has_padding	same
build_model	call	binary_crossentropy
build_model	followed_by	SGD
UpSampling2D(8)	followed_by	ZeroPadding2D(padding=(2, 0))
build_model	call	Model
load_test_disparity	call	load
build_model	call	Conv2D(filters=16, kernel_size=5, padding='same')
train_network	call	predict_disparity
ZeroPadding2D(padding=(2, 0))	call	ZeroPadding2D
RMSprop	has_decay	1e-06
range	followed_by	get_epe
train_all	call	build_model
predict_disparity	followed_by	train_network
build_model	call	Activation('relu', name='downsampled_stereo')
predict_disparity	call	DenseMapNet.__init__
get_max_disparity	call	range
Activation	has_arg0	sigmoid
min	followed_by	load
get_max_disparity	call	min
Conv2D(filters=16, kernel_size=5, padding='same', dilation_rate=dilation_rate)	followed_by	Dropout(dropout)
Conv2D(filters=16, kernel_size=5, padding='same', dilation_rate=dilation_rate)	call	Conv2D
load_mask	call	reshape
range	has_arg1	1
DenseMapNet.__init__	followed_by	build_model
Conv2D(filters=32, kernel_size=5, padding='same', dilation_rate=dilation_rate)	followed_by	Dropout(dropout)
build_model	call	Conv2D(filters=32, kernel_size=1, padding='same')
Conv2DTranspose(filters=1, kernel_size=9, padding='same')	followed_by	Activation('tanh', name='disparity_output')
Predictor.__init__	followed_by	predict_disparity
range	followed_by	count_nonzero
predict_images	call	reshape
Predictor.__init__	call	load_test_data
Activation('relu')	followed_by	Conv2DTranspose(filters=1, kernel_size=9, padding='same')
RMSprop	followed_by	RMSprop
Predictor.__init__	call	mkdir_images
load_test_data	followed_by	load_mask
range	has_arg0	4
build_model	call	Dropout(dropout)
train_batch	call	binary_crossentropy
Conv2D(filters=64, kernel_size=1, padding='same')	call	Conv2D
Conv2D	has_dilation_rate	2
Conv2D(filters=32, kernel_size=5, padding='same')	call	Conv2D
get_epe	call	count_nonzero
Conv2D(filters=16, kernel_size=5, padding='same')	followed_by	Conv2D(filters=1, kernel_size=5, padding='same', dilation_rate=2)
range	followed_by	load
load_test_disparity	call	reshape
predict_disparity	call	range
build_model	call	range
ModelCheckpoint	followed_by	LambdaCallback
train_all	call	ModelCheckpoint
train_all	call	RMSprop
Conv2D(filters=32, kernel_size=1, padding='same')	call	Conv2D
predict_images	followed_by	predict_images
range	has_arg0	1
Activation('sigmoid', name='disparity_output')	followed_by	Model
RMSprop	followed_by	plot_model
Input	followed_by	Input
concatenate	followed_by	BatchNormalization()
build_model	call	Activation('sigmoid', name='disparity_output')
Activation('relu', name='downsampled_stereo')	call	Activation
predict_disparity	call	get_epe
MaxPooling2D	has_arg0	8
train_batch	call	ModelCheckpoint
train_batch	call	RMSprop
get_max_disparity	call	max
RMSprop	followed_by	binary_crossentropy
Conv2D(filters=32, kernel_size=5, padding='same', dilation_rate=dilation_rate)	call	Conv2D
load_train_data	followed_by	DenseMapNet.__init__
Dropout(dropout)	call	Dropout
train_batch	call	DenseMapNet.__init__
Conv2D(filters=32, kernel_size=1, padding='same')	followed_by	UpSampling2D(8)
min	followed_by	load_test_disparity
Activation	has_arg0	relu
train_all	call	load_train_data
binary_crossentropy	followed_by	RMSprop
get_max_disparity	followed_by	load_test_data
build_model	call	BatchNormalization()
Conv2D(filters=16, kernel_size=5, padding='same')	followed_by	concatenate
UpSampling2D(8)	call	UpSampling2D
shuffle	followed_by	ModelCheckpoint
train_batch	call	SGD
build_model	call	RMSprop
build_model	call	Conv2D(filters=16, kernel_size=5, padding='same', dilation_rate=dilation_rate)
concatenate	has_name	upsampled_disparity
Activation('relu')	followed_by	Conv2D(filters=16, kernel_size=5, padding='same', dilation_rate=dilation_rate)
Activation('tanh', name='disparity_output')	call	Activation
train_batch	call	load_train_data
Predictor.__init__	call	load_mask
Activation	has_arg0	tanh
build_model	call	Input
max	followed_by	min
MaxPooling2D(8)	call	MaxPooling2D
ZeroPadding2D(padding=(2, 0))	followed_by	concatenate
load_train_data	call	reshape
Conv2D(filters=64, kernel_size=1, padding='same')	followed_by	BatchNormalization()
build_model	call	Conv2DTranspose(filters=1, kernel_size=9, padding='same')
Input	followed_by	Conv2D(filters=16, kernel_size=5, padding='same')
load	followed_by	reshape
build_model	call	concatenate
UpSampling2D	has_arg0	8
range	has_arg0	400
build_model	call	UpSampling2D(8)
build_model	call	ZeroPadding2D(padding=(2, 0))
train_batch	followed_by	range
concatenate	followed_by	Conv2D(filters=32, kernel_size=5, padding='same')
get_epe	call	predict_images
Conv2D(filters=16, kernel_size=5, padding='same')	call	Conv2D
MaxPooling2D(8)	followed_by	BatchNormalization()
build_model	followed_by	get_epe
train_all	call	predict_disparity
utils.ElapsedTimer.print_elapsed_time	call	elapsed
elapsed	followed_by	elapsed_time
utils.ElapsedTimer.print_elapsed_time	call	elapsed_time
