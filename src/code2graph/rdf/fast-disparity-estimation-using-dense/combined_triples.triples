Conv2D	has_dilation_rate	2
train_all	followed_by	train_batch
Activation('relu', name='downsampled_stereo')	followed_by	range
range	has_arg1	1
Activation	has_arg0	sigmoid
range	has_arg0	4
train_all	call	binary_crossentropy
train_all	call	predict_disparity
build_model	call	Conv2D(filters=32, kernel_size=5, padding='same')
build_model	call	concatenate
Activation('tanh', name='disparity_output')	call	Activation
train_network	call	range
Activation	has_name	downsampled_stereo
Predictor.__init__	followed_by	predict_disparity
range	followed_by	get_epe
build_model	call	plot_model
load	followed_by	reshape
train_network	call	train_all
build_model	call	Conv2D(filters=64, kernel_size=1, padding='same')
load_mask	call	reshape
build_model	call	UpSampling2D(8)
UpSampling2D(8)	followed_by	ZeroPadding2D(padding=(2, 0))
BatchNormalization()	call	BatchNormalization
build_model	call	Activation('sigmoid', name='disparity_output')
range	followed_by	count_nonzero
RMSprop	followed_by	binary_crossentropy
Activation('relu')	followed_by	Conv2D(filters=32, kernel_size=1, padding='same')
Conv2D(filters=32, kernel_size=1, padding='same')	followed_by	UpSampling2D(8)
build_model	call	Conv2D(filters=32, kernel_size=5, padding='same', dilation_rate=dilation_rate)
UpSampling2D	has_arg0	8
RMSprop	followed_by	plot_model
build_model	call	Input
BatchNormalization()	followed_by	Activation('relu', name='downsampled_stereo')
load_test_disparity	call	reshape
Activation('tanh', name='disparity_output')	followed_by	Activation('sigmoid', name='disparity_output')
Activation	has_name	disparity_output
LambdaCallback	followed_by	load_train_data
build_model	call	Model
Activation('relu')	call	Activation
load	followed_by	load
count_nonzero	followed_by	predict_images
load_test_disparity	call	max
Input	followed_by	Conv2D(filters=16, kernel_size=5, padding='same')
train_all	call	RMSprop
max	followed_by	min
RMSprop	has_decay	1e-06
train_batch	call	ModelCheckpoint
shuffle	followed_by	ModelCheckpoint
get_max_disparity	call	max
Predictor.__init__	call	load_mask
build_model	call	Conv2DTranspose(filters=1, kernel_size=9, padding='same')
get_epe	call	range
build_model	followed_by	SGD
train_all	call	build_model
Activation('sigmoid', name='disparity_output')	call	Activation
ZeroPadding2D	has_padding	(2, 0)
load_train_data	call	load
range	followed_by	load
Predictor.__init__	call	load_test_data
ModelCheckpoint	followed_by	LambdaCallback
train_all	call	load_train_data
train_batch	call	SGD
train_network	call	train_batch
Activation('relu')	followed_by	Conv2D(filters=16, kernel_size=5, padding='same', dilation_rate=dilation_rate)
Conv2D(filters=32, kernel_size=5, padding='same', dilation_rate=dilation_rate)	call	Conv2D
Model	followed_by	binary_crossentropy
range	has_arg0	1
Activation('relu')	followed_by	Conv2D(filters=16, kernel_size=5, padding='same')
load_train_data	followed_by	DenseMapNet.__init__
get_max_disparity	followed_by	load_test_data
MaxPooling2D(8)	followed_by	range
load_test_data	call	load
BatchNormalization()	followed_by	Activation('relu')
build_model	call	ZeroPadding2D(padding=(2, 0))
train_batch	followed_by	predict_disparity
Dropout(dropout)	followed_by	concatenate
MaxPooling2D(8)	call	MaxPooling2D
Conv2D(filters=64, kernel_size=1, padding='same')	call	Conv2D
binary_crossentropy	followed_by	RMSprop
.predictor	call	predict_disparity
MaxPooling2D(8)	followed_by	BatchNormalization()
Conv2D(filters=16, kernel_size=5, padding='same')	call	Conv2D
UpSampling2D(8)	call	UpSampling2D
build_model	followed_by	get_epe
Conv2D(filters=1, kernel_size=5, padding='same', dilation_rate=2)	followed_by	concatenate
range	has_arg0	0
build_model	call	Conv2D(filters=16, kernel_size=5, padding='same', dilation_rate=dilation_rate)
concatenate	followed_by	Conv2D(filters=32, kernel_size=5, padding='same')
Input	followed_by	Input
Predictor.__init__	call	get_max_disparity
load_mask	call	load
ZeroPadding2D(padding=(2, 0))	followed_by	concatenate
Conv2D(filters=64, kernel_size=1, padding='same')	followed_by	BatchNormalization()
Conv2D(filters=16, kernel_size=5, padding='same', dilation_rate=dilation_rate)	followed_by	Dropout(dropout)
predict_images	followed_by	predict_images
RMSprop	followed_by	predict_disparity
Conv2D(filters=32, kernel_size=5, padding='same')	followed_by	MaxPooling2D(8)
Predictor.__init__	call	mkdir_images
SGD	followed_by	binary_crossentropy
predict_disparity	call	get_epe
train_all	call	ModelCheckpoint
Conv2D(filters=16, kernel_size=5, padding='same')	followed_by	concatenate
Activation('relu')	followed_by	Conv2DTranspose(filters=1, kernel_size=9, padding='same')
train_batch	call	DenseMapNet.__init__
range	has_arg0	400
Activation	has_arg0	relu
build_model	call	BatchNormalization()
build_model	followed_by	RMSprop
train_all	call	DenseMapNet.__init__
min	followed_by	load_test_disparity
build_model	call	Activation('relu')
load	followed_by	max
range	followed_by	train_batch
get_epe	followed_by	range
get_max_disparity	call	load_test_disparity
Conv2D(filters=32, kernel_size=5, padding='same', dilation_rate=dilation_rate)	followed_by	Dropout(dropout)
build_model	call	range
train_all	call	LambdaCallback
build_model	call	Activation('tanh', name='disparity_output')
Conv2D(filters=16, kernel_size=5, padding='same', dilation_rate=dilation_rate)	call	Conv2D
Conv2DTranspose(filters=1, kernel_size=9, padding='same')	call	Conv2DTranspose
build_model	call	Conv2D(filters=32, kernel_size=1, padding='same')
predict_disparity	followed_by	train_network
concatenate	has_name	upsampled_disparity
MaxPooling2D	has_arg0	8
Activation('sigmoid', name='disparity_output')	followed_by	Model
load_train_data	call	reshape
train_batch	call	shuffle
mkdir_images	followed_by	get_max_disparity
Activation('relu')	followed_by	Conv2D(filters=64, kernel_size=1, padding='same')
RMSprop	followed_by	RMSprop
Settings.__init__	followed_by	Predictor.__init__
Dropout(dropout)	call	Dropout
get_epe	call	count_nonzero
train_network	call	predict_disparity
predict_disparity	call	build_model
predict_images	call	reshape
Conv2D(filters=32, kernel_size=5, padding='same')	call	Conv2D
build_model	call	Activation('relu', name='downsampled_stereo')
ModelCheckpoint	followed_by	load_train_data
Conv2D(filters=16, kernel_size=5, padding='same')	followed_by	Conv2D(filters=1, kernel_size=5, padding='same', dilation_rate=2)
build_model	call	RMSprop
reshape	followed_by	reshape
train_batch	call	predict_disparity
Conv2D(filters=32, kernel_size=1, padding='same')	call	Conv2D
build_model	call	MaxPooling2D(8)
get_epe	call	predict_images
train_batch	call	load_train_data
get_max_disparity	call	range
.predictor	call	Predictor.__init__
Conv2DTranspose(filters=1, kernel_size=9, padding='same')	followed_by	Activation('tanh', name='disparity_output')
train_batch	call	build_model
load_test_disparity	call	load
range	followed_by	Conv2D(filters=32, kernel_size=5, padding='same', dilation_rate=dilation_rate)
build_model	call	Conv2D(filters=1, kernel_size=5, padding='same', dilation_rate=2)
train_batch	call	RMSprop
predict_disparity	call	range
get_max_disparity	call	min
train_batch	call	binary_crossentropy
min	followed_by	load
range	followed_by	concatenate
get_epe	followed_by	get_epe
.predictor	call	Settings.__init__
build_model	call	Conv2D(filters=16, kernel_size=5, padding='same')
ZeroPadding2D(padding=(2, 0))	call	ZeroPadding2D
predict_disparity	call	DenseMapNet.__init__
train_batch	followed_by	range
get_max_disparity	call	load
concatenate	followed_by	MaxPooling2D(8)
Activation('relu', name='downsampled_stereo')	call	Activation
concatenate	followed_by	BatchNormalization()
load_test_data	followed_by	load_mask
Conv2D	has_padding	same
Activation	has_arg0	tanh
load_test_disparity	call	min
build_model	call	binary_crossentropy
Conv2DTranspose	has_padding	same
.predictor	call	train_network
Conv2D(filters=1, kernel_size=5, padding='same', dilation_rate=2)	call	Conv2D
build_model	call	Dropout(dropout)
DenseMapNet.__init__	followed_by	build_model
elapsed	followed_by	elapsed_time
utils.ElapsedTimer.print_elapsed_time	call	elapsed
utils.ElapsedTimer.print_elapsed_time	call	elapsed_time
