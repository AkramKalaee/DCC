asymmetric_3d_iou	call	minimum
utils.compute_3d_iou	call	sin
utils.compute_3d_iou	call	asymmetric_3d_iou
utils.compute_3d_iou	call	mean
maximum	followed_by	minimum
utils.compute_3d_iou	call	max
sin	followed_by	cos
utils.compute_3d_iou	call	cos
mean	followed_by	max
utils.compute_3d_iou	call	range
sin	followed_by	sin
range	followed_by	mean
asymmetric_3d_iou	call	maximum
cos	followed_by	sin
cos	followed_by	range
max	followed_by	asymmetric_3d_iou
build_fpn_mask_graph	followed_by	mrcnn_coord_symmetry_loss_graph
build	call	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p4')
resnet_graph	call	KL.Conv2D(64, (7, 7), strides=(2, 2), name='conv1', use_bias=True)
List	followed_by	fpn_classifier_graph
estimateSimilarityUmeyama	call	svd
resize_image	call	pad
diag	followed_by	transpose
evaluateModel	call	matmul
resnet_graph	call	range
y_rotation_matrix	followed_by	max
split	has_arg0	/
unmold_detections	call	unmold_mask
min	followed_by	min
.detect_eval	call	prepare
load_mask	call	annToMask
range	followed_by	abs
draw_detections	call	compute_matches
min	followed_by	transpose
compute_3d_iou_new	call	asymmetric_3d_iou
build	call	resnet_graph
range	followed_by	tuple
backproject	call	where
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p2')	followed_by	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p3')
Conv2D	has_name	rpn_conv_shared
resnet_graph	followed_by	KL.Conv2D(256, (1, 1), name='fpn_c5p5')
ones	followed_by	range
detect	call	log
compute_match_from_degree_cm	call	argsort
process_data	call	split
multiply	followed_by	where
mrcnn_coord_reg_loss_graph	call	where
reshape	followed_by	equal
mean	followed_by	matmul
log	followed_by	mold_inputs
zeros	has_arg0	(num_pred, num_gt)
where	followed_by	where
zeros	followed_by	ones
zeros	has_arg0	(0, 4, 4)
Conv2D	has_name	fpn_c2p2
mean	followed_by	getRANSACInliers
estimateSimilarityUmeyama	call	diag
range	followed_by	compute_RT_degree_cm_symmetry
mrcnn_coord_reg_loss_graph	followed_by	mrcnn_coord_symmetry_loss_graph
KL.Conv2D(256, (1, 1), name='fpn_c5p5')	followed_by	KL.Conv2D(256, (1, 1), name='fpn_c4p4')
display	followed_by	split
getRANSACInliers	call	evaluateModel
process_data	call	unique
ones_like	followed_by	detect
transform_coordinates_3d	call	ones
Conv2D	has_name	fpn_c4p4
zeros	followed_by	trim_zeros
compute_RT_overlaps	followed_by	compute_match_from_degree_cm
expand_dims	followed_by	mean
get_3d_bbox	followed_by	transform_coordinates_3d
build	call	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p3')
round	followed_by	round
build	call	build_fpn_mask_coords_graph
group	has_arg0	2
build	call	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p5')
compute_3d_iou_new	call	max
.detect_eval	call	load_scenes
group	followed_by	group
process_data	call	equal
identity_block	followed_by	conv_block
mrcnn_coord_symmetry_loss_graph	call	equal
KL.Conv2D(nb_filter3, (1, 1), name=conv_name_base + '2c', use_bias=use_bias)	call	Conv2D
identity	has_dtype	np.float32
mrcnn_coord_reg_loss_graph	call	size
resize_image	call	max
process_data	call	load
equal	followed_by	multiply
Conv2D	has_name	fpn_p3
stack	followed_by	stack
KL.Conv2D(nb_filter3, (1, 1), name=conv_name_base + '2c', use_bias=use_bias)	followed_by	KL.Conv2D(nb_filter3, (1, 1), strides=strides, name=conv_name_base + '1',
    use_bias=use_bias)
compute_matches	call	argsort
unmold_mask	followed_by	unmold_coord
reshape	has_arg0	(-1, mask_shape[2], mask_shape[3], 1)
split	has_arg0	 
load_coco	call	union
build	call	KL.Conv2D(256, (1, 1), name='fpn_c2p2')
mean	has_axis	(0, 1)
ones	followed_by	zeros
mean	followed_by	identity
cond	call	size
cos	followed_by	sin
cast	call	gather
identity_block	call	KL.Conv2D(nb_filter2, (kernel_size, kernel_size), padding='same', name=
    conv_name_base + '2b', use_bias=use_bias)
tuple	followed_by	range
draw_coco_detections	call	where
add_class	followed_by	add_image
KL.Conv2D(anchors_per_location * 4, (1, 1), padding='valid', activation=
    'linear', name='rpn_bbox_pred')	call	Conv2D
transpose	call	ones
abs	followed_by	size
stack	followed_by	unmold_detections
boolean_mask	followed_by	gather_nd
mean	followed_by	range
identity	has_arg0	4
mean	followed_by	expand_dims
mold_inputs	call	zeros
display	followed_by	display
gather_nd	followed_by	boolean_mask
mrcnn_coord_reg_loss_graph	call	gather_nd
.detect_eval	call	draw_detections
set_log_dir	followed_by	build
mrcnn_coord_symmetry_loss_graph	call	transpose
.detect_eval	call	split
KL.Conv2D(256, (1, 1), name='fpn_c2p2')	followed_by	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p2')
tile	has_arg0	(num_iou_thres, 1)
asymmetric_3d_iou	call	transform_coordinates_3d
reshape	has_arg0	(-1, pred_shape[2], pred_shape[3])
range	followed_by	compute_3d_iou_new
load_coco	call	add_class
draw_detections	call	compute_RT_degree_cm_symmetry
transform_coordinates_3d	followed_by	range
.detect_eval	call	align
where	followed_by	range
multiply	call	cast
ones	has_arg0	0
ones_like	followed_by	ones
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p3')	followed_by	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p4')
ones	has_arg0	(0, 3)
meshgrid	followed_by	flatten
estimateSimilarityUmeyama	call	identity
unmold_detections	call	where
compute_degree_cm_mAP	call	range
zeros	followed_by	split
range	followed_by	argsort
rpn_graph	call	KL.Conv2D(2 * anchors_per_location, (1, 1), padding='valid', activation=
    'linear', name='rpn_class_raw')
mrcnn_coord_reg_loss_graph	call	gather
List	followed_by	zeros
conv_block	call	KL.Conv2D(nb_filter3, (1, 1), strides=strides, name=conv_name_base + '1',
    use_bias=use_bias)
build	call	KL.Conv2D(256, (1, 1), name='fpn_c5p5')
argsort	followed_by	cumsum
KL.Conv2D(2 * anchors_per_location, (1, 1), padding='valid', activation=
    'linear', name='rpn_class_raw')	followed_by	KL.Conv2D(anchors_per_location * 4, (1, 1), padding='valid', activation=
    'linear', name='rpn_bbox_pred')
load_scenes	call	expand_dims
boolean_mask	followed_by	abs
where	followed_by	draw_text
compute_3d_iou_new	call	get_3d_bbox
estimateSimilarityUmeyama	call	mean
mean	has_axis	1
mold_inputs	followed_by	log
draw_detections	call	draw_text
reshape	followed_by	resize_nearest_neighbor
compute_matches	call	where
KL.Conv2D(nb_filter1, (1, 1), strides=strides, name=conv_name_base + '2a',
    use_bias=use_bias)	followed_by	KL.Conv2D(nb_filter2, (kernel_size, kernel_size), padding='same', name=
    conv_name_base + '2b', use_bias=use_bias)
build	call	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p2')
process_data	call	multiply
build	call	List
stack	has_axis	0
mrcnn_coord_reg_loss_graph	call	stack
split	followed_by	split
flatten	followed_by	flatten
log	followed_by	log
draw_detections	call	draw
prepare	followed_by	TOICOCODataset.__init__
asymmetric_3d_iou	call	maximum
align	call	ones
mold_inputs	call	resize_image
transpose	followed_by	transpose
min	call	trace
gather	followed_by	gather
compute_matches	call	range
align	call	identity
.detect_eval	call	draw_coco_detections
matmul	followed_by	diag
draw_text	followed_by	range
MaskRCNN.__init__	call	build
diag	followed_by	mean
rpn_graph	call	KL.Conv2D(anchors_per_location * 4, (1, 1), padding='valid', activation=
    'linear', name='rpn_bbox_pred')
compose_image_meta	call	List
transpose	followed_by	min
zeros	followed_by	range
matmul	followed_by	where
cast	followed_by	stack
group	has_arg0	1
estimateSimilarityTransform	call	transpose
mrcnn_coord_reg_loss_graph	call	mean
estimateSimilarityUmeyama	followed_by	evaluateModel
mrcnn_coord_symmetry_loss_graph	call	reshape
compute_degree_cm_mAP	call	zeros
draw_detections	call	range
set_log_dir	call	group
compute_overlaps_masks	followed_by	ones
Conv2D	has_arg1	(3, 3)
draw_detections	call	transform_coordinates_3d
mrcnn_coord_symmetry_loss_graph	call	shape
detect	followed_by	align
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p2')	call	Conv2D
zeros	followed_by	zeros
load_weights	call	set_log_dir
extract_bboxes	followed_by	split
backproject	call	inv
identity_block	followed_by	identity_block
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p5')	call	Conv2D
zeros	has_dtype	np.uint8
compute_3d_matches	call	ones
range	has_arg0	4
range	followed_by	identity_block
tuple	followed_by	tuple
cast	followed_by	resnet_graph
matmul	followed_by	svd
generate_anchors	call	flatten
backproject	followed_by	estimateSimilarityTransform
compute_degree_cm_mAP	call	ones_like
KL.MaxPooling2D(pool_size=(1, 1), strides=2, name='fpn_p6')	call	MaxPooling2D
KL.MaxPooling2D(pool_size=(1, 1), strides=2, name='fpn_p6')	followed_by	generate_pyramid_anchors
KL.Conv2D(256, (1, 1), name='fpn_c3p3')	call	Conv2D
generate_pyramid_anchors	call	range
Conv2D	has_arg1	(7, 7)
map_source_class_id	followed_by	annToMask
mrcnn_coord_reg_loss_graph	call	boolean_mask
zeros	followed_by	argsort
tile	followed_by	zeros
reshape	followed_by	transpose
transform_coordinates_3d	followed_by	calculate_2d_projections
Conv2D	has_arg1	(1, 1)
.detect_eval	call	display
KL.Conv2D(nb_filter1, (1, 1), strides=strides, name=conv_name_base + '2a',
    use_bias=use_bias)	call	Conv2D
build	call	fpn_classifier_graph
zeros	has_arg0	(0, 3)
draw	followed_by	range
compute_ap_from_matches_scores	call	where
process_data	call	zeros
KL.Conv2D(nb_filter3, (1, 1), strides=strides, name=conv_name_base + '1',
    use_bias=use_bias)	call	Conv2D
extract_bboxes	call	where
max	followed_by	asymmetric_3d_iou
y_rotation_matrix	call	sin
where	followed_by	min
sin	followed_by	cos
KL.Conv2D(256, (1, 1), name='fpn_c4p4')	call	Conv2D
tile	followed_by	range
meshgrid	followed_by	meshgrid
Conv2D	has_name	fpn_p4
compute_3d_iou_new	call	y_rotation_matrix
prepare	followed_by	load_weights
transpose	followed_by	where
draw_coco_detections	call	range
generate_anchors	call	meshgrid
compute_degree_cm_mAP	call	mean
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p4')	call	Conv2D
inv	followed_by	logical_and
build	call	shape
.detect_eval	call	load_mask
align	call	diag
union	followed_by	List
zeros	followed_by	ones_like
align	call	transpose
compute_RT_degree_cm_symmetry	call	min
transform_coordinates_3d	followed_by	get_3d_bbox
align	call	backproject
backproject	call	transpose
Conv2D	has_name	fpn_p5
estimateSimilarityUmeyama	call	det
tile	has_arg0	(num_degree_thres, num_shift_thres, 1)
compute_degree_cm_mAP	call	compute_RT_overlaps
List	followed_by	add_class
resnet_graph	call	identity_block
range	followed_by	range
load_scenes	call	zeros
add_image	followed_by	mean
max	followed_by	max
ones_like	followed_by	align
range	followed_by	estimateSimilarityUmeyama
align	call	estimateSimilarityTransform
sqrt	followed_by	sqrt
split	followed_by	add_image
backproject	call	ones
zeros	has_arg0	(num_degree_thres, num_shift_thres, 0)
matmul	call	transpose
build_rpn_model	followed_by	List
build	call	cast
split	followed_by	MaskRCNN.__init__
process_data	call	List
resize_image	followed_by	mold_image
load	followed_by	ones_like
trace	followed_by	trace
MaxPooling2D	has_padding	same
TOICOCODataset.__init__	followed_by	load_scenes
build	call	KL.Conv2D(256, (1, 1), name='fpn_c3p3')
shape	followed_by	reshape
.detect_eval	call	MaskRCNN.__init__
resnet_graph	call	conv_block
load_mask	followed_by	extract_bboxes
align	call	range
Conv2D	has_name	fpn_p2
mrcnn_coord_reg_loss_graph	call	constant
ones	followed_by	compute_3d_matches
resize_nearest_neighbor	followed_by	resize_nearest_neighbor
group	has_arg0	3
zeros	has_arg0	(4, 4)
ones_like	followed_by	range
KL.MaxPooling2D((3, 3), strides=(2, 2), padding='same')	followed_by	conv_block
prepare	call	List
unmold_detections	call	stack
y_rotation_matrix	call	cos
load_scenes	call	mean
.detect_eval	call	load_coco
detect	call	stack
load_coco	call	add_image
range	followed_by	draw_text
Conv2D	has_arg0	(kernel_size, kernel_size)
draw_detections	call	calculate_2d_projections
annToRLE	call	merge
align	followed_by	ones_like
range	followed_by	zeros
estimateSimilarityTransform	call	mean
mrcnn_coord_symmetry_loss_graph	followed_by	mrcnn_coord_reg_loss_graph
reshape	has_arg0	(-1, pred_shape[2], pred_shape[3], pred_shape[4], 3)
multiply	call	expand_dims
TOICOCODataset.__init__	call	add_class
mold_inputs	call	stack
fpn_classifier_graph	call	KL.Dropout(0.5)
draw_detections	followed_by	draw_coco_detections
build	call	build_fpn_mask_coords_deeper_graph
KL.Conv2D(nb_filter2, (kernel_size, kernel_size), padding='same', name=
    conv_name_base + '2b', use_bias=use_bias)	followed_by	KL.Conv2D(nb_filter3, (1, 1), name=conv_name_base + '2c', use_bias=use_bias)
mrcnn_coord_symmetry_loss_graph	call	resize_nearest_neighbor
Conv2D	has_name	rpn_bbox_pred
transpose	followed_by	mean
load_image	followed_by	load_depth
load_coco	followed_by	prepare
build	call	KL.Conv2D(256, (1, 1), name='fpn_c4p4')
where	followed_by	ones
resize_nearest_neighbor	has_arg0	(pred_shape[2], pred_shape[3])
det	followed_by	matmul
getRANSACInliers	followed_by	estimateSimilarityUmeyama
build	call	generate_pyramid_anchors
draw_text	followed_by	compute_matches
zeros	has_arg0	(h, w, num_instance, 3)
unmold_detections	call	range
draw_detections	call	get_3d_bbox
stack	has_axis	2
compute_3d_iou_new	call	range
mean	followed_by	mean
range	followed_by	mean
KL.Conv2D(256, (1, 1), name='fpn_c3p3')	followed_by	KL.Conv2D(256, (1, 1), name='fpn_c2p2')
generate_pyramid_anchors	call	generate_anchors
align	followed_by	draw_detections
split	followed_by	load
group	has_arg0	6
unmold_detections	call	min
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p4')	followed_by	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p5')
load_mask	call	ones
unmold_detections	call	unmold_coord
compute_match_from_degree_cm	call	ones
argsort	followed_by	zeros
evaluateModel	call	where
compute_degree_cm_mAP	call	ones
reshape	has_arg0	(-1, mask_shape[2], mask_shape[3])
mrcnn_coord_symmetry_loss_graph	call	multiply
KL.Conv2D(512, (3, 3), padding='same', activation='relu', strides=
    anchor_stride, name='rpn_conv_shared')	followed_by	KL.Conv2D(2 * anchors_per_location, (1, 1), padding='valid', activation=
    'linear', name='rpn_class_raw')
KL.Conv2D(nb_filter1, (1, 1), name=conv_name_base + '2a', use_bias=use_bias)	call	Conv2D
mrcnn_coord_reg_loss_graph	call	reshape
compute_match_from_degree_cm	call	range
.detect_eval	call	load
rpn_graph	call	KL.Conv2D(512, (3, 3), padding='same', activation='relu', strides=
    anchor_stride, name='rpn_conv_shared')
max	has_arg0	1
compute_ap_from_matches_scores	call	maximum
load_scenes	followed_by	load_real_scenes
.detect_eval	call	load_image
mean	has_axis	0
where	followed_by	count_nonzero
compute_RT_degree_cm_symmetry	call	det
zeros	followed_by	diag
cast	has_dtype	tf.bool
.detect_eval	call	load_depth
compute_degree_cm_mAP	call	List
zeros	has_arg0	0
det	followed_by	det
zeros	has_arg0	(0, 4)
KL.Conv2D(512, (3, 3), padding='same', activation='relu', strides=
    anchor_stride, name='rpn_conv_shared')	call	Conv2D
build	call	build_fpn_mask_graph
build_fpn_mask_coords_deeper_graph	followed_by	build_fpn_mask_graph
.detect_eval	call	range
build	call	mrcnn_coord_symmetry_loss_graph
identity	followed_by	zeros
load	followed_by	equal
cast	has_dtype	tf.float32
load_mask	call	process_data
estimateSimilarityTransform	call	getRANSACInliers
Conv2D	has_name	rpn_class_raw
ones	followed_by	ones
extract_bboxes	call	range
compute_RT_degree_cm_symmetry	call	trace
compute_ap_from_matches_scores	call	cumsum
range	followed_by	compute_ap_from_matches_scores
linspace	has_kernel_size	(1,101)
compute_degree_cm_mAP	call	compute_match_from_degree_cm
build_fpn_mask_coords_graph	followed_by	build_fpn_mask_coords_deeper_graph
compute_degree_cm_mAP	call	compute_3d_matches
Conv2D	has_name	fpn_c5p5
generate_pyramid_anchors	followed_by	build_rpn_model
compute_degree_cm_mAP	call	tile
MaxPooling2D	has_arg0	(3, 3)
annToMask	call	annToRLE
mrcnn_coord_reg_loss_graph	call	shape
KL.Conv2D(64, (7, 7), strides=(2, 2), name='conv1', use_bias=True)	followed_by	KL.MaxPooling2D((3, 3), strides=(2, 2), padding='same')
draw	call	tuple
conv_block	followed_by	identity_block
.detect_eval	call	load_weights
zeros	has_dtype	np.int_
range	followed_by	transform_coordinates_3d
KL.Conv2D(nb_filter1, (1, 1), name=conv_name_base + '2a', use_bias=use_bias)	followed_by	KL.Conv2D(nb_filter2, (kernel_size, kernel_size), padding='same', name=
    conv_name_base + '2b', use_bias=use_bias)
resize_image	call	round
compute_3d_iou_new	call	transform_coordinates_3d
maximum	followed_by	minimum
.detect_eval	call	linspace
KL.Conv2D(64, (7, 7), strides=(2, 2), name='conv1', use_bias=True)	call	Conv2D
List	call	unique
compute_RT_overlaps	call	range
zeros	has_arg0	(num_classes + 1, num_degree_thres, num_shift_thres)
resnet_graph	call	KL.MaxPooling2D((3, 3), strides=(2, 2), padding='same')
KL.Conv2D(nb_filter2, (kernel_size, kernel_size), padding='same', name=
    conv_name_base + '2b', use_bias=use_bias)	call	Conv2D
TOICOCODataset.__init__	followed_by	load_real_scenes
compute_RT_degree_cm_symmetry	call	diag
zeros	has_dtype	np.float32
compute_matches	call	compute_overlaps_masks
build_rpn_model	call	rpn_graph
get_3d_bbox	call	transpose
sin	followed_by	sin
MaxPooling2D	has_name	fpn_p6
.detect_eval	call	extract_bboxes
split	has_arg0	.
where	followed_by	cond
extract_bboxes	call	zeros
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p3')	call	Conv2D
load_depth	followed_by	load_mask
pad	has_constant_values	0
compute_3d_matches	call	where
List	followed_by	unique
ones	has_arg0	(1, coordinates.shape[1])
compute_matches	followed_by	range
KL.Conv2D(256, (1, 1), name='fpn_c4p4')	followed_by	KL.Conv2D(256, (1, 1), name='fpn_c3p3')
calculate_2d_projections	call	transpose
asymmetric_3d_iou	call	get_3d_bbox
reshape	has_arg0	(-1, coord_shape[2], coord_shape[3], 3)
det	followed_by	diag
Conv2D	has_name	fpn_c3p3
flatten	followed_by	sqrt
.detect_eval	call	ones_like
Conv2D	has_arg0	64
process_data	followed_by	map_source_class_id
estimateSimilarityUmeyama	call	matmul
zeros	has_arg0	(len(lines), 3)
zeros	has_arg0	(num_classes + 1, num_iou_thres)
KL.Dropout(0.5)	call	Dropout
group	has_arg0	4
KL.MaxPooling2D((3, 3), strides=(2, 2), padding='same')	call	MaxPooling2D
load_coco	call	List
zeros	has_arg0	(num_iou_thres, 0)
compose_image_meta	followed_by	zeros
unique	followed_by	zeros
load_real_scenes	call	split
stack	followed_by	zeros
KL.Conv2D(2 * anchors_per_location, (1, 1), padding='valid', activation=
    'linear', name='rpn_class_raw')	call	Conv2D
ones	has_arg0	(num_instances, 3)
getRANSACInliers	call	estimateSimilarityUmeyama
range	has_arg1	8
.detect_eval	call	mean
mrcnn_coord_symmetry_loss_graph	call	where
compute_RT_overlaps	call	zeros
mrcnn_coord_reg_loss_graph	call	cast
reshape	followed_by	reshape
compute_3d_matches	call	range
mean	followed_by	constant
unmold_mask	call	zeros
get_3d_bbox	followed_by	get_3d_bbox
reshape	followed_by	shape
gather	followed_by	cast
maximum	followed_by	where
MaskRCNN.__init__	call	set_log_dir
compute_match_from_degree_cm	followed_by	tile
group	has_arg0	5
.detect_eval	call	TOICOCODataset.__init__
trim_zeros	followed_by	argsort
detect	call	unmold_detections
compute_3d_matches	call	compute_3d_iou_new
ones	has_arg0	(num_degree_thres, num_shift_thres, num_pred)
compute_3d_matches	call	zeros
trim_zeros	followed_by	trim_zeros
compute_RT_overlaps	call	compute_RT_degree_cm_symmetry
identity_block	call	KL.Conv2D(nb_filter1, (1, 1), name=conv_name_base + '2a', use_bias=use_bias)
compute_degree_cm_mAP	call	compute_ap_from_matches_scores
range	followed_by	unmold_mask
ones	has_arg0	(len(class_ids), 3)
sqrt	followed_by	meshgrid
draw_coco_detections	followed_by	split
load_mask	call	zeros
split	has_arg0	_
mrcnn_coord_reg_loss_graph	followed_by	mrcnn_coord_reg_loss_graph
asymmetric_3d_iou	call	minimum
compute_matches	call	ones
ones	followed_by	transpose
abs	followed_by	backproject
conv_block	call	KL.Conv2D(nb_filter2, (kernel_size, kernel_size), padding='same', name=
    conv_name_base + '2b', use_bias=use_bias)
svd	followed_by	det
compute_ap_from_matches_scores	followed_by	mean
draw_text	call	min
logical_and	followed_by	where
mrcnn_coord_reg_loss_graph	call	abs
load_real_scenes	followed_by	prepare
conv_block	followed_by	range
estimateSimilarityTransform	followed_by	zeros
.detect_eval	call	detect
evaluateModel	call	count_nonzero
transpose	followed_by	reshape
TOICOCODataset.__init__	followed_by	load_coco
range	has_arg0	0
List	followed_by	List
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p5')	followed_by	KL.MaxPooling2D(pool_size=(1, 1), strides=2, name='fpn_p6')
compute_3d_matches	call	argsort
mold_inputs	call	compose_image_meta
max	followed_by	round
Dropout	has_arg0	0.5
compute_RT_degree_cm_symmetry	followed_by	draw_text
range	followed_by	where
load_real_scenes	call	add_image
load_scenes	followed_by	prepare
calculate_2d_projections	followed_by	get_3d_bbox
compute_degree_cm_mAP	followed_by	linspace
compute_matches	call	zeros
range	has_kernel_size	(31,1)
zeros	followed_by	compute_RT_overlaps
stack	has_axis	1
reshape	has_arg0	(-1,)
load_weights	followed_by	load_image
transpose	followed_by	trace
min	followed_by	range
zeros	has_arg0	(num_pred, num_gt, 2)
fpn_classifier_graph	followed_by	build_fpn_mask_coords_graph
build	call	KL.MaxPooling2D(pool_size=(1, 1), strides=2, name='fpn_p6')
zeros	has_dtype	np.int32
transform_coordinates_3d	followed_by	maximum
ones	has_arg0	(num_degree_thres, num_shift_thres, num_gt)
stack	followed_by	gather
max	call	min
compute_matches	call	trim_zeros
linspace	has_output_feature_size	0
conv_block	call	KL.Conv2D(nb_filter3, (1, 1), name=conv_name_base + '2c', use_bias=use_bias)
build	call	mrcnn_coord_reg_loss_graph
cast	followed_by	boolean_mask
argsort	followed_by	compute_overlaps_masks
draw_text	followed_by	transform_coordinates_3d
getRANSACInliers	call	range
where	followed_by	cast
load_scenes	call	split
transpose	followed_by	identity
calculate_2d_projections	followed_by	draw
load_scenes	call	range
mean	followed_by	load
draw	call	range
.detect_eval	call	compute_degree_cm_mAP
cast	call	stack
generate_anchors	call	sqrt
draw_coco_detections	call	draw_text
compute_ap_from_matches_scores	call	range
load_mask	call	stack
round	followed_by	pad
resize_nearest_neighbor	followed_by	reshape
split	followed_by	mean
detect	call	mold_inputs
unmold_coord	call	zeros
build	call	build_rpn_model
mrcnn_coord_symmetry_loss_graph	call	cond
compute_3d_iou_new	followed_by	ones
annToMask	followed_by	stack
ones	has_dtype	np.float32
backproject	call	logical_and
argsort	followed_by	where
Conv2D	has_arg0	512
log	followed_by	stack
Conv2D	has_arg0	256
MaskRCNN.__init__	followed_by	TOICOCODataset.__init__
KL.Conv2D(256, (1, 1), name='fpn_c2p2')	call	Conv2D
size	followed_by	mean
reshape	has_arg0	(-1, pred_shape[2], pred_shape[3], pred_shape[4])
range	followed_by	y_rotation_matrix
KL.Conv2D(256, (1, 1), name='fpn_c5p5')	call	Conv2D
shape	followed_by	shape
shape	followed_by	cast
expand_dims	has_axis	0
range	followed_by	generate_anchors
identity_block	call	KL.Conv2D(nb_filter3, (1, 1), name=conv_name_base + '2c', use_bias=use_bias)
mrcnn_coord_reg_loss_graph	call	transpose
zeros	followed_by	stack
compute_3d_matches	followed_by	tile
range	has_arg0	1
load_mask	call	map_source_class_id
constant	has_arg0	0.0
cumsum	followed_by	range
conv_block	call	KL.Conv2D(nb_filter1, (1, 1), strides=strides, name=conv_name_base + '2a',
    use_bias=use_bias)
range	followed_by	maximum
load_scenes	call	add_image
mold_image	followed_by	compose_image_meta
compute_ap_from_matches_scores	call	argsort
mold_inputs	call	mold_image
draw_detections	call	where
range	has_output_feature_size	0
zeros	has_arg0	(num_instances, 4, 4)
align	call	zeros
mrcnn_coord_symmetry_loss_graph	followed_by	fpn_classifier_graph
compute_RT_degree_cm_symmetry	call	transpose
range	followed_by	compute_degree_cm_mAP
unmold_coord	followed_by	stack
Conv2D	has_arg0	(1, 1)
.detect_eval	call	load_real_scenes
estimateSimilarityTransform	call	estimateSimilarityUmeyama
align	call	abs
mrcnn_coord_symmetry_loss_graph	followed_by	mrcnn_coord_symmetry_loss_graph
compute_overlaps	call	range
compute_iou	call	maximum
compute_overlaps	call	compute_iou
zeros	has_arg0	(boxes1.shape[0], boxes2.shape[0])
utils.compute_recall	call	argmax
utils.compute_recall	call	where
minimum	followed_by	maximum
compute_overlaps	call	zeros
argmax	followed_by	where
maximum	followed_by	minimum
maximum	has_arg0	0
compute_iou	call	minimum
range	followed_by	compute_iou
argmax	has_axis	1
utils.compute_recall	call	compute_overlaps
compute_overlaps	followed_by	argmax
zeros	followed_by	range
maximum	followed_by	maximum
calculate_2d_projections	followed_by	mean
ones	has_arg0	(num_projection_thres, num_gt)
zeros	followed_by	ones_like
zeros	followed_by	compute_RT_projection_2d_overlaps
calculate_2d_projections	followed_by	transform_coordinates_3d
ones	has_arg0	(num_projection_thres, num_pred)
argsort	followed_by	cumsum
compute_match_from_projection_2d_dist	call	argsort
tile	has_arg0	(num_iou_thres, 1)
compute_3d_iou_new	call	range
abs	followed_by	det
utils.compute_2D_projection_mAP	call	mean
zeros	has_arg0	(num_classes + 1, num_projection_thres)
utils.compute_2D_projection_mAP	call	tile
range	followed_by	compute_ap_from_matches_scores
ones	followed_by	range
compute_match_from_projection_2d_dist	followed_by	tile
y_rotation_matrix	call	sin
calculate_2d_projections	followed_by	min
utils.compute_2D_projection_mAP	call	compute_match_from_projection_2d_dist
compute_RT_projection_2d_symmetry	call	transform_coordinates_3d
ones	has_arg0	(1, coordinates.shape[1])
transform_coordinates_3d	followed_by	get_3d_bbox
compute_3d_matches	call	where
tile	has_arg0	(num_projection_thres, 1)
det	followed_by	det
compute_ap_from_matches_scores	call	range
range	followed_by	compute_3d_iou_new
zeros	has_arg0	0
compute_RT_projection_2d_symmetry	call	y_rotation_matrix
compute_RT_projection_2d_symmetry	call	abs
zeros	has_arg0	(num_projection_thres, 0)
sin	followed_by	cos
range	followed_by	mean
range	followed_by	range
y_rotation_matrix	followed_by	max
cos	followed_by	sin
ones	followed_by	ones
compute_RT_projection_2d_overlaps	call	range
y_rotation_matrix	call	cos
tile	followed_by	range
argsort	followed_by	where
zeros	has_arg0	(0, 3)
compute_ap_from_matches_scores	followed_by	mean
transform_coordinates_3d	followed_by	range
det	followed_by	abs
zeros	has_dtype	np.float32
utils.compute_2D_projection_mAP	call	compute_RT_projection_2d_overlaps
utils.compute_2D_projection_mAP	call	compute_ap_from_matches_scores
min	followed_by	diag
mean	followed_by	range
asymmetric_3d_iou	call	get_3d_bbox
zeros	has_arg0	(num_classes + 1, num_iou_thres)
range	followed_by	argsort
compute_3d_matches	call	argsort
List	followed_by	List
transform_coordinates_3d	followed_by	y_rotation_matrix
zeros	has_arg0	(0, 4)
utils.compute_2D_projection_mAP	call	compute_3d_matches
ones	has_dtype	np.float32
utils.compute_2D_projection_mAP	call	ones_like
abs	call	det
argsort	followed_by	zeros
y_rotation_matrix	followed_by	calculate_2d_projections
compute_3d_iou_new	call	transform_coordinates_3d
calculate_2d_projections	call	transpose
get_3d_bbox	followed_by	get_3d_bbox
compute_3d_iou_new	call	asymmetric_3d_iou
compute_ap_from_matches_scores	call	cumsum
det	followed_by	transform_coordinates_3d
ones_like	followed_by	ones
compute_ap_from_matches_scores	call	argsort
utils.compute_2D_projection_mAP	call	List
max	followed_by	asymmetric_3d_iou
zeros	has_arg0	(num_iou_thres, 0)
min	call	mean
get_3d_bbox	followed_by	transform_coordinates_3d
range	followed_by	maximum
abs	followed_by	abs
compute_RT_projection_2d_symmetry	call	calculate_2d_projections
compute_match_from_projection_2d_dist	call	range
transform_coordinates_3d	followed_by	calculate_2d_projections
maximum	followed_by	where
maximum	followed_by	minimum
range	followed_by	y_rotation_matrix
utils.compute_2D_projection_mAP	call	range
range	followed_by	transform_coordinates_3d
compute_3d_matches	call	ones
cumsum	followed_by	range
asymmetric_3d_iou	call	transform_coordinates_3d
compute_RT_projection_2d_symmetry	call	diag
ones	followed_by	compute_3d_matches
compute_3d_iou_new	call	get_3d_bbox
get_3d_bbox	call	transpose
compute_RT_projection_2d_symmetry	call	min
compute_3d_iou_new	followed_by	ones
sin	followed_by	sin
compute_3d_iou_new	call	max
compute_ap_from_matches_scores	call	maximum
tile	followed_by	zeros
asymmetric_3d_iou	call	maximum
diag	followed_by	transform_coordinates_3d
ones	has_arg0	0
mean	has_axis	0
zeros	followed_by	argsort
utils.compute_2D_projection_mAP	call	zeros
range	has_arg0	1
zeros	has_arg0	(0, 4, 4)
compute_3d_matches	call	compute_3d_iou_new
asymmetric_3d_iou	call	minimum
compute_RT_projection_2d_symmetry	call	det
compute_3d_matches	call	range
List	followed_by	zeros
compute_RT_projection_2d_symmetry	call	range
utils.compute_2D_projection_mAP	call	ones
compute_ap_from_matches_scores	call	where
zeros	followed_by	zeros
compute_RT_projection_2d_symmetry	call	mean
compute_match_from_projection_2d_dist	call	ones
range	followed_by	compute_RT_projection_2d_symmetry
range	followed_by	zeros
zeros	followed_by	range
compute_RT_projection_2d_overlaps	call	compute_RT_projection_2d_symmetry
compute_3d_matches	call	zeros
mean	followed_by	mean
transform_coordinates_3d	call	ones
compute_3d_iou_new	call	y_rotation_matrix
compute_RT_projection_2d_overlaps	call	zeros
compute_RT_projection_2d_overlaps	followed_by	compute_match_from_projection_2d_dist
compute_3d_matches	followed_by	tile
zeros	has_arg0	(num_pred, num_gt)
transform_coordinates_3d	followed_by	maximum
train	call	max
boolean_mask	followed_by	abs
mean	has_axis	0
range	followed_by	zeros
List	followed_by	List
stack	has_axis	0
equal	followed_by	multiply
data_generator	followed_by	data_generator
mean	followed_by	constant
Conv2D	has_name	fpn_p4
Conv2D	has_name	rpn_class_raw
load_weights	followed_by	TOICOCODataset.__init__
conv_block	call	KL.Conv2D(nb_filter3, (1, 1), name=conv_name_base + '2c', use_bias=use_bias)
resnet_graph	call	range
MaskRCNN.__init__	followed_by	load_weights
constant	has_arg0	0.0
.train	call	split
mrcnn_coord_symmetry_loss_graph	followed_by	mrcnn_coord_reg_loss_graph
resize_nearest_neighbor	has_arg0	(pred_shape[2], pred_shape[3])
mrcnn_coord_reg_loss_graph	call	stack
ModelCheckpoint	followed_by	CSVLogger
cond	call	size
cast	call	gather
mrcnn_coord_reg_loss_graph	call	boolean_mask
.train	call	load_weights
load_coco	followed_by	prepare
abs	followed_by	size
gather	followed_by	cast
prepare	followed_by	TOICOCODataset.__init__
.train	call	get_imagenet_weights
Conv2D	has_name	fpn_c5p5
Conv2D	has_arg1	(7, 7)
get_imagenet_weights	followed_by	load_weights
load_coco	call	add_class
.train	call	load_scenes
Dropout	has_arg0	0.5
gather	followed_by	gather
gather_nd	followed_by	boolean_mask
build	call	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p5')
train	call	log
split	followed_by	split
mrcnn_coord_reg_loss_graph	followed_by	mrcnn_coord_symmetry_loss_graph
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p2')	followed_by	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p3')
generate_anchors	call	sqrt
get_imagenet_weights	call	get_file
build	call	KL.Conv2D(256, (1, 1), name='fpn_c3p3')
mrcnn_coord_reg_loss_graph	call	gather
compile	call	reduce_mean
range	followed_by	generate_anchors
load_scenes	call	add_image
Conv2D	has_name	fpn_c2p2
flatten	followed_by	flatten
mrcnn_coord_reg_loss_graph	call	gather_nd
compile	followed_by	log
reshape	followed_by	transpose
group	has_arg0	4
mrcnn_coord_symmetry_loss_graph	followed_by	fpn_classifier_graph
split	followed_by	load_weights
KL.Conv2D(nb_filter1, (1, 1), strides=strides, name=conv_name_base + '2a',
    use_bias=use_bias)	call	Conv2D
identity_block	call	KL.Conv2D(nb_filter1, (1, 1), name=conv_name_base + '2a', use_bias=use_bias)
mrcnn_coord_reg_loss_graph	call	cast
KL.Conv2D(64, (7, 7), strides=(2, 2), name='conv1', use_bias=True)	followed_by	KL.MaxPooling2D((3, 3), strides=(2, 2), padding='same')
fpn_classifier_graph	followed_by	build_fpn_mask_coords_graph
SGD	has_clipnorm	5.0
rpn_graph	call	KL.Conv2D(512, (3, 3), padding='same', activation='relu', strides=
    anchor_stride, name='rpn_conv_shared')
KL.Conv2D(256, (1, 1), name='fpn_c5p5')	followed_by	KL.Conv2D(256, (1, 1), name='fpn_c4p4')
mean	has_axis	(0, 1)
Conv2D	has_name	fpn_c3p3
KL.Conv2D(2 * anchors_per_location, (1, 1), padding='valid', activation=
    'linear', name='rpn_class_raw')	followed_by	KL.Conv2D(anchors_per_location * 4, (1, 1), padding='valid', activation=
    'linear', name='rpn_bbox_pred')
build	call	KL.Conv2D(256, (1, 1), name='fpn_c4p4')
.train	call	load_coco
KL.Conv2D(256, (1, 1), name='fpn_c3p3')	followed_by	KL.Conv2D(256, (1, 1), name='fpn_c2p2')
group	has_arg0	1
KL.Conv2D(256, (1, 1), name='fpn_c2p2')	followed_by	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p2')
reshape	has_arg0	(-1, coord_shape[2], coord_shape[3], 3)
train	call	compile
prepare	followed_by	train
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p3')	followed_by	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p4')
compile	call	add_n
build	call	build_fpn_mask_coords_deeper_graph
mrcnn_coord_reg_loss_graph	call	transpose
build	call	cast
.train	call	TOICOCODataset.__init__
meshgrid	followed_by	meshgrid
train	call	CSVLogger
mrcnn_coord_reg_loss_graph	call	shape
load_weights	call	set_log_dir
resnet_graph	call	identity_block
get_file	has_md5_hash	a268eb855778b3df3c7506639542a6af
reshape	has_arg0	(-1, pred_shape[2], pred_shape[3])
build	call	build_rpn_model
load_scenes	call	mean
List	followed_by	fpn_classifier_graph
resnet_graph	call	KL.MaxPooling2D((3, 3), strides=(2, 2), padding='same')
shape	followed_by	reshape
group	has_arg0	3
reshape	followed_by	reshape
build	call	build_fpn_mask_graph
.train	call	display
union	followed_by	List
KL.Conv2D(512, (3, 3), padding='same', activation='relu', strides=
    anchor_stride, name='rpn_conv_shared')	call	Conv2D
KL.Conv2D(512, (3, 3), padding='same', activation='relu', strides=
    anchor_stride, name='rpn_conv_shared')	followed_by	KL.Conv2D(2 * anchors_per_location, (1, 1), padding='valid', activation=
    'linear', name='rpn_class_raw')
Conv2D	has_arg0	(1, 1)
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p5')	call	Conv2D
KL.Conv2D(nb_filter1, (1, 1), name=conv_name_base + '2a', use_bias=use_bias)	call	Conv2D
prepare	call	List
mrcnn_coord_symmetry_loss_graph	followed_by	mrcnn_coord_symmetry_loss_graph
mrcnn_coord_symmetry_loss_graph	call	reshape
identity_block	call	KL.Conv2D(nb_filter3, (1, 1), name=conv_name_base + '2c', use_bias=use_bias)
log	followed_by	log
build	call	generate_pyramid_anchors
Conv2D	has_arg0	(kernel_size, kernel_size)
mrcnn_coord_reg_loss_graph	call	mean
stack	has_axis	1
conv_block	call	KL.Conv2D(nb_filter1, (1, 1), strides=strides, name=conv_name_base + '2a',
    use_bias=use_bias)
build	call	KL.MaxPooling2D(pool_size=(1, 1), strides=2, name='fpn_p6')
reshape	has_arg0	(-1, mask_shape[2], mask_shape[3], 1)
build	call	List
build	call	resnet_graph
build_rpn_model	followed_by	List
rpn_graph	call	KL.Conv2D(anchors_per_location * 4, (1, 1), padding='valid', activation=
    'linear', name='rpn_bbox_pred')
build	call	mrcnn_coord_reg_loss_graph
KL.MaxPooling2D(pool_size=(1, 1), strides=2, name='fpn_p6')	followed_by	generate_pyramid_anchors
group	followed_by	group
split	followed_by	add_image
build	call	build_fpn_mask_coords_graph
mrcnn_coord_reg_loss_graph	call	where
mrcnn_coord_symmetry_loss_graph	call	multiply
load_scenes	call	split
load_weights	followed_by	get_imagenet_weights
Conv2D	has_name	rpn_bbox_pred
mrcnn_coord_reg_loss_graph	followed_by	mrcnn_coord_reg_loss_graph
reduce_mean	followed_by	reduce_mean
where	followed_by	cond
zeros	has_dtype	np.float32
mrcnn_coord_reg_loss_graph	call	abs
set_trainable	followed_by	compile
resize_nearest_neighbor	followed_by	resize_nearest_neighbor
Conv2D	has_arg0	64
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p5')	followed_by	KL.MaxPooling2D(pool_size=(1, 1), strides=2, name='fpn_p6')
mrcnn_coord_reg_loss_graph	call	reshape
cast	followed_by	boolean_mask
KL.Dropout(0.5)	call	Dropout
Conv2D	has_arg0	256
ModelCheckpoint	has_period	5
generate_pyramid_anchors	call	range
MaskRCNN.__init__	call	build
.train	call	MaskRCNN.__init__
KL.Conv2D(nb_filter3, (1, 1), name=conv_name_base + '2c', use_bias=use_bias)	call	Conv2D
compile	call	keras.regularizers.l2(self.config.WEIGHT_DECAY)
reshape	has_arg0	(-1, pred_shape[2], pred_shape[3], pred_shape[4], 3)
MaskRCNN.__init__	call	set_log_dir
mrcnn_coord_symmetry_loss_graph	call	cond
split	has_arg0	_
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p4')	call	Conv2D
mrcnn_coord_symmetry_loss_graph	call	where
TOICOCODataset.__init__	followed_by	load_real_scenes
boolean_mask	followed_by	gather_nd
TOICOCODataset.__init__	followed_by	load_scenes
conv_block	followed_by	identity_block
Conv2D	has_name	fpn_p5
transpose	followed_by	where
build	call	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p4')
KL.Conv2D(nb_filter3, (1, 1), name=conv_name_base + '2c', use_bias=use_bias)	followed_by	KL.Conv2D(nb_filter3, (1, 1), strides=strides, name=conv_name_base + '1',
    use_bias=use_bias)
SGD	followed_by	reduce_mean
TOICOCODataset.__init__	call	add_class
resnet_graph	call	KL.Conv2D(64, (7, 7), strides=(2, 2), name='conv1', use_bias=True)
build_fpn_mask_graph	followed_by	mrcnn_coord_symmetry_loss_graph
KL.Conv2D(256, (1, 1), name='fpn_c5p5')	call	Conv2D
Conv2D	has_arg1	(1, 1)
CSVLogger	followed_by	log
KL.MaxPooling2D((3, 3), strides=(2, 2), padding='same')	followed_by	conv_block
group	has_arg0	5
meshgrid	followed_by	flatten
cast	followed_by	resnet_graph
build	call	fpn_classifier_graph
conv_block	call	KL.Conv2D(nb_filter3, (1, 1), strides=strides, name=conv_name_base + '1',
    use_bias=use_bias)
set_log_dir	call	group
add_n	followed_by	reduce_mean
multiply	followed_by	where
load_scenes	call	expand_dims
KL.MaxPooling2D((3, 3), strides=(2, 2), padding='same')	call	MaxPooling2D
KL.Conv2D(nb_filter1, (1, 1), strides=strides, name=conv_name_base + '2a',
    use_bias=use_bias)	followed_by	KL.Conv2D(nb_filter2, (kernel_size, kernel_size), padding='same', name=
    conv_name_base + '2b', use_bias=use_bias)
KL.Conv2D(2 * anchors_per_location, (1, 1), padding='valid', activation=
    'linear', name='rpn_class_raw')	call	Conv2D
generate_anchors	call	meshgrid
KL.Conv2D(256, (1, 1), name='fpn_c4p4')	call	Conv2D
mrcnn_coord_symmetry_loss_graph	call	resize_nearest_neighbor
multiply	call	cast
train	call	data_generator
reshape	has_arg0	(-1, pred_shape[2], pred_shape[3], pred_shape[4])
cast	call	stack
set_trainable	call	log
get_file	has_arg0	resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5
fpn_classifier_graph	call	KL.Dropout(0.5)
KL.Conv2D(nb_filter2, (kernel_size, kernel_size), padding='same', name=
    conv_name_base + '2b', use_bias=use_bias)	followed_by	KL.Conv2D(nb_filter3, (1, 1), name=conv_name_base + '2c', use_bias=use_bias)
keras.regularizers.l2(self.config.WEIGHT_DECAY)	followed_by	add_n
load_coco	call	union
load_weights	followed_by	load_weights
where	followed_by	cast
generate_pyramid_anchors	followed_by	build_rpn_model
sqrt	followed_by	meshgrid
mrcnn_coord_symmetry_loss_graph	call	shape
train	call	set_trainable
.train	call	load_real_scenes
Conv2D	has_name	rpn_conv_shared
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p3')	call	Conv2D
set_trainable	call	set_trainable
mrcnn_coord_symmetry_loss_graph	call	transpose
reshape	has_arg0	(-1, mask_shape[2], mask_shape[3])
expand_dims	has_axis	0
mrcnn_coord_reg_loss_graph	call	constant
mrcnn_coord_symmetry_loss_graph	call	equal
train	followed_by	display
cast	has_dtype	tf.bool
split	has_arg0	.
MaxPooling2D	has_padding	same
Conv2D	has_name	fpn_p2
mrcnn_coord_reg_loss_graph	call	size
KL.Conv2D(256, (1, 1), name='fpn_c4p4')	followed_by	KL.Conv2D(256, (1, 1), name='fpn_c3p3')
expand_dims	followed_by	mean
.train	call	all
Conv2D	has_name	fpn_p3
build	call	KL.Conv2D(256, (1, 1), name='fpn_c5p5')
KL.Conv2D(nb_filter3, (1, 1), strides=strides, name=conv_name_base + '1',
    use_bias=use_bias)	call	Conv2D
range	followed_by	identity_block
compile	call	SGD
display	followed_by	MaskRCNN.__init__
KL.Conv2D(256, (1, 1), name='fpn_c2p2')	call	Conv2D
add_class	followed_by	add_image
load_scenes	call	zeros
shape	followed_by	shape
train	followed_by	train
MaxPooling2D	has_name	fpn_p6
conv_block	call	KL.Conv2D(nb_filter2, (kernel_size, kernel_size), padding='same', name=
    conv_name_base + '2b', use_bias=use_bias)
load_scenes	followed_by	load_real_scenes
conv_block	followed_by	range
reshape	followed_by	equal
MaskRCNN.__init__	followed_by	split
identity_block	followed_by	identity_block
build	call	mrcnn_coord_symmetry_loss_graph
reshape	has_arg0	(-1,)
List	followed_by	add_class
build_fpn_mask_coords_graph	followed_by	build_fpn_mask_coords_deeper_graph
train	call	ModelCheckpoint
build_rpn_model	call	rpn_graph
cast	followed_by	stack
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p4')	followed_by	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p5')
Conv2D	has_arg1	(3, 3)
KL.Conv2D(nb_filter2, (kernel_size, kernel_size), padding='same', name=
    conv_name_base + '2b', use_bias=use_bias)	call	Conv2D
zeros	has_arg0	(0, 3)
train	call	TensorBoard
all	followed_by	MaskRCNN.__init__
resnet_graph	followed_by	KL.Conv2D(256, (1, 1), name='fpn_c5p5')
TensorBoard	followed_by	ModelCheckpoint
sqrt	followed_by	sqrt
build_fpn_mask_coords_deeper_graph	followed_by	build_fpn_mask_graph
load_coco	call	List
.train	call	train
generate_pyramid_anchors	call	generate_anchors
train	followed_by	all
set_log_dir	followed_by	build
Conv2D	has_arg0	512
identity_block	followed_by	conv_block
set_trainable	followed_by	log
reduce_mean	followed_by	keras.regularizers.l2(self.config.WEIGHT_DECAY)
display	followed_by	display
load_real_scenes	followed_by	load_coco
load_real_scenes	followed_by	prepare
rpn_graph	call	KL.Conv2D(2 * anchors_per_location, (1, 1), padding='valid', activation=
    'linear', name='rpn_class_raw')
resize_nearest_neighbor	followed_by	reshape
load_real_scenes	call	split
build	call	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p2')
mean	followed_by	expand_dims
group	has_arg0	2
reshape	followed_by	shape
.train	call	prepare
transpose	followed_by	reshape
generate_anchors	call	flatten
build	call	KL.Conv2D(256, (1, 1), name='fpn_c2p2')
split	has_arg0	 
log	followed_by	max
KL.Conv2D(256, (1, 1), name='fpn_c3p3')	call	Conv2D
load_coco	call	add_image
reshape	followed_by	resize_nearest_neighbor
KL.MaxPooling2D(pool_size=(1, 1), strides=2, name='fpn_p6')	call	MaxPooling2D
size	followed_by	mean
shape	followed_by	cast
identity_block	call	KL.Conv2D(nb_filter2, (kernel_size, kernel_size), padding='same', name=
    conv_name_base + '2b', use_bias=use_bias)
MaxPooling2D	has_arg0	(3, 3)
load_scenes	call	range
group	has_arg0	6
zeros	followed_by	split
KL.Conv2D(nb_filter1, (1, 1), name=conv_name_base + '2a', use_bias=use_bias)	followed_by	KL.Conv2D(nb_filter2, (kernel_size, kernel_size), padding='same', name=
    conv_name_base + '2b', use_bias=use_bias)
KL.Conv2D(64, (7, 7), strides=(2, 2), name='conv1', use_bias=True)	call	Conv2D
build	call	shape
stack	followed_by	gather
resnet_graph	call	conv_block
Conv2D	has_name	fpn_c4p4
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p2')	call	Conv2D
flatten	followed_by	sqrt
load_real_scenes	call	add_image
KL.Conv2D(anchors_per_location * 4, (1, 1), padding='valid', activation=
    'linear', name='rpn_bbox_pred')	call	Conv2D
build	call	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p3')
log	followed_by	set_trainable
add_image	followed_by	mean
keras.regularizers.l2(self.config.WEIGHT_DECAY)	call	l2
data_generator	followed_by	TensorBoard
cast	has_dtype	tf.float32
data_generator	call	generate_pyramid_anchors
split	has_arg0	4
batch_slice	call	range
split	followed_by	maximum
reshape	followed_by	min
gather	followed_by	batch_slice
apply_box_deltas_graph	call	exp
clip_boxes_graph	call	split
model.ProposalLayer.call	call	batch_slice
batch_slice	call	List
model.ProposalLayer.call	call	apply_box_deltas_graph
batch_slice	call	stack
min	has_arg0	10000
exp	followed_by	stack
maximum	followed_by	maximum
stack	has_name	apply_box_deltas_out
min	followed_by	batch_slice
split	has_axis	1
split	followed_by	split
batch_slice	followed_by	apply_box_deltas_graph
range	followed_by	List
apply_box_deltas_graph	followed_by	batch_slice
apply_box_deltas_graph	call	stack
List	followed_by	stack
concat	has_name	clipped_boxes
clip_boxes_graph	followed_by	batch_slice
maximum	call	minimum
model.ProposalLayer.call	call	clip_boxes_graph
maximum	followed_by	concat
model.ProposalLayer.call	call	reshape
model.ProposalLayer.call	call	min
clip_boxes_graph	call	concat
exp	followed_by	exp
batch_slice	followed_by	clip_boxes_graph
model.ProposalLayer.call	call	gather
clip_boxes_graph	call	maximum
batch_slice	followed_by	gather
reshape	has_arg0	(-1, mask_shape[2], mask_shape[3], 3)
model.mrcnn_coord_bins_symmetry_loss_graph	call	reshape
model.mrcnn_coord_bins_symmetry_loss_graph	call	where
multiply	call	cast
model.mrcnn_coord_bins_symmetry_loss_graph	call	multiply
model.mrcnn_coord_bins_symmetry_loss_graph	call	shape
equal	followed_by	multiply
reshape	has_arg0	(-1,)
reshape	followed_by	shape
model.mrcnn_coord_bins_symmetry_loss_graph	call	transpose
multiply	followed_by	where
cast	has_dtype	tf.float32
reshape	followed_by	transpose
transpose	followed_by	reshape
model.mrcnn_coord_bins_symmetry_loss_graph	call	cond
model.mrcnn_coord_bins_symmetry_loss_graph	call	equal
where	followed_by	cond
reshape	followed_by	equal
reshape	has_arg0	(-1, pred_shape[2], pred_shape[3], pred_shape[4], num_bins, 3)
shape	followed_by	reshape
cond	call	size
reshape	has_arg0	(-1, mask_shape[2], mask_shape[3])
reshape	followed_by	reshape
trim_zeros	followed_by	argsort
range	followed_by	range
utils.compute_3d_matches_degree_cm	call	argsort
range	followed_by	ones
ones	followed_by	ones
ones	followed_by	range
range	followed_by	argsort
utils.compute_3d_matches_degree_cm	call	zeros
zeros	followed_by	range
utils.compute_3d_matches_degree_cm	call	range
zeros	has_dtype	np.float32
utils.compute_3d_matches_degree_cm	call	trim_zeros
utils.compute_3d_matches_degree_cm	call	ones
zeros	has_arg0	(num_pred, num_gt)
argsort	followed_by	zeros
rotation_y_matrix	call	reshape
range	followed_by	compute_mean_l1_coord_diff
range	followed_by	argsort
reshape	has_arg0	(3, 3)
rotation_y_matrix	followed_by	reshape
compute_mean_l1_coord_diff	followed_by	range
sin	followed_by	sin
utils.compute_coords_aps	call	compute_matches
compute_matches	followed_by	range
compute_mean_l1_coord_diff	call	logical_and
zeros	followed_by	trim_zeros
compute_matches	call	range
utils.compute_coords_aps	call	compute_mean_l1_coord_diff
cos	followed_by	reshape
mean	followed_by	zeros
transpose	followed_by	zeros
range	has_arg0	2
compute_mean_l1_coord_diff	call	mean
zeros	followed_by	range
ones	followed_by	range
logical_and	followed_by	where
compute_matches	call	trim_zeros
trim_zeros	followed_by	argsort
mean	has_axis	0
compute_mean_l1_coord_diff	call	zeros
rotation_y_matrix	call	cos
compute_mean_l1_coord_diff	call	reshape
trim_zeros	followed_by	trim_zeros
mean	followed_by	mean
compute_overlaps_masks	followed_by	ones
rotation_y_matrix	call	sin
utils.compute_coords_aps	call	range
compute_matches	call	where
compute_mean_l1_coord_diff	call	where
compute_matches	call	compute_overlaps_masks
range	followed_by	compute_matches
where	followed_by	transpose
utils.compute_coords_aps	call	mean
range	has_arg0	1
compute_matches	call	ones
compute_mean_l1_coord_diff	call	rotation_y_matrix
cos	followed_by	sin
range	followed_by	range
transpose	followed_by	transpose
reshape	followed_by	mean
argsort	followed_by	compute_overlaps_masks
sin	followed_by	cos
argsort	followed_by	where
compute_mean_l1_coord_diff	call	transpose
ones	followed_by	ones
compute_mean_l1_coord_diff	call	range
compute_matches	call	zeros
range	followed_by	rotation_y_matrix
range	followed_by	mean
compute_matches	call	argsort
ones	followed_by	zeros
max	followed_by	max
mold_inputs	call	mold_image
max	has_arg0	1
resize_image	followed_by	mold_image
mold_inputs	call	zeros
zeros	followed_by	stack
List	followed_by	mold_inputs
compose_image_meta	followed_by	zeros
round	followed_by	round
mold_image	followed_by	compose_image_meta
resize_image	call	pad
model.MaskRCNN.run_graph	call	log
mold_inputs	call	compose_image_meta
mold_inputs	call	stack
mold_inputs	call	resize_image
resize_image	call	round
round	followed_by	pad
max	followed_by	round
compose_image_meta	call	List
mold_inputs	followed_by	log
zeros	has_dtype	np.int32
max	call	min
stack	followed_by	stack
model.MaskRCNN.run_graph	call	List
pad	has_constant_values	0
resize_image	call	max
List	followed_by	List
model.MaskRCNN.run_graph	call	mold_inputs
rotate_and_crop_images	call	crop_around_center
process_data	call	unique
uniform	has_arg0	5
cos	followed_by	tan
rotate_image	followed_by	rotate_image
rotate_and_crop_images	call	largest_rotated_rect
annToMask	followed_by	stack
ones	has_arg0	(len(class_ids), 3)
atan2	followed_by	cos
largest_rotated_rect	call	tan
dataset.TOICOCODataset.load_augment_data	call	stack
atan2	followed_by	atan2
uniform	followed_by	rotate_and_crop_images
largest_rotated_rect	followed_by	crop_around_center
ones	has_dtype	np.float32
List	followed_by	unique
process_data	call	load
uniform	followed_by	adjust_gamma
zeros	has_dtype	np.float32
rotate_image	followed_by	crop_around_center
process_data	call	split
floor	followed_by	cos
equal	followed_by	multiply
List	call	unique
multiply	call	expand_dims
calculate_rotation	call	abs
calculate_rotation	followed_by	rotate_image
process_data	call	zeros
dataset.TOICOCODataset.load_augment_data	call	uniform
max	followed_by	min
stack	followed_by	zeros
min	followed_by	abs
zeros	followed_by	ones
annToMask	call	annToRLE
uniform	followed_by	uniform
dataset.TOICOCODataset.load_augment_data	call	rotate_and_crop_images
largest_rotated_rect	call	atan2
rotate_and_crop_images	call	calculate_rotation
process_data	call	List
zeros	has_dtype	np.uint8
dataset.TOICOCODataset.load_augment_data	call	zeros
rotate_and_crop_images	call	rotate_image
rotate_image	followed_by	largest_rotated_rect
dataset.TOICOCODataset.load_augment_data	call	map_source_class_id
adjust_gamma	followed_by	uniform
sin	followed_by	sin
uniform	has_arg1	1
stack	followed_by	rotate_and_crop_images
crop_around_center	followed_by	rotate_image
dataset.TOICOCODataset.load_augment_data	call	load_image
zeros	followed_by	zeros
largest_rotated_rect	call	floor
load	followed_by	equal
split	followed_by	load
process_data	followed_by	map_source_class_id
dataset.TOICOCODataset.load_augment_data	call	adjust_gamma
calculate_rotation	call	max
cos	followed_by	atan2
load_image	followed_by	uniform
map_source_class_id	followed_by	annToMask
zeros	has_arg0	(len(lines), 3)
stack	has_axis	2
tuple	followed_by	max
abs	followed_by	abs
sin	followed_by	cos
dataset.TOICOCODataset.load_augment_data	call	annToMask
zeros	has_arg0	(h, w, num_instance, 3)
process_data	call	multiply
annToRLE	call	merge
min	followed_by	max
calculate_rotation	call	min
dataset.TOICOCODataset.load_augment_data	call	range
split	has_arg0	 
zeros	followed_by	split
range	followed_by	stack
rotate_and_crop_images	followed_by	process_data
dataset.TOICOCODataset.load_augment_data	call	process_data
calculate_rotation	call	tuple
zeros	has_dtype	np.int_
rotate_and_crop_images	followed_by	range
dataset.TOICOCODataset.load_augment_data	call	ones
largest_rotated_rect	call	sin
crop_around_center	followed_by	crop_around_center
cos	followed_by	sin
unique	followed_by	zeros
process_data	call	equal
uniform	has_arg0	0.8
largest_rotated_rect	call	cos
identity	has_arg0	4
ones	followed_by	zeros
utils.align_ICP	call	doICP
utils.align_ICP	call	shuffle
utils.align_ICP	call	ones
backproject	call	transpose
backproject	call	ones
utils.align_ICP	call	transpose
utils.align_ICP	call	zeros
utils.align_ICP	call	diag
backproject	call	logical_and
range	has_arg0	0
zeros	has_arg0	(num_instances, 4, 4)
ones	followed_by	range
zeros	has_arg0	(0, 4, 4)
backproject	call	where
utils.align_ICP	call	backproject
logical_and	followed_by	where
ones	has_arg0	(num_instances, 3)
ones	followed_by	transpose
doICP	followed_by	zeros
range	has_arg1	3
where	followed_by	ones
doICP	call	range
zeros	has_dtype	np.float32
ones	has_arg0	(0, 3)
draw_registration_result	followed_by	draw_registration_result
utils.align_ICP	call	range
backproject	call	inv
transpose	followed_by	transpose
inv	followed_by	logical_and
backproject	followed_by	shuffle
zeros	has_arg0	(4, 4)
zeros	followed_by	diag
shuffle	followed_by	doICP
range	followed_by	identity
transpose	followed_by	zeros
doICP	call	identity
diag	followed_by	transpose
zeros	followed_by	ones
identity	followed_by	draw_registration_result
doICP	call	draw_registration_result
range	followed_by	backproject
dataset.TOICOCODataset.image_reference	call	image_reference
largest_rotated_rect	call	sin
crop_around_center	followed_by	largest_rotated_rect
utils.rotate_and_crop	call	crop_around_center
largest_rotated_rect	call	floor
floor	followed_by	cos
largest_rotated_rect	call	atan2
calculate_rotation	call	min
cos	followed_by	tan
utils.rotate_and_crop	call	calculate_rotation
max	followed_by	min
calculate_rotation	call	tuple
atan2	followed_by	atan2
largest_rotated_rect	call	cos
calculate_rotation	followed_by	rotate_image
sin	followed_by	sin
largest_rotated_rect	call	tan
utils.rotate_and_crop	call	rotate_image
tuple	followed_by	max
calculate_rotation	call	abs
calculate_rotation	call	max
min	followed_by	max
min	followed_by	abs
atan2	followed_by	cos
utils.rotate_and_crop	call	largest_rotated_rect
abs	followed_by	abs
cos	followed_by	atan2
rotate_image	followed_by	crop_around_center
cos	followed_by	sin
sin	followed_by	cos
batch_slice	call	stack
log	followed_by	log
split	followed_by	split
concat	followed_by	shape
detection_targets_graph	call	minimum
detection_targets_graph	call	reshape
control_dependencies	followed_by	crop_and_resize
boolean_mask	followed_by	reshape
assert_equal	followed_by	control_dependencies
detection_targets_graph	call	expand_dims
expand_dims	call	transpose
pad	followed_by	pad
greater	has_arg0	0
cast	followed_by	boolean_mask
where	followed_by	shape
split	followed_by	concat
detection_targets_graph	call	cast
assert_equal	has_name	coord_mask_2
detection_targets_graph	call	shape
detection_targets_graph	call	round
shape	followed_by	shape
split	followed_by	maximum
greater	call	shape
box_refinement_graph	call	stack
box_refinement_graph	call	cast
expand_dims	followed_by	cast
List	followed_by	stack
squeeze	followed_by	pad
detection_targets_graph	call	reduce_max
tile	call	shape
cast	has_dtype	tf.float32
detection_targets_graph	call	squeeze
maximum	followed_by	maximum
detection_targets_graph	call	transpose
expand_dims	followed_by	shape
detection_targets_graph	call	tile
cast	followed_by	cast
crop_and_resize	followed_by	crop_and_resize
gather	has_axis	3
reduce_sum	call	abs
box_refinement_graph	followed_by	expand_dims
batch_slice	call	List
cast	followed_by	transpose
concat	has_axis	0
gather	followed_by	box_refinement_graph
control_dependencies	followed_by	gather
pad	followed_by	squeeze
shape	followed_by	maximum
detection_targets_graph	call	gather
maximum	followed_by	minimum
batch_slice	followed_by	detection_targets_graph
range	followed_by	assert_equal
detection_targets_graph	call	Assert
model.DetectionTargetLayer.call	call	batch_slice
stack	has_axis	1
shape	followed_by	gather
reduce_max	has_axis	1
log	followed_by	stack
gather	followed_by	split
detection_targets_graph	call	maximum
Assert	call	greater
detection_targets_graph	call	concat
split	has_arg0	4
detection_targets_graph	call	boolean_mask
reshape	call	tile
squeeze	has_axis	3
crop_and_resize	followed_by	squeeze
tile	followed_by	split
reduce_sum	has_axis	1
box_refinement_graph	call	log
detection_targets_graph	call	assert_equal
transpose	followed_by	gather
gather	followed_by	argmax
detection_targets_graph	call	pad
maximum	followed_by	reshape
pad	followed_by	cast
Assert	followed_by	control_dependencies
cast	call	reduce_sum
reshape	followed_by	tile
concat	has_arg0	1
reshape	call	shape
squeeze	followed_by	squeeze
split	has_axis	1
gather	followed_by	gather
concat	followed_by	range
maximum	followed_by	pad
split	has_arg0	5
detection_targets_graph	call	argmax
range	has_arg0	0
detection_targets_graph	call	where
minimum	followed_by	minimum
detection_targets_graph	call	split
where	followed_by	where
expand_dims	has_arg0	1
reduce_max	followed_by	where
assert_equal	has_name	coord_mask
squeeze	followed_by	round
detection_targets_graph	call	range
reshape	followed_by	reduce_max
range	call	shape
identity	followed_by	cast
Assert	has_name	roi_assertion
range	followed_by	List
control_dependencies	followed_by	identity
maximum	call	shape
gather	followed_by	assert_equal
batch_slice	call	range
detection_targets_graph	call	control_dependencies
detection_targets_graph	call	box_refinement_graph
detection_targets_graph	call	identity
argmax	has_axis	1
minimum	followed_by	maximum
tile	call	expand_dims
argmax	followed_by	gather
maximum	has_arg0	0
cast	followed_by	log
assert_equal	call	shape
model.DetectionTargetLayer.call	call	detection_targets_graph
crop_and_resize	call	cast
round	followed_by	concat
detection_targets_graph	call	crop_and_resize
find_trainable_layer	call	find_trainable_layer
model.MaskRCNN.get_trainable_layers	call	find_trainable_layer
model.DetectionLayer.call	call	py_func
model.PyramidROIAlign.call	call	cast
cast	call	round
model.PyramidROIAlign.call	call	split
log	followed_by	log
sqrt	followed_by	sqrt
model.PyramidROIAlign.call	call	log2_graph
cast	followed_by	log2_graph
model.PyramidROIAlign.call	call	minimum
concat	call	cast
sqrt	followed_by	minimum
model.PyramidROIAlign.call	call	range
squeeze	followed_by	range
where	followed_by	gather_nd
where	call	equal
expand_dims	followed_by	concat
log	has_arg0	2.0
minimum	followed_by	squeeze
model.PyramidROIAlign.call	call	where
crop_and_resize	has_method	bilinear
crop_and_resize	followed_by	concat
concat	followed_by	expand_dims
expand_dims	has_arg0	1
minimum	has_arg0	5
model.PyramidROIAlign.call	call	concat
concat	followed_by	gather
gather	followed_by	expand_dims
range	has_arg0	2
maximum	call	cast
concat	followed_by	concat
gather	followed_by	gather
log2_graph	call	log
model.PyramidROIAlign.call	call	sqrt
log2_graph	followed_by	sqrt
stop_gradient	followed_by	stop_gradient
concat	has_axis	1
concat	has_axis	0
split	has_arg0	4
minimum	call	maximum
expand_dims	has_arg0	0
squeeze	has_arg0	2
range	call	shape
range	followed_by	where
expand_dims	call	range
stop_gradient	followed_by	crop_and_resize
model.PyramidROIAlign.call	call	squeeze
model.PyramidROIAlign.call	call	stop_gradient
gather_nd	followed_by	cast
cast	followed_by	stop_gradient
model.PyramidROIAlign.call	call	expand_dims
split	has_axis	2
model.PyramidROIAlign.call	call	gather
range	has_arg1	6
split	followed_by	cast
maximum	has_arg0	2
model.PyramidROIAlign.call	call	crop_and_resize
model.PyramidROIAlign.call	call	gather_nd
transpose	followed_by	svd
List	followed_by	identity
aligning.estimateRestrictedAffineTransform	call	evaluateModelNoThresh
evaluateModelNonHom	followed_by	evaluateModelNoThresh
evaluateModelNonHom	call	tile
identity	followed_by	diag
aligning.estimateRestrictedAffineTransform	call	evaluateModelNonHom
aligning.estimateRestrictedAffineTransform	call	svd
transpose	followed_by	transpose
tile	has_arg0	(source.shape[0], 1)
evaluateModelNoThresh	call	matmul
aligning.estimateRestrictedAffineTransform	call	identity
svd	followed_by	List
diag	followed_by	evaluateModelNonHom
aligning.estimateRestrictedAffineTransform	call	List
identity	has_arg0	3
aligning.estimateRestrictedAffineTransform	call	diag
transpose	call	ones
identity	has_arg0	4
aligning.estimateRestrictedAffineTransform	call	transpose
identity	followed_by	identity
dataset.TOICOCODataset.load_objs	call	load_mesh
split	followed_by	split
load_mesh	call	split
dataset.TOICOCODataset.load_objs	call	split
split	followed_by	load_mesh
split	has_arg0	/
split	has_arg0	 
compute_matches	call	argsort
compute_matches	call	where
range	followed_by	argsort
argsort	followed_by	where
cumsum	followed_by	range
compute_ap	call	maximum
compute_ap	call	range
ones	followed_by	zeros
maximum	followed_by	where
compute_ap	call	where
argsort	followed_by	compute_overlaps_masks
compute_matches	call	zeros
compute_matches	call	range
range	followed_by	maximum
ones	followed_by	range
trim_zeros	followed_by	argsort
compute_ap	call	compute_matches
ones	followed_by	ones
compute_matches	call	compute_overlaps_masks
trim_zeros	followed_by	trim_zeros
compute_matches	followed_by	cumsum
utils.compute_ap_range	call	compute_ap
zeros	followed_by	trim_zeros
compute_overlaps_masks	followed_by	ones
compute_matches	call	ones
compute_ap	call	cumsum
compute_matches	call	trim_zeros
