zeros	has_arg0	(h, w, num_instance, 3)
reshape	followed_by	equal
estimateSimilarityTransform	call	estimateSimilarityUmeyama
conv_block	call	KL.Conv2D(nb_filter1, (1, 1), strides=strides, name=conv_name_base + '2a',use_bias=use_bias)
range	followed_by	compute_3d_iou_new
Conv2D	has_name	fpn_p4
group	has_arg0	1
build	call	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p5')
y_rotation_matrix	call	sin
extract_bboxes	call	zeros
compute_matches	call	ones
transpose	call	ones
mold_inputs	call	mold_image
draw_coco_detections	call	range
sin	followed_by	cos
compute_match_from_degree_cm	call	ones
mrcnn_coord_reg_loss_graph	call	constant
Conv2D	has_arg0	(1, 1)
mrcnn_coord_reg_loss_graph	followed_by	mrcnn_coord_reg_loss_graph
group	has_arg0	2
transpose	followed_by	min
compute_degree_cm_mAP	call	compute_RT_overlaps
build	call	build_fpn_mask_graph
unmold_detections	call	unmold_coord
draw_text	call	min
det	followed_by	diag
zeros	followed_by	split
load_image	followed_by	load_depth
conv_block	call	KL.Conv2D(nb_filter2, (kernel_size, kernel_size), padding='same', name=conv_name_base + '2b', use_bias=use_bias)
y_rotation_matrix	followed_by	max
draw_detections	call	get_3d_bbox
zeros	has_dtype	np.uint8
display	followed_by	split
build	call	mrcnn_coord_reg_loss_graph
svd	followed_by	det
.detect_eval	call	display
split	followed_by	split
zeros	followed_by	ones_like
split	followed_by	mean
KL.Conv2D(nb_filter2, (kernel_size, kernel_size), padding='same', name=conv_name_base + '2b', use_bias=use_bias)	followed_by	KL.Conv2D(nb_filter3, (1, 1), name=conv_name_base + '2c', use_bias=use_bias)
draw_coco_detections	call	where
boolean_mask	followed_by	gather_nd
KL.Conv2D(256, (1, 1), name='fpn_c4p4')	followed_by	KL.Conv2D(256, (1, 1), name='fpn_c3p3')
mean	followed_by	range
mean	followed_by	mean
draw_detections	call	where
extract_bboxes	call	range
split	has_arg0	 
.detect_eval	call	TOICOCODataset.__init__
compute_ap_from_matches_scores	call	maximum
compute_ap_from_matches_scores	call	argsort
mrcnn_coord_reg_loss_graph	call	abs
abs	followed_by	backproject
compute_3d_matches	call	ones
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p5')	call	Conv2D
cast	followed_by	boolean_mask
transform_coordinates_3d	followed_by	get_3d_bbox
build	call	KL.MaxPooling2D(pool_size=(1, 1), strides=2, name='fpn_p6')
compute_3d_iou_new	call	range
getRANSACInliers	call	evaluateModel
annToRLE	call	merge
draw_text	followed_by	transform_coordinates_3d
align	call	range
align	call	abs
union	followed_by	List
compute_3d_iou_new	call	y_rotation_matrix
range	followed_by	estimateSimilarityUmeyama
build	call	List
range	followed_by	mean
where	followed_by	min
mean	followed_by	expand_dims
compute_3d_matches	call	argsort
reshape	has_arg0	(-1, pred_shape[2], pred_shape[3])
gather_nd	followed_by	boolean_mask
compose_image_meta	followed_by	zeros
group	has_arg0	4
range	has_arg0	4
ones	has_arg0	(num_instances, 3)
mrcnn_coord_reg_loss_graph	call	boolean_mask
.detect_eval	call	extract_bboxes
cumsum	followed_by	range
.detect_eval	call	split
tile	has_arg0	(num_degree_thres, num_shift_thres, 1)
build	call	build_fpn_mask_coords_deeper_graph
where	followed_by	cast
.detect_eval	call	ones_like
compute_3d_matches	call	compute_3d_iou_new
.detect_eval	call	load_mask
build	call	resnet_graph
ones	has_arg0	(num_degree_thres, num_shift_thres, num_pred)
Conv2D	has_arg1	(7, 7)
build	call	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p3')
zeros	has_arg0	(0, 3)
compute_degree_cm_mAP	call	ones
KL.Conv2D(512, (3, 3), padding='same', activation='relu', strides=anchor_stride, name='rpn_conv_shared')	followed_by	KL.Conv2D(2 * anchors_per_location, (1, 1), padding='valid', activation='linear', name='rpn_class_raw')
Conv2D	has_arg0	(kernel_size, kernel_size)
TOICOCODataset.__init__	followed_by	load_coco
group	has_arg0	3
cast	followed_by	resnet_graph
.detect_eval	call	MaskRCNN.__init__
mrcnn_coord_reg_loss_graph	followed_by	mrcnn_coord_symmetry_loss_graph
mrcnn_coord_symmetry_loss_graph	followed_by	mrcnn_coord_reg_loss_graph
.detect_eval	call	load_coco
resize_image	call	round
max	followed_by	round
build	call	KL.Conv2D(256, (1, 1), name='fpn_c5p5')
diag	followed_by	mean
annToMask	call	annToRLE
identity_block	followed_by	conv_block
conv_block	followed_by	range
reshape	has_arg0	(-1, mask_shape[2], mask_shape[3])
range	followed_by	transform_coordinates_3d
compute_matches	call	range
mrcnn_coord_reg_loss_graph	call	gather_nd
Conv2D	has_name	rpn_bbox_pred
compute_match_from_degree_cm	call	range
resize_image	call	pad
sqrt	followed_by	sqrt
log	followed_by	mold_inputs
load_scenes	followed_by	prepare
zeros	followed_by	ones
compute_match_from_degree_cm	followed_by	tile
get_3d_bbox	call	transpose
build	call	KL.Conv2D(256, (1, 1), name='fpn_c2p2')
det	followed_by	matmul
compute_3d_iou_new	call	max
where	followed_by	range
align	call	estimateSimilarityTransform
resize_nearest_neighbor	followed_by	reshape
meshgrid	followed_by	meshgrid
draw_detections	followed_by	draw_coco_detections
.detect_eval	call	draw_coco_detections
range	followed_by	identity_block
Conv2D	has_arg0	256
transpose	followed_by	where
group	has_arg0	5
mrcnn_coord_symmetry_loss_graph	followed_by	mrcnn_coord_symmetry_loss_graph
stack	has_axis	0
logical_and	followed_by	where
KL.Conv2D(256, (1, 1), name='fpn_c3p3')	followed_by	KL.Conv2D(256, (1, 1), name='fpn_c2p2')
KL.Conv2D(nb_filter3, (1, 1), name=conv_name_base + '2c', use_bias=use_bias)	call	Conv2D
range	followed_by	unmold_mask
multiply	call	cast
KL.Conv2D(256, (1, 1), name='fpn_c5p5')	call	Conv2D
compute_RT_degree_cm_symmetry	call	min
range	has_arg0	1
ones_like	followed_by	align
align	call	transpose
draw_detections	call	draw
compute_matches	call	argsort
compute_match_from_degree_cm	call	argsort
identity_block	call	KL.Conv2D(nb_filter3, (1, 1), name=conv_name_base + '2c', use_bias=use_bias)
resnet_graph	call	KL.MaxPooling2D((3, 3), strides=(2, 2), padding='same')
compute_degree_cm_mAP	call	tile
evaluateModel	call	count_nonzero
prepare	call	List
estimateSimilarityUmeyama	call	det
range	has_kernel_size	(31,1)
mrcnn_coord_reg_loss_graph	call	mean
mrcnn_coord_symmetry_loss_graph	call	where
estimateSimilarityTransform	call	mean
tuple	followed_by	tuple
.detect_eval	call	load
identity_block	followed_by	identity_block
load_coco	call	add_class
cond	call	size
backproject	call	where
ones	has_arg0	(num_degree_thres, num_shift_thres, num_gt)
mean	followed_by	identity
resnet_graph	followed_by	KL.Conv2D(256, (1, 1), name='fpn_c5p5')
TOICOCODataset.__init__	call	add_class
detect	call	unmold_detections
compute_RT_degree_cm_symmetry	call	transpose
get_3d_bbox	followed_by	get_3d_bbox
where	followed_by	ones
y_rotation_matrix	call	cos
where	followed_by	cond
maximum	followed_by	minimum
mrcnn_coord_symmetry_loss_graph	call	cond
KL.Conv2D(2 * anchors_per_location, (1, 1), padding='valid', activation='linear', name='rpn_class_raw')	call	Conv2D
load_mask	followed_by	extract_bboxes
compute_RT_degree_cm_symmetry	call	diag
estimateSimilarityTransform	call	getRANSACInliers
compute_overlaps_masks	followed_by	ones
mrcnn_coord_symmetry_loss_graph	followed_by	fpn_classifier_graph
size	followed_by	mean
where	followed_by	count_nonzero
generate_anchors	call	meshgrid
mrcnn_coord_reg_loss_graph	call	size
process_data	followed_by	map_source_class_id
build_rpn_model	call	rpn_graph
.detect_eval	call	compute_degree_cm_mAP
ones	followed_by	ones
zeros	has_arg0	(0, 4, 4)
transform_coordinates_3d	followed_by	calculate_2d_projections
backproject	call	inv
zeros	has_arg0	(num_classes + 1, num_degree_thres, num_shift_thres)
get_3d_bbox	followed_by	transform_coordinates_3d
detect	call	log
generate_pyramid_anchors	followed_by	build_rpn_model
KL.Conv2D(512, (3, 3), padding='same', activation='relu', strides=anchor_stride, name='rpn_conv_shared')	call	Conv2D
load_scenes	call	mean
tuple	followed_by	range
evaluateModel	call	matmul
estimateSimilarityUmeyama	call	identity
stack	followed_by	unmold_detections
mrcnn_coord_symmetry_loss_graph	call	reshape
stack	followed_by	zeros
ones_like	followed_by	detect
KL.Conv2D(256, (1, 1), name='fpn_c2p2')	call	Conv2D
resnet_graph	call	identity_block
process_data	call	load
split	has_arg0	.
compose_image_meta	call	List
compute_degree_cm_mAP	call	List
reshape	has_arg0	(-1, pred_shape[2], pred_shape[3], pred_shape[4], 3)
build	call	mrcnn_coord_symmetry_loss_graph
zeros	has_dtype	np.float32
unmold_detections	call	unmold_mask
stack	followed_by	stack
meshgrid	followed_by	flatten
unmold_coord	call	zeros
ones	followed_by	range
Conv2D	has_name	fpn_c3p3
fpn_classifier_graph	followed_by	build_fpn_mask_coords_graph
zeros	followed_by	compute_RT_overlaps
List	followed_by	add_class
ones_like	followed_by	ones
display	followed_by	display
reshape	has_arg0	(-1,)
range	followed_by	where
compute_3d_iou_new	call	get_3d_bbox
maximum	followed_by	where
where	followed_by	draw_text
mean	has_axis	1
load_mask	call	zeros
transform_coordinates_3d	followed_by	range
asymmetric_3d_iou	call	get_3d_bbox
KL.Conv2D(nb_filter3, (1, 1), strides=strides, name=conv_name_base + '1',use_bias=use_bias)	call	Conv2D
compute_degree_cm_mAP	call	mean
estimateSimilarityUmeyama	call	mean
zeros	has_arg0	(num_iou_thres, 0)
compute_matches	followed_by	range
transpose	followed_by	identity
KL.Conv2D(nb_filter1, (1, 1), name=conv_name_base + '2a', use_bias=use_bias)	call	Conv2D
.detect_eval	call	load_weights
round	followed_by	pad
group	has_arg0	6
draw_text	followed_by	compute_matches
compute_matches	call	trim_zeros
zeros	has_dtype	np.int_
range	followed_by	zeros
align	call	ones
build_fpn_mask_coords_graph	followed_by	build_fpn_mask_coords_deeper_graph
load_coco	call	add_image
load	followed_by	ones_like
mrcnn_coord_reg_loss_graph	call	transpose
List	call	unique
matmul	call	transpose
compute_RT_overlaps	call	compute_RT_degree_cm_symmetry
ones_like	followed_by	range
split	followed_by	add_image
detect	call	mold_inputs
draw_detections	call	compute_matches
resize_nearest_neighbor	followed_by	resize_nearest_neighbor
KL.Conv2D(256, (1, 1), name='fpn_c5p5')	followed_by	KL.Conv2D(256, (1, 1), name='fpn_c4p4')
process_data	call	equal
expand_dims	has_axis	0
KL.Conv2D(2 * anchors_per_location, (1, 1), padding='valid', activation='linear', name='rpn_class_raw')	followed_by	KL.Conv2D(anchors_per_location * 4, (1, 1), padding='valid', activation='linear', name='rpn_bbox_pred')
shape	followed_by	shape
extract_bboxes	followed_by	split
matmul	followed_by	svd
.detect_eval	call	linspace
load_mask	call	ones
range	followed_by	maximum
Dropout	has_arg0	0.5
mrcnn_coord_symmetry_loss_graph	call	multiply
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p2')	followed_by	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p3')
build_fpn_mask_graph	followed_by	mrcnn_coord_symmetry_loss_graph
compute_degree_cm_mAP	call	ones_like
argsort	followed_by	where
draw_coco_detections	followed_by	split
generate_anchors	call	sqrt
max	followed_by	asymmetric_3d_iou
asymmetric_3d_iou	call	transform_coordinates_3d
reshape	followed_by	shape
cast	call	stack
cast	has_dtype	tf.float32
mrcnn_coord_reg_loss_graph	call	where
mold_image	followed_by	compose_image_meta
group	followed_by	group
argsort	followed_by	cumsum
prepare	followed_by	TOICOCODataset.__init__
process_data	call	split
ones	has_arg0	(len(class_ids), 3)
cast	call	gather
compute_ap_from_matches_scores	call	cumsum
cast	followed_by	stack
generate_pyramid_anchors	call	generate_anchors
argsort	followed_by	zeros
compute_RT_overlaps	followed_by	compute_match_from_degree_cm
reshape	followed_by	resize_nearest_neighbor
compute_RT_degree_cm_symmetry	call	det
equal	followed_by	multiply
constant	has_arg0	0.0
mold_inputs	call	zeros
List	followed_by	unique
rpn_graph	call	KL.Conv2D(512, (3, 3), padding='same', activation='relu', strides=anchor_stride, name='rpn_conv_shared')
load_scenes	call	expand_dims
identity	followed_by	zeros
ones	has_arg0	(0, 3)
compute_ap_from_matches_scores	call	where
load_weights	followed_by	load_image
draw_detections	call	transform_coordinates_3d
zeros	followed_by	diag
mold_inputs	call	stack
List	followed_by	zeros
zeros	has_arg0	(num_pred, num_gt)
compute_matches	call	compute_overlaps_masks
mrcnn_coord_symmetry_loss_graph	call	shape
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p4')	call	Conv2D
process_data	call	multiply
compute_3d_matches	followed_by	tile
Conv2D	has_name	fpn_c2p2
add_image	followed_by	mean
zeros	followed_by	trim_zeros
generate_anchors	call	flatten
stack	followed_by	gather
zeros	has_arg0	(num_degree_thres, num_shift_thres, 0)
estimateSimilarityUmeyama	call	diag
set_log_dir	call	group
Conv2D	has_arg0	64
MaxPooling2D	has_name	fpn_p6
flatten	followed_by	flatten
List	followed_by	fpn_classifier_graph
gather	followed_by	gather
ones	followed_by	zeros
resize_image	call	max
max	followed_by	max
Conv2D	has_name	fpn_c4p4
gather	followed_by	cast
KL.MaxPooling2D((3, 3), strides=(2, 2), padding='same')	call	MaxPooling2D
calculate_2d_projections	followed_by	get_3d_bbox
diag	followed_by	transpose
KL.Dropout(0.5)	call	Dropout
evaluateModel	call	where
identity	has_dtype	np.float32
prepare	followed_by	load_weights
.detect_eval	call	load_depth
getRANSACInliers	followed_by	estimateSimilarityUmeyama
log	followed_by	log
conv_block	call	KL.Conv2D(nb_filter3, (1, 1), name=conv_name_base + '2c', use_bias=use_bias)
range	has_output_feature_size	0
where	followed_by	where
KL.Conv2D(64, (7, 7), strides=(2, 2), name='conv1', use_bias=True)	call	Conv2D
range	followed_by	draw_text
detect	call	stack
split	followed_by	MaskRCNN.__init__
split	has_arg0	_
fpn_classifier_graph	call	KL.Dropout(0.5)
tile	followed_by	zeros
.detect_eval	call	load_image
load_real_scenes	call	add_image
unmold_detections	call	where
compute_degree_cm_mAP	call	compute_match_from_degree_cm
compute_degree_cm_mAP	call	compute_ap_from_matches_scores
ones	has_dtype	np.float32
identity_block	call	KL.Conv2D(nb_filter2, (kernel_size, kernel_size), padding='same', name=conv_name_base + '2b', use_bias=use_bias)
Conv2D	has_name	rpn_class_raw
KL.Conv2D(nb_filter2, (kernel_size, kernel_size), padding='same', name=conv_name_base + '2b', use_bias=use_bias)	call	Conv2D
stack	has_axis	2
split	has_arg0	/
inv	followed_by	logical_and
compute_RT_degree_cm_symmetry	followed_by	draw_text
build	call	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p2')
flatten	followed_by	sqrt
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p3')	followed_by	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p4')
resize_nearest_neighbor	has_arg0	(pred_shape[2], pred_shape[3])
min	followed_by	range
asymmetric_3d_iou	call	minimum
estimateSimilarityTransform	followed_by	zeros
mold_inputs	call	resize_image
ones	has_arg0	(1, coordinates.shape[1])
Conv2D	has_arg1	(3, 3)
mean	followed_by	getRANSACInliers
range	followed_by	compute_ap_from_matches_scores
KL.Conv2D(256, (1, 1), name='fpn_c2p2')	followed_by	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p2')
load_scenes	call	split
List	followed_by	List
TOICOCODataset.__init__	followed_by	load_real_scenes
resnet_graph	call	KL.Conv2D(64, (7, 7), strides=(2, 2), name='conv1', use_bias=True)
detect	followed_by	align
load_real_scenes	call	split
estimateSimilarityUmeyama	call	svd
reshape	followed_by	reshape
load_mask	call	process_data
zeros	followed_by	zeros
generate_pyramid_anchors	call	range
mrcnn_coord_reg_loss_graph	call	cast
compute_3d_iou_new	call	asymmetric_3d_iou
zeros	followed_by	stack
mrcnn_coord_reg_loss_graph	call	gather
.detect_eval	call	draw_detections
multiply	call	expand_dims
compute_RT_overlaps	call	zeros
load_mask	call	stack
unmold_coord	followed_by	stack
load_depth	followed_by	load_mask
compute_ap_from_matches_scores	call	range
MaskRCNN.__init__	call	build
add_class	followed_by	add_image
mean	followed_by	load
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p5')	followed_by	KL.MaxPooling2D(pool_size=(1, 1), strides=2, name='fpn_p6')
matmul	followed_by	where
tile	followed_by	range
identity_block	call	KL.Conv2D(nb_filter1, (1, 1), name=conv_name_base + '2a', use_bias=use_bias)
align	call	zeros
stack	has_axis	1
compute_degree_cm_mAP	call	zeros
ones	has_arg0	0
split	followed_by	load
asymmetric_3d_iou	call	maximum
align	followed_by	ones_like
.detect_eval	call	range
KL.Conv2D(nb_filter3, (1, 1), name=conv_name_base + '2c', use_bias=use_bias)	followed_by	KL.Conv2D(nb_filter3, (1, 1), strides=strides, name=conv_name_base + '1',use_bias=use_bias)
MaxPooling2D	has_padding	same
.detect_eval	call	load_real_scenes
build	call	fpn_classifier_graph
range	followed_by	argsort
build	call	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p4')
load_scenes	followed_by	load_real_scenes
range	followed_by	tuple
backproject	call	logical_and
.detect_eval	call	mean
mrcnn_coord_symmetry_loss_graph	call	transpose
range	followed_by	compute_degree_cm_mAP
draw	followed_by	range
load	followed_by	equal
range	has_arg0	0
ones	followed_by	compute_3d_matches
load_coco	call	union
unmold_mask	followed_by	unmold_coord
unmold_mask	call	zeros
mrcnn_coord_symmetry_loss_graph	call	equal
KL.Conv2D(64, (7, 7), strides=(2, 2), name='conv1', use_bias=True)	followed_by	KL.MaxPooling2D((3, 3), strides=(2, 2), padding='same')
KL.MaxPooling2D((3, 3), strides=(2, 2), padding='same')	followed_by	conv_block
reshape	has_arg0	(-1, pred_shape[2], pred_shape[3], pred_shape[4])
getRANSACInliers	call	estimateSimilarityUmeyama
build	call	cast
abs	followed_by	size
build_rpn_model	followed_by	List
zeros	has_arg0	(0, 4)
KL.Conv2D(nb_filter1, (1, 1), strides=strides, name=conv_name_base + '2a',use_bias=use_bias)	followed_by	KL.Conv2D(nb_filter2, (kernel_size, kernel_size), padding='same', name=conv_name_base + '2b', use_bias=use_bias)
set_log_dir	followed_by	build
KL.Conv2D(nb_filter1, (1, 1), name=conv_name_base + '2a', use_bias=use_bias)	followed_by	KL.Conv2D(nb_filter2, (kernel_size, kernel_size), padding='same', name=conv_name_base + '2b', use_bias=use_bias)
load_coco	followed_by	prepare
getRANSACInliers	call	range
build	call	shape
resize_image	followed_by	mold_image
mrcnn_coord_symmetry_loss_graph	call	resize_nearest_neighbor
build	call	KL.Conv2D(256, (1, 1), name='fpn_c4p4')
build	call	build_rpn_model
annToMask	followed_by	stack
reshape	has_arg0	(-1, mask_shape[2], mask_shape[3], 1)
zeros	has_dtype	np.int32
unmold_detections	call	range
MaxPooling2D	has_arg0	(3, 3)
min	followed_by	min
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p2')	call	Conv2D
compute_degree_cm_mAP	followed_by	linspace
identity	has_arg0	4
compute_degree_cm_mAP	call	compute_3d_matches
compute_3d_matches	call	zeros
map_source_class_id	followed_by	annToMask
align	call	backproject
draw_detections	call	compute_RT_degree_cm_symmetry
reshape	followed_by	transpose
max	has_arg0	1
min	followed_by	transpose
TOICOCODataset.__init__	followed_by	load_scenes
tile	has_arg0	(num_iou_thres, 1)
backproject	followed_by	estimateSimilarityTransform
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p3')	call	Conv2D
transpose	followed_by	transpose
compute_3d_matches	call	where
linspace	has_output_feature_size	0
mean	followed_by	matmul
shape	followed_by	reshape
draw	call	range
max	call	min
unmold_detections	call	stack
cast	has_dtype	tf.bool
conv_block	call	KL.Conv2D(nb_filter3, (1, 1), strides=strides, name=conv_name_base + '1',use_bias=use_bias)
draw_detections	call	calculate_2d_projections
transpose	followed_by	reshape
mrcnn_coord_reg_loss_graph	call	shape
zeros	followed_by	range
conv_block	followed_by	identity_block
Conv2D	has_name	rpn_conv_shared
shape	followed_by	cast
log	followed_by	stack
Conv2D	has_name	fpn_p3
KL.Conv2D(256, (1, 1), name='fpn_c3p3')	call	Conv2D
det	followed_by	det
align	call	identity
trim_zeros	followed_by	trim_zeros
compute_ap_from_matches_scores	followed_by	mean
MaskRCNN.__init__	call	set_log_dir
backproject	call	transpose
compute_RT_overlaps	call	range
trace	followed_by	trace
compute_matches	call	where
process_data	call	List
Conv2D	has_name	fpn_p5
.detect_eval	call	load_scenes
sqrt	followed_by	meshgrid
linspace	has_kernel_size	(1,101)
range	followed_by	generate_anchors
draw_text	followed_by	range
zeros	has_arg0	(num_pred, num_gt, 2)
backproject	call	ones
estimateSimilarityUmeyama	call	matmul
trim_zeros	followed_by	argsort
resnet_graph	call	conv_block
rpn_graph	call	KL.Conv2D(anchors_per_location * 4, (1, 1), padding='valid', activation='linear', name='rpn_bbox_pred')
KL.MaxPooling2D(pool_size=(1, 1), strides=2, name='fpn_p6')	followed_by	generate_pyramid_anchors
load_scenes	call	add_image
range	followed_by	abs
range	followed_by	range
Conv2D	has_arg0	512
calculate_2d_projections	followed_by	draw
.detect_eval	call	align
compute_degree_cm_mAP	call	range
MaskRCNN.__init__	followed_by	TOICOCODataset.__init__
compute_matches	call	zeros
unique	followed_by	zeros
range	followed_by	y_rotation_matrix
unmold_detections	call	min
pad	has_constant_values	0
build	call	generate_pyramid_anchors
draw	call	tuple
reshape	has_arg0	(-1, coord_shape[2], coord_shape[3], 3)
zeros	has_arg0	0
KL.Conv2D(anchors_per_location * 4, (1, 1), padding='valid', activation='linear', name='rpn_bbox_pred')	call	Conv2D
zeros	has_arg0	(len(lines), 3)
process_data	call	zeros
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p4')	followed_by	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p5')
zeros	has_arg0	(num_classes + 1, num_iou_thres)
mean	followed_by	constant
load_mask	call	map_source_class_id
zeros	has_arg0	(num_instances, 4, 4)
cos	followed_by	sin
boolean_mask	followed_by	abs
range	has_arg1	8
zeros	has_arg0	(4, 4)
argsort	followed_by	compute_overlaps_masks
rpn_graph	call	KL.Conv2D(2 * anchors_per_location, (1, 1), padding='valid', activation='linear', name='rpn_class_raw')
transform_coordinates_3d	call	ones
mrcnn_coord_reg_loss_graph	call	reshape
draw_detections	call	draw_text
estimateSimilarityUmeyama	followed_by	evaluateModel
estimateSimilarityTransform	call	transpose
load_scenes	call	range
round	followed_by	round
transpose	followed_by	trace
multiply	followed_by	where
draw_coco_detections	call	draw_text
draw_detections	call	range
min	call	trace
sin	followed_by	sin
process_data	call	unique
align	call	diag
expand_dims	followed_by	mean
zeros	followed_by	argsort
KL.Conv2D(256, (1, 1), name='fpn_c4p4')	call	Conv2D
load_coco	call	List
Conv2D	has_arg1	(1, 1)
build	call	build_fpn_mask_coords_graph
range	followed_by	compute_RT_degree_cm_symmetry
build	call	KL.Conv2D(256, (1, 1), name='fpn_c3p3')
transpose	followed_by	mean
align	followed_by	draw_detections
KL.Conv2D(nb_filter1, (1, 1), strides=strides, name=conv_name_base + '2a',use_bias=use_bias)	call	Conv2D
compute_3d_matches	call	range
Conv2D	has_name	fpn_p2
.detect_eval	call	prepare
mold_inputs	call	compose_image_meta
calculate_2d_projections	call	transpose
mean	has_axis	(0, 1)
compute_3d_iou_new	call	transform_coordinates_3d
load_weights	call	set_log_dir
build_fpn_mask_coords_deeper_graph	followed_by	build_fpn_mask_graph
compute_3d_iou_new	followed_by	ones
load_mask	call	annToMask
Conv2D	has_name	fpn_c5p5
ones	followed_by	transpose
mold_inputs	followed_by	log
load_real_scenes	followed_by	prepare
.detect_eval	call	detect
extract_bboxes	call	where
load_scenes	call	zeros
mean	has_axis	0
matmul	followed_by	diag
compute_RT_degree_cm_symmetry	call	trace
resnet_graph	call	range
KL.MaxPooling2D(pool_size=(1, 1), strides=2, name='fpn_p6')	call	MaxPooling2D
mrcnn_coord_reg_loss_graph	call	stack
transform_coordinates_3d	followed_by	maximum
mrcnn_coord_reg_loss_graph	call	gather_nd
MaskRCNN.__init__	call	set_log_dir
build	call	build_fpn_mask_coords_deeper_graph
Conv2D	has_arg1	(1, 1)
cond	call	size
load_weights	followed_by	load_weights
split	has_arg0	.
abs	followed_by	size
reshape	followed_by	transpose
mrcnn_coord_reg_loss_graph	followed_by	mrcnn_coord_symmetry_loss_graph
set_trainable	followed_by	compile
.train	call	prepare
flatten	followed_by	flatten
Conv2D	has_name	rpn_conv_shared
KL.Conv2D(256, (1, 1), name='fpn_c3p3')	followed_by	KL.Conv2D(256, (1, 1), name='fpn_c2p2')
TOICOCODataset.__init__	call	add_class
build	call	KL.Conv2D(256, (1, 1), name='fpn_c4p4')
Conv2D	has_name	rpn_bbox_pred
gather_nd	followed_by	boolean_mask
log	followed_by	log
.train	call	load_real_scenes
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p5')	call	Conv2D
TOICOCODataset.__init__	followed_by	load_scenes
stack	has_axis	1
Conv2D	has_name	fpn_c2p2
resnet_graph	call	KL.Conv2D(64, (7, 7), strides=(2, 2), name='conv1', use_bias=True)
boolean_mask	followed_by	gather_nd
reshape	has_arg0	(-1, mask_shape[2], mask_shape[3])
MaxPooling2D	has_arg0	(3, 3)
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p5')	followed_by	KL.MaxPooling2D(pool_size=(1, 1), strides=2, name='fpn_p6')
cast	followed_by	stack
resnet_graph	followed_by	KL.Conv2D(256, (1, 1), name='fpn_c5p5')
cast	followed_by	resnet_graph
KL.Conv2D(nb_filter3, (1, 1), name=conv_name_base + '2c', use_bias=use_bias)	followed_by	KL.Conv2D(nb_filter3, (1, 1), strides=strides, name=conv_name_base + '1',use_bias=use_bias)
range	followed_by	zeros
build_fpn_mask_coords_deeper_graph	followed_by	build_fpn_mask_graph
train	followed_by	train
mrcnn_coord_symmetry_loss_graph	call	resize_nearest_neighbor
build	call	build_fpn_mask_graph
train	call	CSVLogger
build	call	mrcnn_coord_symmetry_loss_graph
mrcnn_coord_symmetry_loss_graph	call	multiply
rpn_graph	call	KL.Conv2D(512, (3, 3), padding='same', activation='relu', strides=anchor_stride, name='rpn_conv_shared')
union	followed_by	List
KL.Conv2D(anchors_per_location * 4, (1, 1), padding='valid', activation='linear', name='rpn_bbox_pred')	call	Conv2D
load_scenes	call	add_image
mrcnn_coord_reg_loss_graph	call	stack
mrcnn_coord_symmetry_loss_graph	followed_by	fpn_classifier_graph
conv_block	call	KL.Conv2D(nb_filter1, (1, 1), strides=strides, name=conv_name_base + '2a',use_bias=use_bias)
conv_block	followed_by	range
mean	has_axis	(0, 1)
MaxPooling2D	has_name	fpn_p6
build	call	resnet_graph
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p2')	followed_by	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p3')
train	call	max
Conv2D	has_name	fpn_p5
all	followed_by	MaskRCNN.__init__
load_scenes	call	zeros
load_weights	call	set_log_dir
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p3')	call	Conv2D
train	call	ModelCheckpoint
group	has_arg0	5
List	followed_by	fpn_classifier_graph
equal	followed_by	multiply
KL.Conv2D(64, (7, 7), strides=(2, 2), name='conv1', use_bias=True)	followed_by	KL.MaxPooling2D((3, 3), strides=(2, 2), padding='same')
flatten	followed_by	sqrt
resnet_graph	call	range
ModelCheckpoint	has_period	5
identity_block	followed_by	identity_block
mean	followed_by	expand_dims
data_generator	followed_by	data_generator
add_n	followed_by	reduce_mean
cast	call	stack
generate_anchors	call	sqrt
split	followed_by	add_image
group	has_arg0	2
load_real_scenes	followed_by	load_coco
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p3')	followed_by	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p4')
identity_block	followed_by	conv_block
conv_block	call	KL.Conv2D(nb_filter3, (1, 1), strides=strides, name=conv_name_base + '1',use_bias=use_bias)
load_real_scenes	followed_by	prepare
Conv2D	has_arg1	(3, 3)
group	has_arg0	1
generate_anchors	call	meshgrid
KL.Conv2D(nb_filter3, (1, 1), strides=strides, name=conv_name_base + '1',use_bias=use_bias)	call	Conv2D
shape	followed_by	reshape
build_rpn_model	followed_by	List
KL.MaxPooling2D(pool_size=(1, 1), strides=2, name='fpn_p6')	followed_by	generate_pyramid_anchors
mrcnn_coord_reg_loss_graph	call	gather
prepare	followed_by	train
build_rpn_model	call	rpn_graph
split	followed_by	load_weights
build	call	build_rpn_model
prepare	call	List
resnet_graph	call	conv_block
KL.MaxPooling2D((3, 3), strides=(2, 2), padding='same')	call	MaxPooling2D
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p2')	call	Conv2D
CSVLogger	followed_by	log
KL.MaxPooling2D((3, 3), strides=(2, 2), padding='same')	followed_by	conv_block
build	call	generate_pyramid_anchors
compile	call	SGD
fpn_classifier_graph	call	KL.Dropout(0.5)
sqrt	followed_by	sqrt
.train	call	load_scenes
group	followed_by	group
mrcnn_coord_symmetry_loss_graph	call	equal
.train	call	load_weights
build	call	KL.Conv2D(256, (1, 1), name='fpn_c5p5')
meshgrid	followed_by	flatten
build_fpn_mask_graph	followed_by	mrcnn_coord_symmetry_loss_graph
SGD	has_clipnorm	5.0
build	call	cast
.train	call	all
split	has_arg0	_
reduce_mean	followed_by	reduce_mean
log	followed_by	set_trainable
stack	followed_by	gather
MaxPooling2D	has_padding	same
List	followed_by	add_class
reshape	followed_by	resize_nearest_neighbor
size	followed_by	mean
mrcnn_coord_reg_loss_graph	call	boolean_mask
load_coco	call	List
reshape	followed_by	shape
TensorBoard	followed_by	ModelCheckpoint
load_real_scenes	call	split
build	call	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p3')
resnet_graph	call	identity_block
mrcnn_coord_reg_loss_graph	call	cast
Conv2D	has_name	fpn_p3
load_scenes	call	expand_dims
load_weights	followed_by	get_imagenet_weights
KL.Conv2D(256, (1, 1), name='fpn_c4p4')	followed_by	KL.Conv2D(256, (1, 1), name='fpn_c3p3')
KL.Conv2D(nb_filter1, (1, 1), strides=strides, name=conv_name_base + '2a',use_bias=use_bias)	call	Conv2D
cast	followed_by	boolean_mask
multiply	call	cast
Conv2D	has_arg1	(7, 7)
SGD	followed_by	reduce_mean
Dropout	has_arg0	0.5
MaskRCNN.__init__	followed_by	load_weights
build	call	List
rpn_graph	call	KL.Conv2D(anchors_per_location * 4, (1, 1), padding='valid', activation='linear', name='rpn_bbox_pred')
build	call	shape
conv_block	followed_by	identity_block
mrcnn_coord_reg_loss_graph	call	shape
KL.Conv2D(512, (3, 3), padding='same', activation='relu', strides=anchor_stride, name='rpn_conv_shared')	followed_by	KL.Conv2D(2 * anchors_per_location, (1, 1), padding='valid', activation='linear', name='rpn_class_raw')
zeros	has_dtype	np.float32
load_coco	call	add_class
build	call	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p5')
List	followed_by	List
train	call	set_trainable
set_trainable	call	log
identity_block	call	KL.Conv2D(nb_filter2, (kernel_size, kernel_size), padding='same', name=conv_name_base + '2b', use_bias=use_bias)
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p4')	followed_by	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p5')
build	call	KL.Conv2D(256, (1, 1), name='fpn_c3p3')
load_weights	followed_by	TOICOCODataset.__init__
mrcnn_coord_reg_loss_graph	call	reshape
reshape	followed_by	equal
identity_block	call	KL.Conv2D(nb_filter1, (1, 1), name=conv_name_base + '2a', use_bias=use_bias)
mrcnn_coord_reg_loss_graph	call	abs
get_imagenet_weights	followed_by	load_weights
mrcnn_coord_reg_loss_graph	followed_by	mrcnn_coord_reg_loss_graph
mrcnn_coord_symmetry_loss_graph	followed_by	mrcnn_coord_reg_loss_graph
mrcnn_coord_symmetry_loss_graph	call	where
train	call	TensorBoard
KL.Conv2D(256, (1, 1), name='fpn_c5p5')	followed_by	KL.Conv2D(256, (1, 1), name='fpn_c4p4')
mrcnn_coord_reg_loss_graph	call	mean
where	followed_by	cond
compile	call	keras.regularizers.l2(self.config.WEIGHT_DECAY)
sqrt	followed_by	meshgrid
group	has_arg0	6
expand_dims	followed_by	mean
conv_block	call	KL.Conv2D(nb_filter3, (1, 1), name=conv_name_base + '2c', use_bias=use_bias)
set_log_dir	followed_by	build
identity_block	call	KL.Conv2D(nb_filter3, (1, 1), name=conv_name_base + '2c', use_bias=use_bias)
multiply	followed_by	where
load_coco	call	union
build	call	build_fpn_mask_coords_graph
KL.Conv2D(nb_filter2, (kernel_size, kernel_size), padding='same', name=conv_name_base + '2b', use_bias=use_bias)	call	Conv2D
mrcnn_coord_reg_loss_graph	call	constant
cast	has_dtype	tf.float32
load_coco	followed_by	prepare
train	followed_by	display
gather	followed_by	gather
load_scenes	call	split
transpose	followed_by	reshape
.train	call	get_imagenet_weights
KL.Conv2D(nb_filter1, (1, 1), strides=strides, name=conv_name_base + '2a',use_bias=use_bias)	followed_by	KL.Conv2D(nb_filter2, (kernel_size, kernel_size), padding='same', name=conv_name_base + '2b', use_bias=use_bias)
mrcnn_coord_reg_loss_graph	call	size
KL.Conv2D(2 * anchors_per_location, (1, 1), padding='valid', activation='linear', name='rpn_class_raw')	call	Conv2D
mrcnn_coord_symmetry_loss_graph	call	transpose
mean	followed_by	constant
KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p4')	call	Conv2D
compile	call	reduce_mean
build	call	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p2')
transpose	followed_by	where
.train	call	train
generate_pyramid_anchors	call	range
log	followed_by	max
split	followed_by	split
mrcnn_coord_symmetry_loss_graph	call	reshape
build	call	KL.MaxPooling2D(pool_size=(1, 1), strides=2, name='fpn_p6')
shape	followed_by	cast
expand_dims	has_axis	0
Conv2D	has_name	fpn_c4p4
.train	call	display
KL.Conv2D(256, (1, 1), name='fpn_c2p2')	followed_by	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p2')
mrcnn_coord_symmetry_loss_graph	call	cond
get_imagenet_weights	call	get_file
.train	call	split
load_coco	call	add_image
Conv2D	has_arg0	256
set_trainable	call	set_trainable
train	call	log
range	followed_by	generate_anchors
mrcnn_coord_reg_loss_graph	call	where
reshape	has_arg0	(-1, coord_shape[2], coord_shape[3], 3)
KL.Conv2D(2 * anchors_per_location, (1, 1), padding='valid', activation='linear', name='rpn_class_raw')	followed_by	KL.Conv2D(anchors_per_location * 4, (1, 1), padding='valid', activation='linear', name='rpn_bbox_pred')
cast	call	gather
range	followed_by	identity_block
fpn_classifier_graph	followed_by	build_fpn_mask_coords_graph
resnet_graph	call	KL.MaxPooling2D((3, 3), strides=(2, 2), padding='same')
Conv2D	has_arg0	64
shape	followed_by	shape
zeros	followed_by	split
Conv2D	has_arg0	512
set_trainable	followed_by	log
ModelCheckpoint	followed_by	CSVLogger
mrcnn_coord_symmetry_loss_graph	call	shape
KL.Conv2D(nb_filter3, (1, 1), name=conv_name_base + '2c', use_bias=use_bias)	call	Conv2D
.train	call	load_coco
Conv2D	has_arg0	(1, 1)
Conv2D	has_name	fpn_p4
Conv2D	has_name	rpn_class_raw
Conv2D	has_name	fpn_p2
display	followed_by	display
resize_nearest_neighbor	followed_by	reshape
Conv2D	has_name	fpn_c5p5
train	followed_by	all
load_scenes	followed_by	load_real_scenes
KL.Conv2D(256, (1, 1), name='fpn_c4p4')	call	Conv2D
build	call	fpn_classifier_graph
cast	has_dtype	tf.bool
mrcnn_coord_reg_loss_graph	call	transpose
conv_block	call	KL.Conv2D(nb_filter2, (kernel_size, kernel_size), padding='same', name=conv_name_base + '2b', use_bias=use_bias)
KL.Conv2D(256, (1, 1), name='fpn_c3p3')	call	Conv2D
group	has_arg0	4
zeros	has_arg0	(0, 3)
load_scenes	call	mean
mrcnn_coord_symmetry_loss_graph	followed_by	mrcnn_coord_symmetry_loss_graph
get_file	has_md5_hash	a268eb855778b3df3c7506639542a6af
generate_pyramid_anchors	followed_by	build_rpn_model
KL.Conv2D(256, (1, 1), name='fpn_c2p2')	call	Conv2D
rpn_graph	call	KL.Conv2D(2 * anchors_per_location, (1, 1), padding='valid', activation='linear', name='rpn_class_raw')
KL.Dropout(0.5)	call	Dropout
constant	has_arg0	0.0
KL.Conv2D(512, (3, 3), padding='same', activation='relu', strides=anchor_stride, name='rpn_conv_shared')	call	Conv2D
boolean_mask	followed_by	abs
KL.Conv2D(64, (7, 7), strides=(2, 2), name='conv1', use_bias=True)	call	Conv2D
compile	followed_by	log
MaskRCNN.__init__	call	build
TOICOCODataset.__init__	followed_by	load_real_scenes
KL.Conv2D(nb_filter1, (1, 1), name=conv_name_base + '2a', use_bias=use_bias)	followed_by	KL.Conv2D(nb_filter2, (kernel_size, kernel_size), padding='same', name=conv_name_base + '2b', use_bias=use_bias)
add_class	followed_by	add_image
generate_anchors	call	flatten
train	call	data_generator
Conv2D	has_arg0	(kernel_size, kernel_size)
resize_nearest_neighbor	has_arg0	(pred_shape[2], pred_shape[3])
group	has_arg0	3
set_log_dir	call	group
reshape	has_arg0	(-1, pred_shape[2], pred_shape[3], pred_shape[4], 3)
reduce_mean	followed_by	keras.regularizers.l2(self.config.WEIGHT_DECAY)
load_scenes	call	range
generate_pyramid_anchors	call	generate_anchors
reshape	followed_by	reshape
build	call	mrcnn_coord_reg_loss_graph
where	followed_by	cast
MaskRCNN.__init__	followed_by	split
resize_nearest_neighbor	followed_by	resize_nearest_neighbor
build	call	KL.Conv2D(256, (1, 1), name='fpn_c2p2')
.train	call	MaskRCNN.__init__
reshape	has_arg0	(-1, mask_shape[2], mask_shape[3], 1)
.train	call	TOICOCODataset.__init__
display	followed_by	MaskRCNN.__init__
data_generator	call	generate_pyramid_anchors
gather	followed_by	cast
Conv2D	has_name	fpn_c3p3
KL.Conv2D(nb_filter1, (1, 1), name=conv_name_base + '2a', use_bias=use_bias)	call	Conv2D
KL.Conv2D(nb_filter2, (kernel_size, kernel_size), padding='same', name=conv_name_base + '2b', use_bias=use_bias)	followed_by	KL.Conv2D(nb_filter3, (1, 1), name=conv_name_base + '2c', use_bias=use_bias)
reshape	has_arg0	(-1, pred_shape[2], pred_shape[3], pred_shape[4])
reshape	has_arg0	(-1, pred_shape[2], pred_shape[3])
compile	call	add_n
build	call	KL.Conv2D(256, (3, 3), padding='SAME', name='fpn_p4')
reshape	has_arg0	(-1,)
build_fpn_mask_coords_graph	followed_by	build_fpn_mask_coords_deeper_graph
keras.regularizers.l2(self.config.WEIGHT_DECAY)	followed_by	add_n
split	has_arg0	 
KL.MaxPooling2D(pool_size=(1, 1), strides=2, name='fpn_p6')	call	MaxPooling2D
add_image	followed_by	mean
train	call	compile
mean	has_axis	0
load_real_scenes	call	add_image
keras.regularizers.l2(self.config.WEIGHT_DECAY)	call	l2
get_file	has_arg0	resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5
data_generator	followed_by	TensorBoard
stack	has_axis	0
meshgrid	followed_by	meshgrid
prepare	followed_by	TOICOCODataset.__init__
KL.Conv2D(256, (1, 1), name='fpn_c5p5')	call	Conv2D
rotation_y_matrix	call	sin
argsort	followed_by	where
trim_zeros	followed_by	argsort
range	followed_by	rotation_y_matrix
utils.compute_coords_aps	call	mean
compute_mean_l1_coord_diff	call	range
range	has_arg0	1
utils.compute_coords_aps	call	compute_matches
ones	followed_by	zeros
compute_mean_l1_coord_diff	call	where
argsort	followed_by	compute_overlaps_masks
zeros	followed_by	range
range	followed_by	argsort
utils.compute_coords_aps	call	range
compute_mean_l1_coord_diff	call	reshape
mean	followed_by	zeros
logical_and	followed_by	where
compute_matches	call	zeros
zeros	followed_by	trim_zeros
reshape	has_arg0	(3, 3)
compute_matches	call	ones
ones	followed_by	range
compute_mean_l1_coord_diff	followed_by	range
compute_matches	call	compute_overlaps_masks
range	has_arg0	2
rotation_y_matrix	call	reshape
compute_mean_l1_coord_diff	call	transpose
range	followed_by	range
compute_matches	call	trim_zeros
cos	followed_by	reshape
reshape	followed_by	mean
sin	followed_by	sin
compute_matches	call	where
range	followed_by	compute_mean_l1_coord_diff
transpose	followed_by	zeros
compute_mean_l1_coord_diff	call	rotation_y_matrix
ones	followed_by	ones
compute_matches	call	range
compute_matches	call	argsort
where	followed_by	transpose
transpose	followed_by	transpose
sin	followed_by	cos
compute_overlaps_masks	followed_by	ones
mean	followed_by	mean
rotation_y_matrix	followed_by	reshape
range	followed_by	compute_matches
compute_mean_l1_coord_diff	call	mean
mean	has_axis	0
compute_mean_l1_coord_diff	call	zeros
range	followed_by	mean
compute_mean_l1_coord_diff	call	logical_and
rotation_y_matrix	call	cos
compute_matches	followed_by	range
trim_zeros	followed_by	trim_zeros
utils.compute_coords_aps	call	compute_mean_l1_coord_diff
cos	followed_by	sin
max	followed_by	min
cos	followed_by	tan
zeros	followed_by	ones
zeros	has_arg0	(h, w, num_instance, 3)
uniform	has_arg1	1
uniform	has_arg0	5
process_data	call	zeros
process_data	followed_by	map_source_class_id
largest_rotated_rect	followed_by	crop_around_center
atan2	followed_by	atan2
zeros	followed_by	split
map_source_class_id	followed_by	annToMask
stack	has_axis	2
adjust_gamma	followed_by	uniform
stack	followed_by	zeros
uniform	has_arg0	0.8
crop_around_center	followed_by	rotate_image
calculate_rotation	call	max
ones	has_arg0	(len(class_ids), 3)
dataset.TOICOCODataset.load_augment_data	call	map_source_class_id
unique	followed_by	zeros
abs	followed_by	abs
largest_rotated_rect	call	atan2
min	followed_by	max
split	has_arg0	 
annToRLE	call	merge
zeros	has_dtype	np.uint8
annToMask	call	annToRLE
process_data	call	equal
uniform	followed_by	adjust_gamma
largest_rotated_rect	call	cos
process_data	call	multiply
load_image	followed_by	uniform
process_data	call	load
rotate_and_crop_images	call	crop_around_center
largest_rotated_rect	call	sin
dataset.TOICOCODataset.load_augment_data	call	rotate_and_crop_images
zeros	followed_by	zeros
calculate_rotation	call	min
dataset.TOICOCODataset.load_augment_data	call	uniform
process_data	call	split
dataset.TOICOCODataset.load_augment_data	call	process_data
List	followed_by	unique
rotate_image	followed_by	largest_rotated_rect
process_data	call	unique
rotate_and_crop_images	followed_by	process_data
range	followed_by	stack
rotate_and_crop_images	call	rotate_image
rotate_and_crop_images	call	largest_rotated_rect
uniform	followed_by	uniform
process_data	call	List
largest_rotated_rect	call	floor
largest_rotated_rect	call	tan
multiply	call	expand_dims
uniform	followed_by	rotate_and_crop_images
stack	followed_by	rotate_and_crop_images
rotate_image	followed_by	rotate_image
atan2	followed_by	cos
dataset.TOICOCODataset.load_augment_data	call	load_image
dataset.TOICOCODataset.load_augment_data	call	stack
dataset.TOICOCODataset.load_augment_data	call	annToMask
calculate_rotation	call	tuple
cos	followed_by	atan2
rotate_image	followed_by	crop_around_center
dataset.TOICOCODataset.load_augment_data	call	range
zeros	has_dtype	np.float32
dataset.TOICOCODataset.load_augment_data	call	ones
dataset.TOICOCODataset.load_augment_data	call	adjust_gamma
tuple	followed_by	max
min	followed_by	abs
rotate_and_crop_images	followed_by	range
calculate_rotation	followed_by	rotate_image
sin	followed_by	sin
zeros	has_dtype	np.int_
split	followed_by	load
calculate_rotation	call	abs
annToMask	followed_by	stack
zeros	has_arg0	(len(lines), 3)
List	call	unique
load	followed_by	equal
ones	has_dtype	np.float32
crop_around_center	followed_by	crop_around_center
cos	followed_by	sin
sin	followed_by	cos
floor	followed_by	cos
dataset.TOICOCODataset.load_augment_data	call	zeros
equal	followed_by	multiply
rotate_and_crop_images	call	calculate_rotation
reshape	followed_by	min
apply_box_deltas_graph	followed_by	batch_slice
split	followed_by	maximum
apply_box_deltas_graph	call	exp
split	has_arg0	4
exp	followed_by	exp
model.ProposalLayer.call	call	gather
batch_slice	followed_by	gather
apply_box_deltas_graph	call	stack
model.ProposalLayer.call	call	clip_boxes_graph
batch_slice	followed_by	clip_boxes_graph
batch_slice	call	List
batch_slice	call	stack
maximum	followed_by	maximum
exp	followed_by	stack
maximum	followed_by	concat
min	followed_by	batch_slice
model.ProposalLayer.call	call	apply_box_deltas_graph
batch_slice	call	range
batch_slice	followed_by	apply_box_deltas_graph
model.ProposalLayer.call	call	reshape
maximum	call	minimum
split	followed_by	split
clip_boxes_graph	call	concat
clip_boxes_graph	followed_by	batch_slice
range	followed_by	List
clip_boxes_graph	call	split
stack	has_name	apply_box_deltas_out
List	followed_by	stack
min	has_arg0	10000
model.ProposalLayer.call	call	min
model.ProposalLayer.call	call	batch_slice
gather	followed_by	batch_slice
concat	has_name	clipped_boxes
clip_boxes_graph	call	maximum
split	has_axis	1
mold_inputs	call	stack
compose_image_meta	followed_by	zeros
resize_image	followed_by	mold_image
round	followed_by	pad
compose_image_meta	call	List
zeros	has_dtype	np.int32
max	followed_by	round
mold_inputs	call	zeros
resize_image	call	max
model.MaskRCNN.run_graph	call	List
resize_image	call	pad
round	followed_by	round
max	followed_by	max
List	followed_by	mold_inputs
model.MaskRCNN.run_graph	call	log
mold_inputs	call	compose_image_meta
zeros	followed_by	stack
pad	has_constant_values	0
model.MaskRCNN.run_graph	call	mold_inputs
mold_image	followed_by	compose_image_meta
max	call	min
mold_inputs	call	resize_image
max	has_arg0	1
mold_inputs	followed_by	log
List	followed_by	List
stack	followed_by	stack
resize_image	call	round
mold_inputs	call	mold_image
dataset.TOICOCODataset.image_reference	call	image_reference
compute_overlaps	call	zeros
zeros	followed_by	range
utils.compute_recall	call	argmax
compute_iou	call	minimum
compute_overlaps	call	range
zeros	has_arg0	(boxes1.shape[0], boxes2.shape[0])
compute_iou	call	maximum
utils.compute_recall	call	where
maximum	followed_by	minimum
argmax	followed_by	where
utils.compute_recall	call	compute_overlaps
minimum	followed_by	maximum
maximum	followed_by	maximum
compute_overlaps	call	compute_iou
range	followed_by	compute_iou
compute_overlaps	followed_by	argmax
maximum	has_arg0	0
argmax	has_axis	1
utils.compute_3d_matches_degree_cm	call	range
ones	followed_by	range
utils.compute_3d_matches_degree_cm	call	ones
range	followed_by	range
utils.compute_3d_matches_degree_cm	call	argsort
range	followed_by	ones
zeros	followed_by	range
ones	followed_by	ones
utils.compute_3d_matches_degree_cm	call	zeros
range	followed_by	argsort
utils.compute_3d_matches_degree_cm	call	trim_zeros
zeros	has_arg0	(num_pred, num_gt)
argsort	followed_by	zeros
zeros	has_dtype	np.float32
trim_zeros	followed_by	argsort
doICP	call	draw_registration_result
backproject	call	transpose
utils.align_ICP	call	backproject
doICP	call	range
range	has_arg0	0
range	followed_by	identity
utils.align_ICP	call	diag
utils.align_ICP	call	zeros
range	followed_by	backproject
backproject	call	inv
transpose	followed_by	transpose
shuffle	followed_by	doICP
backproject	call	where
logical_and	followed_by	where
zeros	has_dtype	np.float32
ones	has_arg0	(0, 3)
zeros	has_arg0	(num_instances, 4, 4)
diag	followed_by	transpose
zeros	has_arg0	(0, 4, 4)
zeros	followed_by	diag
inv	followed_by	logical_and
zeros	followed_by	ones
draw_registration_result	followed_by	draw_registration_result
utils.align_ICP	call	transpose
range	has_arg1	3
utils.align_ICP	call	shuffle
identity	has_arg0	4
transpose	followed_by	zeros
backproject	followed_by	shuffle
ones	followed_by	range
backproject	call	logical_and
doICP	call	identity
doICP	followed_by	zeros
ones	has_arg0	(num_instances, 3)
utils.align_ICP	call	range
ones	followed_by	zeros
utils.align_ICP	call	ones
backproject	call	ones
ones	followed_by	transpose
identity	followed_by	draw_registration_result
zeros	has_arg0	(4, 4)
where	followed_by	ones
utils.align_ICP	call	doICP
evaluateModelNonHom	call	tile
transpose	call	ones
evaluateModelNoThresh	call	matmul
aligning.estimateRestrictedAffineTransform	call	List
identity	has_arg0	3
aligning.estimateRestrictedAffineTransform	call	evaluateModelNoThresh
transpose	followed_by	svd
identity	has_arg0	4
aligning.estimateRestrictedAffineTransform	call	transpose
identity	followed_by	diag
evaluateModelNonHom	followed_by	evaluateModelNoThresh
aligning.estimateRestrictedAffineTransform	call	diag
identity	followed_by	identity
diag	followed_by	evaluateModelNonHom
aligning.estimateRestrictedAffineTransform	call	evaluateModelNonHom
List	followed_by	identity
aligning.estimateRestrictedAffineTransform	call	svd
tile	has_arg0	(source.shape[0], 1)
aligning.estimateRestrictedAffineTransform	call	identity
svd	followed_by	List
transpose	followed_by	transpose
range	followed_by	argsort
det	followed_by	transform_coordinates_3d
range	followed_by	maximum
maximum	followed_by	minimum
zeros	followed_by	range
transform_coordinates_3d	followed_by	calculate_2d_projections
ones	followed_by	range
ones	has_arg0	(num_projection_thres, num_gt)
mean	has_axis	0
zeros	has_arg0	(num_projection_thres, 0)
range	followed_by	compute_ap_from_matches_scores
compute_ap_from_matches_scores	call	argsort
range	followed_by	mean
range	followed_by	zeros
compute_RT_projection_2d_symmetry	call	mean
zeros	has_arg0	(num_classes + 1, num_projection_thres)
compute_3d_iou_new	call	y_rotation_matrix
compute_RT_projection_2d_overlaps	followed_by	compute_match_from_projection_2d_dist
range	followed_by	range
transform_coordinates_3d	followed_by	get_3d_bbox
transform_coordinates_3d	followed_by	range
compute_3d_iou_new	call	asymmetric_3d_iou
abs	call	det
y_rotation_matrix	followed_by	calculate_2d_projections
List	followed_by	zeros
calculate_2d_projections	followed_by	transform_coordinates_3d
y_rotation_matrix	followed_by	max
ones_like	followed_by	ones
utils.compute_2D_projection_mAP	call	compute_match_from_projection_2d_dist
zeros	has_arg0	0
compute_RT_projection_2d_symmetry	call	y_rotation_matrix
utils.compute_2D_projection_mAP	call	List
calculate_2d_projections	call	transpose
max	followed_by	asymmetric_3d_iou
range	followed_by	y_rotation_matrix
compute_3d_iou_new	call	range
zeros	has_arg0	(0, 4)
compute_RT_projection_2d_symmetry	call	range
compute_RT_projection_2d_overlaps	call	range
compute_ap_from_matches_scores	followed_by	mean
min	call	mean
compute_ap_from_matches_scores	call	where
ones	has_arg0	0
cumsum	followed_by	range
compute_RT_projection_2d_symmetry	call	abs
tile	has_arg0	(num_iou_thres, 1)
transform_coordinates_3d	followed_by	y_rotation_matrix
compute_3d_iou_new	call	get_3d_bbox
asymmetric_3d_iou	call	maximum
asymmetric_3d_iou	call	get_3d_bbox
utils.compute_2D_projection_mAP	call	ones_like
cos	followed_by	sin
utils.compute_2D_projection_mAP	call	compute_ap_from_matches_scores
compute_ap_from_matches_scores	call	range
diag	followed_by	transform_coordinates_3d
det	followed_by	abs
tile	has_arg0	(num_projection_thres, 1)
utils.compute_2D_projection_mAP	call	zeros
asymmetric_3d_iou	call	transform_coordinates_3d
argsort	followed_by	cumsum
argsort	followed_by	zeros
abs	followed_by	det
get_3d_bbox	followed_by	get_3d_bbox
abs	followed_by	abs
get_3d_bbox	followed_by	transform_coordinates_3d
compute_3d_matches	call	zeros
range	has_arg0	1
zeros	has_arg0	(num_classes + 1, num_iou_thres)
sin	followed_by	sin
utils.compute_2D_projection_mAP	call	compute_RT_projection_2d_overlaps
calculate_2d_projections	followed_by	min
zeros	has_dtype	np.float32
compute_RT_projection_2d_symmetry	call	det
utils.compute_2D_projection_mAP	call	range
tile	followed_by	zeros
compute_RT_projection_2d_symmetry	call	min
compute_3d_matches	call	argsort
zeros	has_arg0	(0, 3)
transform_coordinates_3d	followed_by	maximum
range	followed_by	compute_RT_projection_2d_symmetry
compute_RT_projection_2d_symmetry	call	diag
ones	has_arg0	(num_projection_thres, num_pred)
compute_3d_matches	call	ones
asymmetric_3d_iou	call	minimum
compute_match_from_projection_2d_dist	call	argsort
range	followed_by	compute_3d_iou_new
det	followed_by	det
compute_RT_projection_2d_overlaps	call	zeros
sin	followed_by	cos
compute_RT_projection_2d_overlaps	call	compute_RT_projection_2d_symmetry
ones	followed_by	compute_3d_matches
min	followed_by	diag
ones	has_arg0	(1, coordinates.shape[1])
calculate_2d_projections	followed_by	mean
utils.compute_2D_projection_mAP	call	mean
compute_RT_projection_2d_symmetry	call	calculate_2d_projections
compute_3d_matches	followed_by	tile
mean	followed_by	mean
utils.compute_2D_projection_mAP	call	tile
utils.compute_2D_projection_mAP	call	ones
zeros	followed_by	compute_RT_projection_2d_overlaps
maximum	followed_by	where
compute_3d_iou_new	followed_by	ones
argsort	followed_by	where
transform_coordinates_3d	call	ones
zeros	followed_by	zeros
zeros	has_arg0	(0, 4, 4)
zeros	has_arg0	(num_iou_thres, 0)
zeros	has_arg0	(num_pred, num_gt)
compute_match_from_projection_2d_dist	followed_by	tile
mean	followed_by	range
compute_RT_projection_2d_symmetry	call	transform_coordinates_3d
compute_3d_matches	call	where
ones	followed_by	ones
compute_3d_iou_new	call	max
compute_3d_iou_new	call	transform_coordinates_3d
zeros	followed_by	argsort
tile	followed_by	range
get_3d_bbox	call	transpose
y_rotation_matrix	call	cos
utils.compute_2D_projection_mAP	call	compute_3d_matches
compute_3d_matches	call	range
y_rotation_matrix	call	sin
compute_ap_from_matches_scores	call	maximum
compute_match_from_projection_2d_dist	call	range
range	followed_by	transform_coordinates_3d
compute_3d_matches	call	compute_3d_iou_new
ones	has_dtype	np.float32
compute_match_from_projection_2d_dist	call	ones
zeros	followed_by	ones_like
List	followed_by	List
compute_ap_from_matches_scores	call	cumsum
load_mesh	call	split
split	followed_by	split
dataset.TOICOCODataset.load_objs	call	split
split	has_arg0	 
split	followed_by	load_mesh
split	has_arg0	/
dataset.TOICOCODataset.load_objs	call	load_mesh
ones	followed_by	ones
ones	followed_by	range
compute_overlaps_masks	followed_by	ones
compute_ap	call	where
compute_matches	call	trim_zeros
ones	followed_by	zeros
cumsum	followed_by	range
argsort	followed_by	where
compute_matches	call	ones
range	followed_by	maximum
compute_matches	call	compute_overlaps_masks
zeros	followed_by	trim_zeros
utils.compute_ap_range	call	compute_ap
maximum	followed_by	where
compute_ap	call	cumsum
trim_zeros	followed_by	argsort
compute_ap	call	maximum
compute_ap	call	range
argsort	followed_by	compute_overlaps_masks
compute_ap	call	compute_matches
trim_zeros	followed_by	trim_zeros
range	followed_by	argsort
compute_matches	call	where
compute_matches	call	range
compute_matches	call	zeros
compute_matches	call	argsort
compute_matches	followed_by	cumsum
model.DetectionLayer.call	call	py_func
atan2	followed_by	cos
max	followed_by	min
largest_rotated_rect	call	sin
calculate_rotation	call	max
tuple	followed_by	max
utils.rotate_and_crop	call	rotate_image
min	followed_by	abs
largest_rotated_rect	call	floor
calculate_rotation	call	tuple
cos	followed_by	atan2
utils.rotate_and_crop	call	calculate_rotation
min	followed_by	max
largest_rotated_rect	call	tan
crop_around_center	followed_by	largest_rotated_rect
atan2	followed_by	atan2
sin	followed_by	sin
calculate_rotation	followed_by	rotate_image
sin	followed_by	cos
cos	followed_by	tan
abs	followed_by	abs
largest_rotated_rect	call	atan2
floor	followed_by	cos
calculate_rotation	call	min
rotate_image	followed_by	crop_around_center
largest_rotated_rect	call	cos
calculate_rotation	call	abs
utils.rotate_and_crop	call	crop_around_center
cos	followed_by	sin
utils.rotate_and_crop	call	largest_rotated_rect
reshape	followed_by	equal
model.mrcnn_coord_bins_symmetry_loss_graph	call	shape
cast	has_dtype	tf.float32
reshape	followed_by	transpose
multiply	followed_by	where
model.mrcnn_coord_bins_symmetry_loss_graph	call	equal
reshape	followed_by	shape
reshape	followed_by	reshape
where	followed_by	cond
model.mrcnn_coord_bins_symmetry_loss_graph	call	multiply
equal	followed_by	multiply
reshape	has_arg0	(-1, mask_shape[2], mask_shape[3], 3)
model.mrcnn_coord_bins_symmetry_loss_graph	call	transpose
shape	followed_by	reshape
multiply	call	cast
model.mrcnn_coord_bins_symmetry_loss_graph	call	cond
reshape	has_arg0	(-1,)
transpose	followed_by	reshape
reshape	has_arg0	(-1, mask_shape[2], mask_shape[3])
model.mrcnn_coord_bins_symmetry_loss_graph	call	reshape
reshape	has_arg0	(-1, pred_shape[2], pred_shape[3], pred_shape[4], num_bins, 3)
cond	call	size
model.mrcnn_coord_bins_symmetry_loss_graph	call	where
reduce_sum	has_axis	1
round	followed_by	concat
batch_slice	call	stack
box_refinement_graph	call	stack
expand_dims	call	transpose
model.DetectionTargetLayer.call	call	detection_targets_graph
gather	followed_by	assert_equal
maximum	has_arg0	0
cast	followed_by	log
detection_targets_graph	call	Assert
concat	followed_by	range
gather	has_axis	3
squeeze	followed_by	squeeze
range	followed_by	List
detection_targets_graph	call	assert_equal
box_refinement_graph	call	log
batch_slice	call	List
log	followed_by	log
crop_and_resize	followed_by	crop_and_resize
shape	followed_by	gather
log	followed_by	stack
range	followed_by	assert_equal
control_dependencies	followed_by	crop_and_resize
split	followed_by	concat
where	followed_by	where
squeeze	followed_by	round
expand_dims	followed_by	shape
assert_equal	call	shape
detection_targets_graph	call	gather
Assert	call	greater
where	followed_by	shape
expand_dims	has_arg0	1
control_dependencies	followed_by	identity
assert_equal	followed_by	control_dependencies
detection_targets_graph	call	transpose
split	has_arg0	5
detection_targets_graph	call	tile
detection_targets_graph	call	boolean_mask
gather	followed_by	split
maximum	call	shape
split	followed_by	maximum
detection_targets_graph	call	expand_dims
Assert	followed_by	control_dependencies
box_refinement_graph	followed_by	expand_dims
split	followed_by	split
detection_targets_graph	call	split
split	has_arg0	4
tile	call	expand_dims
reduce_sum	call	abs
detection_targets_graph	call	squeeze
cast	followed_by	cast
reshape	call	tile
shape	followed_by	shape
detection_targets_graph	call	range
cast	call	reduce_sum
detection_targets_graph	call	maximum
maximum	followed_by	pad
expand_dims	followed_by	cast
maximum	followed_by	reshape
identity	followed_by	cast
squeeze	has_axis	3
detection_targets_graph	call	identity
stack	has_axis	1
detection_targets_graph	call	round
pad	followed_by	pad
Assert	has_name	roi_assertion
argmax	followed_by	gather
greater	call	shape
model.DetectionTargetLayer.call	call	batch_slice
reduce_max	followed_by	where
reshape	followed_by	reduce_max
range	call	shape
assert_equal	has_name	coord_mask
detection_targets_graph	call	shape
concat	has_axis	0
detection_targets_graph	call	crop_and_resize
transpose	followed_by	gather
batch_slice	call	range
detection_targets_graph	call	box_refinement_graph
argmax	has_axis	1
tile	call	shape
maximum	followed_by	maximum
detection_targets_graph	call	concat
gather	followed_by	gather
concat	has_arg0	1
detection_targets_graph	call	pad
detection_targets_graph	call	reduce_max
reshape	followed_by	tile
cast	followed_by	transpose
gather	followed_by	argmax
maximum	followed_by	minimum
reshape	call	shape
pad	followed_by	cast
concat	followed_by	shape
control_dependencies	followed_by	gather
detection_targets_graph	call	reshape
box_refinement_graph	call	cast
pad	followed_by	squeeze
cast	has_dtype	tf.float32
squeeze	followed_by	pad
detection_targets_graph	call	control_dependencies
minimum	followed_by	maximum
minimum	followed_by	minimum
shape	followed_by	maximum
assert_equal	has_name	coord_mask_2
batch_slice	followed_by	detection_targets_graph
crop_and_resize	call	cast
detection_targets_graph	call	cast
gather	followed_by	box_refinement_graph
detection_targets_graph	call	where
range	has_arg0	0
boolean_mask	followed_by	reshape
reduce_max	has_axis	1
List	followed_by	stack
detection_targets_graph	call	argmax
detection_targets_graph	call	minimum
tile	followed_by	split
split	has_axis	1
crop_and_resize	followed_by	squeeze
cast	followed_by	boolean_mask
greater	has_arg0	0
model.MaskRCNN.get_trainable_layers	call	find_trainable_layer
find_trainable_layer	call	find_trainable_layer
max	followed_by	asymmetric_3d_iou
mean	followed_by	max
asymmetric_3d_iou	call	minimum
asymmetric_3d_iou	call	maximum
utils.compute_3d_iou	call	mean
sin	followed_by	sin
utils.compute_3d_iou	call	sin
maximum	followed_by	minimum
cos	followed_by	sin
sin	followed_by	cos
utils.compute_3d_iou	call	cos
range	followed_by	mean
utils.compute_3d_iou	call	range
utils.compute_3d_iou	call	asymmetric_3d_iou
utils.compute_3d_iou	call	max
cos	followed_by	range
model.PyramidROIAlign.call	call	sqrt
minimum	has_arg0	5
log2_graph	call	log
where	followed_by	gather_nd
concat	followed_by	concat
model.PyramidROIAlign.call	call	cast
crop_and_resize	followed_by	concat
gather	followed_by	expand_dims
split	followed_by	cast
crop_and_resize	has_method	bilinear
model.PyramidROIAlign.call	call	squeeze
model.PyramidROIAlign.call	call	minimum
sqrt	followed_by	minimum
cast	followed_by	stop_gradient
stop_gradient	followed_by	stop_gradient
log2_graph	followed_by	sqrt
model.PyramidROIAlign.call	call	stop_gradient
cast	call	round
minimum	followed_by	squeeze
expand_dims	has_arg0	1
log	followed_by	log
concat	has_axis	0
model.PyramidROIAlign.call	call	gather
gather	followed_by	gather
range	followed_by	where
expand_dims	followed_by	concat
range	has_arg0	2
squeeze	has_arg0	2
expand_dims	call	range
minimum	call	maximum
maximum	has_arg0	2
model.PyramidROIAlign.call	call	concat
model.PyramidROIAlign.call	call	split
concat	call	cast
model.PyramidROIAlign.call	call	range
model.PyramidROIAlign.call	call	expand_dims
model.PyramidROIAlign.call	call	gather_nd
split	has_arg0	4
concat	followed_by	expand_dims
range	has_arg1	6
expand_dims	has_arg0	0
split	has_axis	2
cast	followed_by	log2_graph
model.PyramidROIAlign.call	call	where
where	call	equal
gather_nd	followed_by	cast
model.PyramidROIAlign.call	call	crop_and_resize
concat	has_axis	1
sqrt	followed_by	sqrt
maximum	call	cast
range	call	shape
squeeze	followed_by	range
log	has_arg0	2.0
stop_gradient	followed_by	crop_and_resize
model.PyramidROIAlign.call	call	log2_graph
concat	followed_by	gather
