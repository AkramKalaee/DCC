setup_imagenet.main	call	id_to_string
ImageNetModelPrediction.__init__	call	placeholder
create_graph	followed_by	Session
placeholder	has_arg0	(None, self.image_size, self.image_size, 3)
squeeze	followed_by	reshape
setup_imagenet.main	call	maybe_download_and_extract
ImageNetModelPrediction.__init__	call	import_graph_def
import_graph_def	followed_by	softmax
ImageNetModelPrediction.__init__	call	softmax
predict	followed_by	NodeLookup.__init__
ImageNetModelPrediction.__init__	followed_by	predict
split	followed_by	split
predict	call	reshape
split	has_arg0	:
setup_imagenet.main	call	predict
NodeLookup.__init__	followed_by	argsort
predict	call	NodeLookup.__init__
placeholder	followed_by	import_graph_def
argsort	followed_by	id_to_string
maybe_download_and_extract	call	split
setup_imagenet.main	call	create_graph
Session	followed_by	ImageNetModelPrediction.__init__
predict	call	argsort
predict	call	squeeze
squeeze	followed_by	NodeLookup.__init__
NodeLookup.__init__	call	load
predict	call	id_to_string
setup_imagenet.main	call	ImageNetModelPrediction.__init__
split	has_arg0	/
setup_imagenet.main	call	NodeLookup.__init__
create_graph	call	GraphDef
setup_imagenet.main	call	Session
load	call	split
reshape	followed_by	squeeze
maybe_download_and_extract	followed_by	create_graph
setup_imagenet.main	call	argsort
Sequential	followed_by	add
MaxPooling2D	has_pool_size	(2, 2)
train_cnn_7layer	call	Adam
extract_data	call	reshape
Conv2D	has_arg0	(3, 3)
.train_nlayer	call	CIFAR.__init__
Dense	has_arg0	10
.train_nlayer	call	train
train	call	Sequential
train	followed_by	train_cnn_7layer
range	has_arg0	5
range	has_arg0	10000
load_batch	followed_by	load_batch
.train_nlayer	call	Session
MNIST.__init__	followed_by	CIFAR.__init__
CIFAR.__init__	call	range
Session	followed_by	relu
identity	has_arg0	10
range	followed_by	load_batch
ConfigProto	followed_by	Session
.train_nlayer	call	SGD
add	call	Dropout
add	call	Conv2D
.train_nlayer	call	relu
.train_nlayer	call	ConfigProto
MNIST.__init__	call	extract_data
train	call	Adam
train_cnn_7layer	call	Sequential
SGD	followed_by	MNIST.__init__
Lambda	call	atan
extract_data	followed_by	extract_labels
MNIST.__init__	call	extract_labels
Dropout	has_arg0	0.5
reshape	has_output_feature_size	28
reshape	has_kernel_size	(28,1)
extract_labels	followed_by	extract_data
relu	followed_by	SGD
add	followed_by	add
add	call	MaxPooling2D
Dense	has_kernel_initializer	he_uniform
train_cnn_7layer	call	SGD
CIFAR.__init__	call	load_batch
range	followed_by	identity
train	call	add
SGD	followed_by	Adam
add	call	Activation
.train_nlayer	call	train_cnn_7layer
add	followed_by	SGD
.train_nlayer	call	MNIST.__init__
add	call	Flatten
add	call	Lambda
train_cnn_7layer	call	add
train	call	SGD
load_batch	call	identity
add	call	Dense
load_batch	call	range
CIFAR.__init__	followed_by	train
Activation	has_arg0	relu
train	call	Sequential
train_distillation	call	Session
train	followed_by	CIFAR.__init__
range	has_arg0	10000
MNIST.__init__	call	extract_labels
.train_models	call	train_distillation
add	call	Activation
add	call	Dropout
train	followed_by	train
Conv2D	has_arg0	(3, 3)
run	followed_by	train
train_distillation	followed_by	MNIST.__init__
reshape	has_kernel_size	(28,1)
MNIST.__init__	call	extract_data
train	call	SGD
add	call	Flatten
Dense	has_arg0	10
CIFAR.__init__	followed_by	train
add	followed_by	add
add	followed_by	SGD
extract_labels	followed_by	extract_data
train_distillation	call	train
CIFAR.__init__	call	load_batch
.train_models	call	CIFAR.__init__
range	has_arg0	5
Sequential	followed_by	add
train_distillation	followed_by	CIFAR.__init__
MNIST.__init__	followed_by	train_distillation
train_distillation	call	run
MaxPooling2D	has_pool_size	(2, 2)
.train_models	call	MNIST.__init__
range	followed_by	load_batch
add	call	MaxPooling2D
train	followed_by	MNIST.__init__
extract_data	call	reshape
extract_data	followed_by	extract_labels
reshape	has_output_feature_size	28
identity	has_arg0	10
add	call	Conv2D
add	call	Dense
Session	followed_by	run
train	call	add
range	followed_by	identity
train	followed_by	Session
Dropout	has_arg0	0.5
load_batch	followed_by	load_batch
load_batch	call	identity
CIFAR.__init__	call	range
load_batch	call	range
run	call	softmax
.train_models	call	train
zeros	has_arg0	(len(test_labels), 1001)
eye	followed_by	eye
zeros	followed_by	zeros
placeholder	followed_by	gradients
pool	followed_by	shuffle
get_address	call	address_of_buffer
load_batch	call	identity
pool	has_initargs	(self.seed,)
Conv2D	has_arg0	128
add	followed_by	Dense
predict	call	softmax
range	followed_by	argmax
while_loop	followed_by	placeholder
load_model	call	add
.collect_gradients	call	ConfigProto
maybe_download_and_extract	call	split
generate_data	call	argmax
load_model	call	square
Conv2D	has_input_shape	(32, 32, 3)
eye	followed_by	range
reshape	followed_by	reshape
CIFARModel.__init__	followed_by	CIFARModel.__init__
squeeze	followed_by	div_work_to_cores
List	followed_by	List
reshape	has_arg0	(tf.shape(self.randv)[0], -1)
reduce_sum	followed_by	square
MaxPooling2D	has_pool_size	(2, 2)
ImageNetModel.__init__	call	create_graph
range	followed_by	range
add	call	Lambda
generate_data	call	range
generate_data	followed_by	argmax
reshape	has_kernel_size	(28,1)
norm	has_axis	1
ShmemRawArray	call	ShmemBufferWrapper.__init__
ImageNetModel.__init__	followed_by	placeholder
norm	followed_by	norm
.collect_gradients	call	List
Flatten	has_input_shape	(image_size, image_size, image_channel)
extract_data	followed_by	extract_labels
Conv2D	has_arg0	32
CIFARModel.__init__	call	Sequential
__init__	call	pool
load_model	call	TwoLayerCIFARModel.__init__
max	has_arg0	1
create_graph	followed_by	ImageNetModelPrediction.__init__
split	followed_by	NLayerModel.__init__
load_model	call	while_loop
Sequential	followed_by	add
NLayerModel.__init__	call	Dense
load_batch	followed_by	load_batch
ConfigProto	followed_by	Session
__init__	call	extract_labels
while_loop	followed_by	add
List	followed_by	set_random_seed
load_model	call	predict
reshape	has_arg0	(tf.shape(hv_op_tmp)[0], -1)
_estimate_Lipschitz_multiplerun	call	abs
split	has_arg0	:
ShmemRawArray	call	get_address
__init__	call	load
.collect_gradients	call	sort
reduce_sum	call	multiply
_estimate_Lipschitz_multiplerun	call	sqrt
ImageNetModelPrediction.__init__	call	placeholder
range	has_arg0	10000
EstimateLipschitz.__init__	followed_by	List
__init__	call	softmax
Dense	followed_by	add
MNISTModel.__init__	followed_by	split
MNISTModel.__init__	followed_by	MNISTModel.__init__
maybe_download_and_extract	followed_by	create_graph
get_address	followed_by	__init__
__init__	call	add
load_model	call	ImageNetModel.__init__
.collect_gradients	call	relu
.collect_gradients	call	squeeze
MNISTModel.__init__	call	add
while_loop	call	constant
generate_data	call	argmin
import_graph_def	followed_by	softmax
placeholder	followed_by	predict
__init__	call	placeholder
NLayerModel.__init__	followed_by	TwoLayerCIFARModel.__init__
predict	call	import_graph_def
reduce_sum	has_axis	1
normal	followed_by	relu
_estimate_Lipschitz_multiplerun	call	NpShmemArray
range	has_arg0	5
.collect_gradients	call	Session
shuffle	followed_by	zeros
reshape	call	shape
placeholder	followed_by	while_loop
squeeze	followed_by	argmax
__init__	call	load_batch
__init__	followed_by	__init__
load_model	call	constant
max	followed_by	pool
TwoLayerMNISTModel.__init__	call	Sequential
NLayerModel.__init__	call	Sequential
extract_data	call	reshape
.collect_gradients	call	l2
NpShmemArray	followed_by	NpShmemArray
range	has_arg1	1000
load_model	call	reduce_sum
NLayerModel.__init__	followed_by	ImageNetModel.__init__
add	call	Activation
predict	followed_by	placeholder
TwoLayerCIFARModel.__init__	call	add
zeros	followed_by	range
_estimate_Lipschitz_multiplerun	call	argmax
add	call	Conv2D
EstimateLipschitz.__init__	call	max
argmax	followed_by	argmax
placeholder	followed_by	import_graph_def
_estimate_Lipschitz_multiplerun	call	div_work_to_cores
Flatten	has_input_shape	(28, 28, 1)
__init__	call	maybe_download_and_extract
Conv2D	has_arg0	64
set_random_seed	followed_by	ConfigProto
norm	followed_by	reduce_sum
add	call	Flatten
load	call	split
load_model	call	gradients
fill	followed_by	argmax
estimate	followed_by	estimate
load_model	call	TwoLayerMNISTModel.__init__
load_model	call	NLayerModel.__init__
argmin	followed_by	sort
NpShmemArray	call	ShmemRawArray
max	followed_by	sqrt
Conv2D	has_input_shape	(28, 28, 1)
extract_labels	followed_by	extract_data
squeeze	call	run
Activation	has_arg0	relu
TwoLayerCIFARModel.__init__	followed_by	CIFARModel.__init__
placeholder	has_dtype	tf.float32
.collect_gradients	call	argmin
CIFARModel.__init__	followed_by	split
squeeze	followed_by	generate_data
max	call	abs
load_model	call	split
.collect_gradients	call	normal
softmax	followed_by	import_graph_def
estimate	call	_estimate_Lipschitz_multiplerun
abs	followed_by	max
generate_data	call	squeeze
reshape	has_arg0	(tf.shape(self.grad_op)[0], -1)
__init__	call	shuffle
range	followed_by	squeeze
gradients	followed_by	reshape
range	has_arg1	1001
argmax	call	abs
norm	followed_by	placeholder
placeholder	followed_by	reshape
generate_data	call	argsort
__init__	call	create_graph
__init__	call	range
argmin	followed_by	argsort
_estimate_Lipschitz_multiplerun	call	List
reshape	followed_by	norm
.collect_gradients	call	generate_data
fill	has_arg0	0
CIFARModel.__init__	call	add
.collect_gradients	call	EstimateLipschitz.__init__
Activation	has_arg0	softmax
ShmemRawArray	call	__init__
abs	followed_by	abs
Conv2D	has_arg1	(3, 3)
List	followed_by	zeros
NpShmemArray	followed_by	List
_estimate_Lipschitz_multiplerun	call	range
range	has_arg0	0
constant	followed_by	while_loop
TwoLayerMNISTModel.__init__	followed_by	MNISTModel.__init__
_estimate_Lipschitz_multiplerun	call	fill
range	followed_by	identity
_estimate_Lipschitz_multiplerun	call	squeeze
argmax	followed_by	argmin
argmax	followed_by	range
load_model	call	placeholder
identity	has_arg0	10
ImageNetModelPrediction.__init__	call	import_graph_def
range	has_arg0	1
create_graph	call	GraphDef
argsort	followed_by	argmax
relu	followed_by	l2
load_batch	call	range
ShmemBufferWrapper.__init__	followed_by	get_address
EstimateLipschitz.__init__	call	pool
add	call	MaxPooling2D
placeholder	has_arg0	(None, self.image_size, self.image_size, 3)
argmax	followed_by	max
.collect_gradients	call	load_model
Activation	has_arg0	softplus
_estimate_Lipschitz_multiplerun	call	zeros
range	followed_by	abs
__init__	call	Sequential
placeholder	followed_by	placeholder
norm	followed_by	reshape
.collect_gradients	call	argmax
sort	followed_by	argsort
.collect_gradients	call	argsort
load_model	followed_by	squeeze
ImageNetModel.__init__	call	ImageNetModelPrediction.__init__
reverse	followed_by	import_graph_def
Session	followed_by	load_model
square	followed_by	constant
argmax	followed_by	estimate
split	followed_by	split
TwoLayerCIFARModel.__init__	call	Sequential
squeeze	followed_by	squeeze
TwoLayerMNISTModel.__init__	call	add
NLayerModel.__init__	call	add
range	followed_by	load_batch
__init__	call	zeros
predict	call	reverse
constant	has_arg0	0
max	followed_by	max
l2	followed_by	EstimateLipschitz.__init__
MNISTModel.__init__	call	Sequential
__init__	call	ImageNetModelPrediction.__init__
reshape	has_output_feature_size	28
generate_data	call	eye
ImageNetModel.__init__	call	maybe_download_and_extract
__init__	call	extract_data
Dense	has_arg0	1024
split	has_arg0	,
__init__	call	max
.collect_gradients	call	set_random_seed
split	has_arg0	/
Dense	has_arg0	200
div_work_to_cores	followed_by	NpShmemArray
Dense	has_arg0	10
add	followed_by	add
load_model	call	reshape
Dense	has_arg0	256
.collect_gradients	call	estimate
load_model	call	norm
ImageNetModelPrediction.__init__	call	softmax
fill	followed_by	fill
load_model	call	MNISTModel.__init__
_estimate_Lipschitz_multiplerun	call	max
add	call	Dense
constant	has_arg0	0.0
load_model	call	CIFARModel.__init__
__init__	call	import_graph_def
max	followed_by	fill
__init__	call	Dense
Flatten	has_input_shape	(32, 32, 3)
add	call	Dense
train	call	add
load_batch	call	range
train	call	Sequential
range	followed_by	identity
load_batch	call	identity
add	call	Activation
MNIST.__init__	call	extract_data
range	followed_by	load_batch
Dense	has_arg0	10
.train_2layer	call	train
Activation	has_arg0	softplus
add	followed_by	add
extract_data	followed_by	extract_labels
train	followed_by	CIFAR.__init__
MNIST.__init__	call	extract_labels
load_batch	followed_by	load_batch
extract_labels	followed_by	extract_data
extract_data	call	reshape
range	has_arg0	10000
CIFAR.__init__	call	load_batch
reshape	has_output_feature_size	28
reshape	has_kernel_size	(28,1)
train	call	SGD
CIFAR.__init__	call	range
add	call	Lambda
identity	has_arg0	10
add	call	Flatten
.train_2layer	call	MNIST.__init__
range	has_arg0	5
MNIST.__init__	followed_by	train
add	followed_by	SGD
train	followed_by	MNIST.__init__
.train_2layer	call	CIFAR.__init__
Sequential	followed_by	add
readDebugLog2array	call	split
split	has_arg0	=
.process_log	call	gen_table
gen_table	followed_by	gen_table
.process_log	call	readDebugLog2array
readDebugLog2array	followed_by	gen_table
split	followed_by	split
.clever	call	abs
pool	followed_by	parse_filename
get_lipschitz_estimate	followed_by	get_lipschitz_estimate
squeeze	followed_by	abs
.clever	call	parse_filename
.clever	call	pool
split	has_arg0	_
.clever	call	max
.clever	call	get_lipschitz_estimate
abs	call	squeeze
split	has_arg0	/
get_best_weibull_fit	call	max
max	followed_by	max
parse_filename	call	split
.clever	call	min
squeeze	followed_by	split
get_lipschitz_estimate	call	get_best_weibull_fit
.clever	call	sqrt
.clever	call	split
sqrt	followed_by	min
min	followed_by	min
.clever	call	squeeze
parse_filename	followed_by	squeeze
squeeze	followed_by	squeeze
split	followed_by	max
abs	followed_by	squeeze
get_lipschitz_estimate	followed_by	sqrt
max	followed_by	get_lipschitz_estimate
defense.defend_tv	call	uniform
zeros	followed_by	zeros
uniform	has_arg1	1.0
bregman	call	zeros
uniform	has_arg0	0.0
defense.defend_tv	call	bregman
uniform	followed_by	bregman
defense.defend_crop	call	concat
defense.defend_crop	call	to_float
concat	has_axis	0
to_float	followed_by	concat
concat	call	range
placeholder	followed_by	placeholder
reduce_sum	has_axis	1
defense.make_defend_quilt	call	transpose
placeholder	has_arg0	(TILE_SIZE * TILE_SIZE * 3, None)
reshape	has_arg0	1000000
defense.make_defend_quilt	call	matmul
load	followed_by	reshape
defense.make_defend_quilt	call	reshape
reshape	followed_by	placeholder
placeholder	followed_by	reduce_sum
matmul	followed_by	transpose
reduce_sum	call	square
reduce_sum	followed_by	matmul
defense.make_defend_quilt	call	reduce_sum
load	has_arg0	data/quilt_db.npy
defense.make_defend_quilt	call	placeholder
defense.make_defend_quilt	call	load
