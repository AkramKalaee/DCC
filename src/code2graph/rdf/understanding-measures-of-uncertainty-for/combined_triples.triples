run	call	get_results
argmax	has_axis	1
run	call	batches_generator
stack	followed_by	mean
reshape	followed_by	reshape
define_model_resnet	call	Dropout(rate=0.5)
create_adv_examples	followed_by	batch_gen
range	followed_by	run
define_model_resnet	call	Model
log	followed_by	zeros
batch_eval	call	batch_gen
entropy	followed_by	mean
tile_images	call	squeeze
run	call	create_adv_examples
.ROC_curves_cats	call	range
zeros	followed_by	gen_save_name
get_results	call	predict
batch_gen	call	range
batch_gen	followed_by	mean
create_adv_examples	call	batch_eval
run	call	reshape
predictive_entropy	call	mean
abs	followed_by	abs
Dense	has_activation	softmax
split	has_arg0	.
define_model_resnet	followed_by	categorical_crossentropy
load_model	call	define_model_resnet
get_results	call	log
reshape	followed_by	abs
get_results	call	zeros
mc_dropout_preds	followed_by	predictive_entropy
Dense	has_arg0	2
predict	followed_by	log
range	followed_by	range
get_models	followed_by	tile_images
.ROC_curves_cats	call	get_models
batch_L_norm_distances	call	abs
MCModel.__init__	call	expected_entropy
predict	call	mean
mean	call	equal
predict	call	get_results
.ROC_curves_cats	call	run
entropy	call	log
gen_save_name	call	split
load_model	followed_by	load_model
predict	followed_by	predict
run	call	predict
mc_dropout_preds	call	map_fn
predictive_entropy	followed_by	expected_entropy
Dropout(rate=0.5)	followed_by	Dense(2, activation='softmax')
categorical_crossentropy	followed_by	SGD
define_model_resnet	call	Dense(2, activation='softmax')
tile_images	followed_by	range
predictive_entropy	call	entropy
run	call	range
log	followed_by	mean
Dense(2, activation='softmax')	followed_by	Model
load_model	followed_by	MCModel.__init__
MCModel.__init__	call	mc_dropout_preds
batch_L_norm_distances	followed_by	reshape
mc_dropout_preds	call	stack
run	call	placeholder
equal	call	argmax
run	call	logical_not
get_models	call	load_model
stack	call	List
get_models	call	MCModel.__init__
run	call	zeros
run	call	batch_gen
batches_generator	call	range
run	call	log
placeholder	followed_by	create_adv_examples
logical_not	call	equal
.ROC_curves_cats	call	tile_images
mean	followed_by	logical_not
run	call	tile_images
predict	call	stack
MCModel.__init__	call	predictive_entropy
batches_generator	followed_by	get_results
get_results	call	mean
get_results	call	stack
get_results	followed_by	get_results
placeholder	has_shape	(None, 224, 224, 3)
run	call	batch_L_norm_distances
stack	call	range
mean	followed_by	log
load_model	call	SGD
reshape	followed_by	tile_images
get_results	followed_by	predict
Dropout	has_rate	0.5
Dropout(rate=0.5)	call	Dropout
mean	call	log
Dense(2, activation='softmax')	call	Dense
logical_not	followed_by	batch_L_norm_distances
range	followed_by	batches_generator
mean	has_axis	0
expected_entropy	call	mean
batch_L_norm_distances	call	reshape
load_model	call	categorical_crossentropy
stack	followed_by	map_fn
run	call	mean
run	call	gen_save_name
get_models	call	MCModel.__init__
stack	call	List
get_mnist	call	to_categorical
reshape	has_output_feature_size	1
Decoder	followed_by	Model
mean	has_axis	0
to_categorical	followed_by	to_categorical
Dense(2, activation='softmax')	call	Dense
reshape	followed_by	ones
define_VAE	call	Dense(400, activation='elu')
Lambda(sample_z, output_shape=(latent_dim,))	call	Lambda
MCModel.__init__	call	expected_entropy
Model	followed_by	Lambda(sample_z, output_shape=(latent_dim,))
Flatten()	call	Flatten
entropy	followed_by	mean
Dropout(rate=0.5)	followed_by	Dense(2, activation='softmax')
load_model	call	categorical_crossentropy
reshape	has_kernel_size	(1,1)
define_model_resnet	call	Dropout(rate=0.5)
define_VAE	call	Decoder
Dense(latent_dim)	call	Dense
Dense(latent_dim)	followed_by	Dense(latent_dim)
Dense(784, activation='sigmoid')	call	Dense
reshape	followed_by	to_categorical
MCModel.__init__	call	predictive_entropy
entropy	call	log
Lambda(sample_z, output_shape=(latent_dim,))	followed_by	Input
Dense	has_arg0	2
get_models	followed_by	get_mnist
reshape	has_arg0	(28, 28, 1)
ones	followed_by	zeros
Dense(latent_dim)	followed_by	Model
Reshape((28, 28, 1))	call	reshape
define_VAE	call	Model
argmax	has_axis	1
mc_dropout_preds	call	map_fn
predictive_entropy	followed_by	expected_entropy
define_model_resnet	call	Dense(2, activation='softmax')
create_interpolation_dataset	call	zeros
Input	has_shape	(latent_dim,)
define_VAE	call	Dense(latent_dim)
Dense	has_arg0	400
Dense(400, activation='elu')	followed_by	Dense(256, activation='elu')
argmax	followed_by	argmax
Flatten()	followed_by	Dense(400, activation='elu')
argmax	followed_by	ones
predictive_entropy	call	entropy
Dropout(rate=0.5)	call	Dropout
.interpolation_comparison	call	get_mnist
define_model_resnet	call	Model
Lambda	has_output_shape	(latent_dim,)
load_data	followed_by	reshape
Dense	has_arg0	784
create_interpolation_dataset	call	ones
load_model	call	define_model_resnet
get_mnist	call	reshape
define_VAE	call	Lambda(sample_z, output_shape=(latent_dim,))
Dense	has_activation	softmax
Dense(256, activation='elu')	followed_by	Dense(latent_dim)
define_model_resnet	followed_by	categorical_crossentropy
Dense	has_arg0	256
get_mnist	call	load_data
define_VAE	call	Dense(784, activation='sigmoid')
Reshape((28, 28, 1))	followed_by	Model
predictive_entropy	call	mean
define_VAE	call	Dense(256, activation='elu')
get_models	call	define_VAE
.interpolation_comparison	call	get_models
stack	followed_by	map_fn
expected_entropy	call	mean
Dense	has_activation	sigmoid
Dense(784, activation='sigmoid')	followed_by	Reshape((28, 28, 1))
Dropout	has_rate	0.5
create_interpolation_dataset	call	argmax
categorical_crossentropy	followed_by	SGD
MCModel.__init__	call	mc_dropout_preds
define_VAE	call	Flatten()
Dense(400, activation='elu')	followed_by	Dense(784, activation='sigmoid')
define_VAE	followed_by	load_model
.interpolation_comparison	call	create_interpolation_dataset
get_mnist	followed_by	create_interpolation_dataset
get_models	call	load_model
Input	has_shape	(28, 28, 1)
Dense(2, activation='softmax')	followed_by	Model
Dense	has_activation	elu
Dense(400, activation='elu')	call	Dense
load_model	followed_by	MCModel.__init__
define_VAE	call	Input
define_VAE	call	Reshape((28, 28, 1))
reshape	has_arg0	1
Dense(256, activation='elu')	followed_by	Dense(400, activation='elu')
reshape	followed_by	reshape
ones	followed_by	reshape
Model	followed_by	Decoder
mc_dropout_preds	call	stack
Input	followed_by	Flatten()
Input	followed_by	Dense(256, activation='elu')
mc_dropout_preds	followed_by	predictive_entropy
create_interpolation_dataset	call	reshape
load_model	call	SGD
Dense(256, activation='elu')	call	Dense
src.utilities.make_grid	call	range
squeeze	followed_by	range
src.utilities.make_grid	call	squeeze
src.utilities.MCModel.__call__	call	mean
mean	has_axis	0
define_VAE	call	Dense(784, activation='sigmoid')
Model	followed_by	Decoder
Dense	has_arg0	400
define_VAE	call	Reshape((28, 28, 1))
Dropout	has_rate	0.5
Dense(256, activation='elu')	call	Dense
Dense(784, activation='sigmoid')	followed_by	Reshape((28, 28, 1))
Decoder	followed_by	Model
Dropout(rate=0.5)	call	Dropout
Dense(2, activation='softmax')	call	Dense
Input	has_shape	(28, 28, 1)
Reshape((28, 28, 1))	followed_by	Model
define_VAE	call	Lambda(sample_z, output_shape=(latent_dim,))
Dense(400, activation='elu')	followed_by	Dense(256, activation='elu')
define_model_resnet	call	Model
define_VAE	call	Input
Flatten()	followed_by	Dense(400, activation='elu')
define_VAE	call	Model
load_model	call	define_model_resnet
Dense	has_arg0	784
define_VAE	call	Decoder
define_VAE	call	Dense(400, activation='elu')
Dense	has_activation	sigmoid
Dense(latent_dim)	call	Dense
load_model	call	SGD
categorical_crossentropy	followed_by	SGD
Dense(400, activation='elu')	followed_by	Dense(784, activation='sigmoid')
Dense	has_arg0	2
reshape	has_arg0	(28, 28, 1)
define_VAE	call	Dense(latent_dim)
Input	followed_by	Dense(256, activation='elu')
latent_plots.get_ML_models	call	load_model
Lambda	has_output_shape	(latent_dim,)
Model	followed_by	Lambda(sample_z, output_shape=(latent_dim,))
define_VAE	call	Flatten()
Dense(2, activation='softmax')	followed_by	Model
Dense(latent_dim)	followed_by	Dense(latent_dim)
Reshape((28, 28, 1))	call	reshape
define_model_resnet	call	Dropout(rate=0.5)
Dense(400, activation='elu')	call	Dense
Dense	has_activation	elu
Dense(latent_dim)	followed_by	Model
Input	has_shape	(latent_dim,)
Lambda(sample_z, output_shape=(latent_dim,))	followed_by	Input
define_model_resnet	call	Dense(2, activation='softmax')
Dropout(rate=0.5)	followed_by	Dense(2, activation='softmax')
Dense(256, activation='elu')	followed_by	Dense(latent_dim)
Flatten()	call	Flatten
define_VAE	followed_by	load_model
define_VAE	call	Dense(256, activation='elu')
Dense	has_arg0	256
Lambda(sample_z, output_shape=(latent_dim,))	call	Lambda
Dense(784, activation='sigmoid')	call	Dense
Dense(256, activation='elu')	followed_by	Dense(400, activation='elu')
load_model	call	categorical_crossentropy
latent_plots.get_ML_models	call	define_VAE
define_model_resnet	followed_by	categorical_crossentropy
Dense	has_activation	softmax
Input	followed_by	Flatten()
Model	followed_by	Decoder
Input	followed_by	Dense(256, activation='elu')
Dense	has_activation	elu
Dense(784, activation='sigmoid')	followed_by	Reshape((28, 28, 1))
define_VAE	call	Reshape((28, 28, 1))
Dense	has_arg0	256
Dense(400, activation='elu')	followed_by	Dense(256, activation='elu')
define_VAE	call	Dense(400, activation='elu')
Dense	has_arg0	400
Input	has_shape	(latent_dim,)
define_VAE	call	Flatten()
Dense(latent_dim)	followed_by	Model
define_VAE	call	Model
Flatten()	call	Flatten
Lambda(sample_z, output_shape=(latent_dim,))	followed_by	Input
Lambda(sample_z, output_shape=(latent_dim,))	call	Lambda
Dense(latent_dim)	call	Dense
define_VAE	call	Input
latent_plots.get_model_ensemble	call	MCEnsembleWrapper.__init__
Dense(256, activation='elu')	followed_by	Dense(400, activation='elu')
Reshape((28, 28, 1))	call	reshape
Model	followed_by	Lambda(sample_z, output_shape=(latent_dim,))
define_VAE	call	Decoder
Dense(256, activation='elu')	followed_by	Dense(latent_dim)
latent_plots.get_model_ensemble	call	define_VAE
Dense(256, activation='elu')	call	Dense
Lambda	has_output_shape	(latent_dim,)
define_VAE	followed_by	MCEnsembleWrapper.__init__
Input	followed_by	Flatten()
Dense	has_arg0	784
define_VAE	call	Dense(784, activation='sigmoid')
Reshape((28, 28, 1))	followed_by	Model
Dense	has_activation	sigmoid
Input	has_shape	(28, 28, 1)
Flatten()	followed_by	Dense(400, activation='elu')
Dense(400, activation='elu')	call	Dense
reshape	has_arg0	(28, 28, 1)
define_VAE	call	Dense(latent_dim)
Dense(784, activation='sigmoid')	call	Dense
define_VAE	call	Dense(256, activation='elu')
Dense(latent_dim)	followed_by	Dense(latent_dim)
Dense(400, activation='elu')	followed_by	Dense(784, activation='sigmoid')
Decoder	followed_by	Model
define_VAE	call	Lambda(sample_z, output_shape=(latent_dim,))
mean	has_axis	0
expected_entropy	call	mean
src.utilities.BALD	call	predictive_entropy
src.utilities.BALD	call	expected_entropy
entropy	call	log
entropy	followed_by	mean
predictive_entropy	call	mean
predictive_entropy	call	entropy
predictive_entropy	followed_by	expected_entropy
Dense(latent_dim)	followed_by	Model
define_model_resnet	call	Dense(2, activation='softmax')
Dense(latent_dim)	followed_by	Dense(latent_dim)
linspace	has_output_feature_size	0
define_VAE	call	Dense(256, activation='elu')
get_mnist	call	to_categorical
define_VAE	call	Input
Flatten()	call	Flatten
Dense(784, activation='sigmoid')	call	Dense
load_data	followed_by	reshape
load_model	call	define_model_resnet
squeeze	followed_by	squeeze
define_VAE	call	Lambda(sample_z, output_shape=(latent_dim,))
Model	followed_by	Lambda(sample_z, output_shape=(latent_dim,))
mc_dropout_preds	followed_by	predictive_entropy
load_model	followed_by	MCModel.__init__
linspace	has_kernel_size	(1,15)
define_VAE	call	Model
reshape	followed_by	reshape
stack	call	linspace
Input	followed_by	Dense(256, activation='elu')
Dense(400, activation='elu')	followed_by	Dense(256, activation='elu')
define_model_resnet	call	Model
categorical_crossentropy	followed_by	SGD
get_models	call	define_VAE
.interpolated_mnist	call	squeeze
define_model_resnet	call	Dropout(rate=0.5)
argmax	followed_by	argmax
define_VAE	call	Dense(784, activation='sigmoid')
get_mnist	call	reshape
.interpolated_mnist	call	argmax
Dense	has_activation	sigmoid
get_models	call	load_model
Reshape((28, 28, 1))	call	reshape
load_model	call	SGD
Dropout(rate=0.5)	followed_by	Dense(2, activation='softmax')
.interpolated_mnist	call	get_models
Input	has_shape	(28, 28, 1)
reshape	has_arg0	1
Input	followed_by	Flatten()
Decoder	followed_by	Model
get_models	followed_by	get_mnist
define_VAE	call	Decoder
Input	has_shape	(latent_dim,)
Dense(400, activation='elu')	followed_by	Dense(784, activation='sigmoid')
define_VAE	call	Dense(400, activation='elu')
Lambda(sample_z, output_shape=(latent_dim,))	followed_by	Input
argmax	has_axis	1
.interpolated_mnist	call	stack
Lambda	has_output_shape	(latent_dim,)
Dense	has_arg0	784
Dropout(rate=0.5)	call	Dropout
define_VAE	call	Flatten()
get_mnist	followed_by	argmax
entropy	followed_by	mean
Dense(256, activation='elu')	followed_by	Dense(400, activation='elu')
Dense(256, activation='elu')	call	Dense
Lambda(sample_z, output_shape=(latent_dim,))	call	Lambda
to_categorical	followed_by	to_categorical
Dense(2, activation='softmax')	followed_by	Model
MCModel.__init__	call	expected_entropy
define_model_resnet	followed_by	categorical_crossentropy
Dense(256, activation='elu')	followed_by	Dense(latent_dim)
Dense(latent_dim)	call	Dense
define_VAE	followed_by	load_model
mean	has_axis	0
predictive_entropy	followed_by	expected_entropy
mc_dropout_preds	call	map_fn
argmax	followed_by	stack
expected_entropy	call	mean
.interpolated_mnist	call	get_mnist
Dense	has_activation	softmax
MCModel.__init__	call	predictive_entropy
Dense(2, activation='softmax')	call	Dense
load_model	call	categorical_crossentropy
entropy	call	log
MCModel.__init__	call	mc_dropout_preds
Dense	has_arg0	256
get_mnist	call	load_data
stack	followed_by	stack
mc_dropout_preds	call	stack
Reshape((28, 28, 1))	followed_by	Model
define_VAE	call	Dense(latent_dim)
Dense	has_arg0	400
predictive_entropy	call	entropy
reshape	has_arg0	(28, 28, 1)
predictive_entropy	call	mean
Flatten()	followed_by	Dense(400, activation='elu')
define_VAE	call	Reshape((28, 28, 1))
get_models	call	MCModel.__init__
stack	followed_by	squeeze
Dense(784, activation='sigmoid')	followed_by	Reshape((28, 28, 1))
reshape	followed_by	to_categorical
Model	followed_by	Decoder
Dense	has_activation	elu
Dense(400, activation='elu')	call	Dense
Dropout	has_rate	0.5
stack	followed_by	map_fn
Dense	has_arg0	2
stack	call	List
linspace	has_output_feature_size	0
.plot_roc_cats	call	range
imagenet_deprocess	followed_by	range
.plot_roc_cats	call	linspace
.plot_roc_cats	call	imagenet_deprocess
linspace	has_kernel_size	(1,10)
linspace	followed_by	linspace
range	followed_by	linspace
define_VAE	call	Input
Dense(400, activation='elu')	followed_by	Dense(256, activation='elu')
define_VAE	call	Model
latent_plots.get_ML_ensemble	call	MCEnsembleWrapper.__init__
Dense(784, activation='sigmoid')	followed_by	Reshape((28, 28, 1))
define_VAE	call	Dense(latent_dim)
define_VAE	call	Dense(784, activation='sigmoid')
Dense(latent_dim)	followed_by	Model
Dense	has_activation	sigmoid
reshape	has_arg0	(28, 28, 1)
Dense(256, activation='elu')	followed_by	Dense(400, activation='elu')
define_VAE	call	Lambda(sample_z, output_shape=(latent_dim,))
Flatten()	call	Flatten
load_model	followed_by	MCEnsembleWrapper.__init__
Dense	has_arg0	784
Input	has_shape	(28, 28, 1)
Dense(784, activation='sigmoid')	call	Dense
Decoder	followed_by	Model
Dense	has_activation	elu
define_VAE	call	Reshape((28, 28, 1))
Flatten()	followed_by	Dense(400, activation='elu')
Reshape((28, 28, 1))	followed_by	Model
Dense	has_arg0	400
Model	followed_by	Decoder
latent_plots.get_ML_ensemble	call	define_VAE
Input	followed_by	Flatten()
Dense	has_arg0	256
Dense(256, activation='elu')	call	Dense
Dense(latent_dim)	followed_by	Dense(latent_dim)
Model	followed_by	Lambda(sample_z, output_shape=(latent_dim,))
Dense(400, activation='elu')	call	Dense
Lambda(sample_z, output_shape=(latent_dim,))	call	Lambda
Reshape((28, 28, 1))	call	reshape
Input	has_shape	(latent_dim,)
define_VAE	call	Flatten()
Input	followed_by	Dense(256, activation='elu')
Lambda(sample_z, output_shape=(latent_dim,))	followed_by	Input
define_VAE	call	Dense(256, activation='elu')
Dense(400, activation='elu')	followed_by	Dense(784, activation='sigmoid')
define_VAE	followed_by	load_model
define_VAE	call	Dense(400, activation='elu')
Lambda	has_output_shape	(latent_dim,)
latent_plots.get_ML_ensemble	call	load_model
define_VAE	call	Decoder
Dense(latent_dim)	call	Dense
Dense(256, activation='elu')	followed_by	Dense(latent_dim)
Model	followed_by	Decoder
Reshape((28, 28, 1))	followed_by	Model
define_VAE	call	Lambda(sample_z, output_shape=(latent_dim,))
Dense(400, activation='elu')	followed_by	Dense(784, activation='sigmoid')
Dropout(rate=0.5)	call	Dropout
Dense(256, activation='elu')	followed_by	Dense(latent_dim)
Dense(256, activation='elu')	call	Dense
define_VAE	call	Model
Model	followed_by	Lambda(sample_z, output_shape=(latent_dim,))
Dense	has_arg0	2
define_model_resnet	call	Model
Input	has_shape	(28, 28, 1)
define_model_resnet	followed_by	categorical_crossentropy
Dense(784, activation='sigmoid')	followed_by	Reshape((28, 28, 1))
define_VAE	call	Dense(latent_dim)
Lambda(sample_z, output_shape=(latent_dim,))	followed_by	Input
Flatten()	followed_by	Dense(400, activation='elu')
Dense(784, activation='sigmoid')	call	Dense
Dense	has_activation	elu
Dense(latent_dim)	call	Dense
Lambda	has_output_shape	(latent_dim,)
define_VAE	call	Dense(784, activation='sigmoid')
Input	followed_by	Flatten()
load_model	call	define_model_resnet
categorical_crossentropy	followed_by	SGD
define_VAE	call	Reshape((28, 28, 1))
Input	followed_by	Dense(256, activation='elu')
Dense	has_arg0	784
Decoder	followed_by	Model
Flatten()	call	Flatten
define_model_resnet	call	Dropout(rate=0.5)
Dense	has_arg0	256
Lambda(sample_z, output_shape=(latent_dim,))	call	Lambda
Dense(2, activation='softmax')	followed_by	Model
Dense	has_arg0	400
define_VAE	followed_by	load_model
define_model_resnet	call	Dense(2, activation='softmax')
Dense(400, activation='elu')	call	Dense
define_VAE	call	Input
Dense(latent_dim)	followed_by	Dense(latent_dim)
Reshape((28, 28, 1))	call	reshape
define_VAE	call	Decoder
Dense(400, activation='elu')	followed_by	Dense(256, activation='elu')
Dense(latent_dim)	followed_by	Model
Dropout	has_rate	0.5
Dense(2, activation='softmax')	call	Dense
latent_plots.get_ML_no_drop_models	call	load_model
define_VAE	call	Flatten()
Dense(256, activation='elu')	followed_by	Dense(400, activation='elu')
reshape	has_arg0	(28, 28, 1)
define_VAE	call	Dense(400, activation='elu')
Dropout(rate=0.5)	followed_by	Dense(2, activation='softmax')
Dense	has_activation	softmax
load_model	call	categorical_crossentropy
latent_plots.get_ML_no_drop_models	call	define_VAE
Input	has_shape	(latent_dim,)
define_VAE	call	Dense(256, activation='elu')
load_model	call	SGD
Dense	has_activation	sigmoid
mean	call	stack
mean	has_axis	0
src.utilities.MCEnsembleWrapper.__call__	call	mean
stack	call	mean
reshape	followed_by	reshape
add	call	Flatten
Conv2D	has_arg0	64
.mnist_cnn	call	reshape
Dense	has_arg0	128
.mnist_cnn	call	add
add	call	Dropout
add	call	Dense
Conv2D	has_arg1	(3, 3)
MaxPooling2D	has_pool_size	(2, 2)
to_categorical	followed_by	Sequential
Dropout	has_arg0	0.5
Adadelta	followed_by	gen_save_name
Conv2D	has_activation	relu
.mnist_cnn	call	Adadelta
load_data	followed_by	reshape
Conv2D	has_arg0	32
reshape	followed_by	to_categorical
.mnist_cnn	call	Sequential
.mnist_cnn	call	to_categorical
Sequential	followed_by	add
split	has_arg0	.
Dense	has_activation	relu
reshape	has_arg0	1
Dropout	has_arg0	0.25
add	followed_by	add
add	call	MaxPooling2D
.mnist_cnn	call	gen_save_name
gen_save_name	call	split
to_categorical	followed_by	to_categorical
add	followed_by	Adadelta
.mnist_cnn	call	load_data
add	call	Conv2D
Dense	has_activation	softmax
