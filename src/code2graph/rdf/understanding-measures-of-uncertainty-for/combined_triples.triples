.interpolation_comparison	call	get_models
get_models	call	MCModel.__init__
mc_dropout_preds	call	stack
mean	has_axis	0
Dense(784, activation='sigmoid')	followed_by	Reshape((28, 28, 1))
define_VAE	call	Model
define_VAE	call	Dense(256, activation='elu')
Dropout(rate=0.5)	followed_by	Dense(2, activation='softmax')
Lambda(sample_z, output_shape=(latent_dim,))	followed_by	Input
argmax	followed_by	argmax
Input	has_shape	(latent_dim,)
get_mnist	call	load_data
stack	followed_by	map_fn
Input	followed_by	Dense(256, activation='elu')
get_mnist	followed_by	create_interpolation_dataset
Dense(latent_dim)	followed_by	Dense(latent_dim)
get_models	followed_by	get_mnist
load_model	followed_by	MCModel.__init__
load_model	call	define_model_resnet
Input	followed_by	Flatten()
load_model	call	SGD
reshape	followed_by	reshape
create_interpolation_dataset	call	ones
Dense(latent_dim)	followed_by	Model
ones	followed_by	zeros
Flatten()	followed_by	Dense(400, activation='elu')
Dense	has_arg0	2
Dense(2, activation='softmax')	followed_by	Model
define_VAE	call	Dense(latent_dim)
reshape	followed_by	to_categorical
Input	has_shape	(28, 28, 1)
Dense	has_activation	sigmoid
define_VAE	call	Dense(784, activation='sigmoid')
mc_dropout_preds	call	map_fn
create_interpolation_dataset	call	zeros
ones	followed_by	reshape
.interpolation_comparison	call	create_interpolation_dataset
get_models	call	define_VAE
reshape	has_arg0	(28, 28, 1)
Model	followed_by	Lambda(sample_z, output_shape=(latent_dim,))
define_model_resnet	followed_by	categorical_crossentropy
load_model	call	categorical_crossentropy
Dense(256, activation='elu')	followed_by	Dense(400, activation='elu')
reshape	has_arg0	1
entropy	call	log
Reshape((28, 28, 1))	call	reshape
Reshape((28, 28, 1))	followed_by	Model
mc_dropout_preds	followed_by	predictive_entropy
predictive_entropy	call	entropy
define_model_resnet	call	Dense(2, activation='softmax')
Dropout(rate=0.5)	call	Dropout
Flatten()	call	Flatten
predictive_entropy	call	mean
Dropout	has_rate	0.5
Dense(400, activation='elu')	followed_by	Dense(784, activation='sigmoid')
Lambda(sample_z, output_shape=(latent_dim,))	call	Lambda
argmax	has_axis	1
get_models	call	load_model
stack	call	List
define_VAE	call	Input
define_VAE	call	Flatten()
Dense	has_arg0	784
MCModel.__init__	call	predictive_entropy
get_mnist	call	to_categorical
Model	followed_by	Decoder
create_interpolation_dataset	call	reshape
MCModel.__init__	call	mc_dropout_preds
argmax	followed_by	ones
Dense	has_arg0	256
reshape	has_output_feature_size	1
Dense(2, activation='softmax')	call	Dense
define_VAE	call	Dense(400, activation='elu')
get_mnist	call	reshape
Dense	has_arg0	400
Dense(latent_dim)	call	Dense
create_interpolation_dataset	call	argmax
.interpolation_comparison	call	get_mnist
Decoder	followed_by	Model
define_model_resnet	call	Model
reshape	has_kernel_size	(1,1)
MCModel.__init__	call	expected_entropy
load_data	followed_by	reshape
Dense	has_activation	elu
Dense(256, activation='elu')	followed_by	Dense(latent_dim)
categorical_crossentropy	followed_by	SGD
Dense(400, activation='elu')	call	Dense
Dense(400, activation='elu')	followed_by	Dense(256, activation='elu')
Lambda	has_output_shape	(latent_dim,)
entropy	followed_by	mean
expected_entropy	call	mean
define_VAE	followed_by	load_model
to_categorical	followed_by	to_categorical
Dense(784, activation='sigmoid')	call	Dense
Dense	has_activation	softmax
define_model_resnet	call	Dropout(rate=0.5)
predictive_entropy	followed_by	expected_entropy
define_VAE	call	Reshape((28, 28, 1))
reshape	followed_by	ones
define_VAE	call	Decoder
define_VAE	call	Lambda(sample_z, output_shape=(latent_dim,))
Dense(256, activation='elu')	call	Dense
Dropout	has_rate	0.5
Dense	has_arg0	2
Dense(400, activation='elu')	followed_by	Dense(784, activation='sigmoid')
Dropout(rate=0.5)	followed_by	Dense(2, activation='softmax')
latent_plots.get_ML_no_drop_models	call	load_model
Dense(latent_dim)	followed_by	Dense(latent_dim)
Dense	has_arg0	784
Dense	has_arg0	400
Lambda(sample_z, output_shape=(latent_dim,))	followed_by	Input
Reshape((28, 28, 1))	followed_by	Model
Dense(784, activation='sigmoid')	followed_by	Reshape((28, 28, 1))
define_VAE	call	Reshape((28, 28, 1))
Dense(2, activation='softmax')	followed_by	Model
Dense	has_activation	sigmoid
define_VAE	call	Decoder
define_VAE	call	Dense(256, activation='elu')
define_VAE	call	Flatten()
load_model	call	SGD
load_model	call	define_model_resnet
Dense(784, activation='sigmoid')	call	Dense
Dense(400, activation='elu')	call	Dense
load_model	call	categorical_crossentropy
define_model_resnet	followed_by	categorical_crossentropy
Dense(400, activation='elu')	followed_by	Dense(256, activation='elu')
define_VAE	call	Dense(latent_dim)
Dense	has_activation	softmax
Flatten()	followed_by	Dense(400, activation='elu')
latent_plots.get_ML_no_drop_models	call	define_VAE
define_VAE	call	Lambda(sample_z, output_shape=(latent_dim,))
Decoder	followed_by	Model
Reshape((28, 28, 1))	call	reshape
define_model_resnet	call	Dense(2, activation='softmax')
Input	followed_by	Dense(256, activation='elu')
define_VAE	call	Model
define_VAE	call	Dense(784, activation='sigmoid')
define_VAE	call	Dense(400, activation='elu')
Model	followed_by	Lambda(sample_z, output_shape=(latent_dim,))
Flatten()	call	Flatten
Dense(256, activation='elu')	followed_by	Dense(400, activation='elu')
define_model_resnet	call	Dropout(rate=0.5)
Dense(latent_dim)	call	Dense
Dense	has_arg0	256
define_model_resnet	call	Model
Lambda(sample_z, output_shape=(latent_dim,))	call	Lambda
Input	followed_by	Flatten()
Dense(256, activation='elu')	call	Dense
Dense(2, activation='softmax')	call	Dense
Lambda	has_output_shape	(latent_dim,)
Input	has_shape	(latent_dim,)
Dense(latent_dim)	followed_by	Model
Dense(256, activation='elu')	followed_by	Dense(latent_dim)
Dense	has_activation	elu
define_VAE	followed_by	load_model
reshape	has_arg0	(28, 28, 1)
Model	followed_by	Decoder
Input	has_shape	(28, 28, 1)
define_VAE	call	Input
Dropout(rate=0.5)	call	Dropout
categorical_crossentropy	followed_by	SGD
src.utilities.make_grid	call	squeeze
src.utilities.make_grid	call	range
squeeze	followed_by	range
linspace	has_kernel_size	(1,10)
linspace	has_output_feature_size	0
imagenet_deprocess	followed_by	range
.plot_roc_cats	call	linspace
.plot_roc_cats	call	range
.plot_roc_cats	call	imagenet_deprocess
linspace	followed_by	linspace
range	followed_by	linspace
src.utilities.MCModel.__call__	call	mean
mean	has_axis	0
Flatten()	call	Flatten
Input	followed_by	Flatten()
Lambda(sample_z, output_shape=(latent_dim,))	followed_by	Input
Dense(400, activation='elu')	followed_by	Dense(784, activation='sigmoid')
Dense(784, activation='sigmoid')	call	Dense
Dense	has_arg0	400
Input	followed_by	Dense(256, activation='elu')
Dense	has_activation	elu
define_VAE	call	Model
Reshape((28, 28, 1))	call	reshape
Model	followed_by	Decoder
Input	has_shape	(28, 28, 1)
define_VAE	call	Dense(256, activation='elu')
Input	has_shape	(latent_dim,)
Dense(784, activation='sigmoid')	followed_by	Reshape((28, 28, 1))
define_VAE	call	Dense(784, activation='sigmoid')
define_VAE	call	Dense(latent_dim)
Lambda	has_output_shape	(latent_dim,)
define_VAE	call	Decoder
Decoder	followed_by	Model
Dense(400, activation='elu')	call	Dense
Dense	has_activation	sigmoid
Dense	has_arg0	784
latent_plots.get_ML_ensemble	call	MCEnsembleWrapper.__init__
reshape	has_arg0	(28, 28, 1)
define_VAE	call	Input
Dense(256, activation='elu')	call	Dense
Dense(latent_dim)	call	Dense
Dense	has_arg0	256
define_VAE	call	Reshape((28, 28, 1))
Dense(256, activation='elu')	followed_by	Dense(latent_dim)
define_VAE	call	Flatten()
Dense(256, activation='elu')	followed_by	Dense(400, activation='elu')
Flatten()	followed_by	Dense(400, activation='elu')
load_model	followed_by	MCEnsembleWrapper.__init__
Model	followed_by	Lambda(sample_z, output_shape=(latent_dim,))
Dense(latent_dim)	followed_by	Dense(latent_dim)
Reshape((28, 28, 1))	followed_by	Model
define_VAE	call	Dense(400, activation='elu')
define_VAE	call	Lambda(sample_z, output_shape=(latent_dim,))
latent_plots.get_ML_ensemble	call	define_VAE
Dense(latent_dim)	followed_by	Model
Dense(400, activation='elu')	followed_by	Dense(256, activation='elu')
define_VAE	followed_by	load_model
Lambda(sample_z, output_shape=(latent_dim,))	call	Lambda
latent_plots.get_ML_ensemble	call	load_model
predictive_entropy	call	entropy
mean	has_axis	0
predictive_entropy	followed_by	expected_entropy
expected_entropy	call	mean
entropy	call	log
entropy	followed_by	mean
src.utilities.BALD	call	predictive_entropy
src.utilities.BALD	call	expected_entropy
predictive_entropy	call	mean
get_models	followed_by	get_mnist
Dense(400, activation='elu')	followed_by	Dense(784, activation='sigmoid')
define_VAE	call	Flatten()
get_models	call	load_model
mc_dropout_preds	followed_by	predictive_entropy
Dense(latent_dim)	call	Dense
load_model	call	SGD
define_VAE	call	Dense(256, activation='elu')
.interpolated_mnist	call	get_models
categorical_crossentropy	followed_by	SGD
.interpolated_mnist	call	get_mnist
Dense(2, activation='softmax')	call	Dense
Lambda(sample_z, output_shape=(latent_dim,))	followed_by	Input
define_VAE	call	Model
MCModel.__init__	call	predictive_entropy
Lambda	has_output_shape	(latent_dim,)
predictive_entropy	call	entropy
predictive_entropy	followed_by	expected_entropy
Dense	has_activation	softmax
Model	followed_by	Decoder
Dense(256, activation='elu')	followed_by	Dense(latent_dim)
Flatten()	followed_by	Dense(400, activation='elu')
Input	has_shape	(latent_dim,)
Dense	has_arg0	784
mean	has_axis	0
Input	followed_by	Dense(256, activation='elu')
.interpolated_mnist	call	squeeze
stack	call	List
define_VAE	followed_by	load_model
expected_entropy	call	mean
Dense(784, activation='sigmoid')	call	Dense
Dense	has_arg0	2
Dense(784, activation='sigmoid')	followed_by	Reshape((28, 28, 1))
Dense(400, activation='elu')	call	Dense
Dense(256, activation='elu')	call	Dense
Reshape((28, 28, 1))	followed_by	Model
to_categorical	followed_by	to_categorical
get_mnist	call	to_categorical
Dense	has_arg0	256
Dense	has_arg0	400
stack	call	linspace
Reshape((28, 28, 1))	call	reshape
Dense	has_activation	elu
reshape	followed_by	reshape
Input	has_shape	(28, 28, 1)
Flatten()	call	Flatten
Dense(latent_dim)	followed_by	Dense(latent_dim)
argmax	has_axis	1
define_VAE	call	Dense(784, activation='sigmoid')
.interpolated_mnist	call	argmax
get_models	call	define_VAE
entropy	call	log
Dense	has_activation	sigmoid
stack	followed_by	squeeze
Dense(2, activation='softmax')	followed_by	Model
define_model_resnet	followed_by	categorical_crossentropy
load_model	followed_by	MCModel.__init__
.interpolated_mnist	call	stack
argmax	followed_by	stack
define_VAE	call	Input
define_VAE	call	Dense(400, activation='elu')
Model	followed_by	Lambda(sample_z, output_shape=(latent_dim,))
linspace	has_output_feature_size	0
load_data	followed_by	reshape
argmax	followed_by	argmax
mc_dropout_preds	call	stack
Dense(256, activation='elu')	followed_by	Dense(400, activation='elu')
entropy	followed_by	mean
get_mnist	followed_by	argmax
Dropout	has_rate	0.5
define_model_resnet	call	Model
reshape	has_arg0	1
mc_dropout_preds	call	map_fn
define_VAE	call	Reshape((28, 28, 1))
Dense(400, activation='elu')	followed_by	Dense(256, activation='elu')
predictive_entropy	call	mean
define_VAE	call	Dense(latent_dim)
linspace	has_kernel_size	(1,15)
reshape	has_arg0	(28, 28, 1)
Lambda(sample_z, output_shape=(latent_dim,))	call	Lambda
define_VAE	call	Decoder
get_mnist	call	reshape
Dropout(rate=0.5)	call	Dropout
define_model_resnet	call	Dropout(rate=0.5)
Decoder	followed_by	Model
get_mnist	call	load_data
define_VAE	call	Lambda(sample_z, output_shape=(latent_dim,))
MCModel.__init__	call	mc_dropout_preds
define_model_resnet	call	Dense(2, activation='softmax')
MCModel.__init__	call	expected_entropy
stack	followed_by	stack
Dropout(rate=0.5)	followed_by	Dense(2, activation='softmax')
stack	followed_by	map_fn
Input	followed_by	Flatten()
reshape	followed_by	to_categorical
load_model	call	define_model_resnet
load_model	call	categorical_crossentropy
Dense(latent_dim)	followed_by	Model
get_models	call	MCModel.__init__
squeeze	followed_by	squeeze
zeros	followed_by	gen_save_name
load_model	followed_by	load_model
run	call	logical_not
define_model_resnet	call	Dropout(rate=0.5)
mean	has_axis	0
gen_save_name	call	split
predictive_entropy	call	mean
run	call	reshape
.ROC_curves_cats	call	run
predict	call	mean
stack	followed_by	mean
run	call	placeholder
mean	followed_by	log
get_results	followed_by	predict
Dense	has_arg0	2
mean	followed_by	logical_not
get_results	followed_by	get_results
batch_L_norm_distances	call	abs
batches_generator	call	range
batch_gen	call	range
predictive_entropy	call	entropy
reshape	followed_by	abs
run	call	mean
mean	call	log
Dropout(rate=0.5)	call	Dropout
.ROC_curves_cats	call	get_models
get_models	followed_by	tile_images
get_results	call	log
load_model	followed_by	MCModel.__init__
batch_L_norm_distances	call	reshape
range	followed_by	range
get_results	call	zeros
entropy	call	log
placeholder	followed_by	create_adv_examples
get_results	call	predict
Dense(2, activation='softmax')	followed_by	Model
Dropout	has_rate	0.5
run	call	batch_gen
Dense	has_activation	softmax
MCModel.__init__	call	predictive_entropy
stack	followed_by	map_fn
mean	call	equal
equal	call	argmax
reshape	followed_by	tile_images
predict	followed_by	predict
categorical_crossentropy	followed_by	SGD
argmax	has_axis	1
define_model_resnet	call	Model
expected_entropy	call	mean
logical_not	call	equal
run	call	batches_generator
get_results	call	stack
load_model	call	categorical_crossentropy
Dropout(rate=0.5)	followed_by	Dense(2, activation='softmax')
MCModel.__init__	call	mc_dropout_preds
stack	call	List
run	call	predict
logical_not	followed_by	batch_L_norm_distances
run	call	zeros
run	call	gen_save_name
define_model_resnet	followed_by	categorical_crossentropy
entropy	followed_by	mean
get_models	call	MCModel.__init__
MCModel.__init__	call	expected_entropy
load_model	call	SGD
run	call	batch_L_norm_distances
run	call	get_results
run	call	range
placeholder	has_shape	(None, 224, 224, 3)
predictive_entropy	followed_by	expected_entropy
run	call	create_adv_examples
tile_images	followed_by	range
range	followed_by	run
create_adv_examples	call	batch_eval
define_model_resnet	call	Dense(2, activation='softmax')
.ROC_curves_cats	call	tile_images
get_results	call	mean
log	followed_by	zeros
Dense(2, activation='softmax')	call	Dense
tile_images	call	squeeze
predict	followed_by	log
run	call	log
run	call	tile_images
batch_gen	followed_by	mean
predict	call	get_results
stack	call	range
abs	followed_by	abs
mc_dropout_preds	call	map_fn
.ROC_curves_cats	call	range
batch_L_norm_distances	followed_by	reshape
range	followed_by	batches_generator
split	has_arg0	.
load_model	call	define_model_resnet
batch_eval	call	batch_gen
log	followed_by	mean
get_models	call	load_model
batches_generator	followed_by	get_results
reshape	followed_by	reshape
create_adv_examples	followed_by	batch_gen
predict	call	stack
mc_dropout_preds	call	stack
mc_dropout_preds	followed_by	predictive_entropy
Dense(400, activation='elu')	followed_by	Dense(256, activation='elu')
Dense(256, activation='elu')	followed_by	Dense(400, activation='elu')
Lambda	has_output_shape	(latent_dim,)
define_VAE	followed_by	MCEnsembleWrapper.__init__
Dense(latent_dim)	followed_by	Dense(latent_dim)
Dense(784, activation='sigmoid')	call	Dense
Input	has_shape	(28, 28, 1)
latent_plots.get_model_ensemble	call	define_VAE
Flatten()	call	Flatten
Input	followed_by	Flatten()
Dense(784, activation='sigmoid')	followed_by	Reshape((28, 28, 1))
Decoder	followed_by	Model
Dense	has_activation	elu
define_VAE	call	Reshape((28, 28, 1))
Dense(256, activation='elu')	call	Dense
Model	followed_by	Lambda(sample_z, output_shape=(latent_dim,))
define_VAE	call	Dense(256, activation='elu')
define_VAE	call	Input
define_VAE	call	Dense(784, activation='sigmoid')
define_VAE	call	Dense(latent_dim)
Flatten()	followed_by	Dense(400, activation='elu')
Dense(latent_dim)	followed_by	Model
Dense(256, activation='elu')	followed_by	Dense(latent_dim)
reshape	has_arg0	(28, 28, 1)
Model	followed_by	Decoder
Lambda(sample_z, output_shape=(latent_dim,))	followed_by	Input
Input	followed_by	Dense(256, activation='elu')
define_VAE	call	Lambda(sample_z, output_shape=(latent_dim,))
Lambda(sample_z, output_shape=(latent_dim,))	call	Lambda
Dense	has_arg0	400
latent_plots.get_model_ensemble	call	MCEnsembleWrapper.__init__
Input	has_shape	(latent_dim,)
Dense	has_arg0	784
Dense(latent_dim)	call	Dense
Dense(400, activation='elu')	followed_by	Dense(784, activation='sigmoid')
define_VAE	call	Decoder
Dense(400, activation='elu')	call	Dense
define_VAE	call	Flatten()
define_VAE	call	Dense(400, activation='elu')
Dense	has_arg0	256
Reshape((28, 28, 1))	followed_by	Model
define_VAE	call	Model
Reshape((28, 28, 1))	call	reshape
Dense	has_activation	sigmoid
latent_plots.get_ML_models	call	load_model
categorical_crossentropy	followed_by	SGD
load_model	call	SGD
Dense(2, activation='softmax')	call	Dense
define_VAE	followed_by	load_model
Dense	has_arg0	784
define_VAE	call	Input
Dense(256, activation='elu')	followed_by	Dense(latent_dim)
latent_plots.get_ML_models	call	define_VAE
define_model_resnet	call	Dropout(rate=0.5)
Dense	has_arg0	2
load_model	call	categorical_crossentropy
Dense(latent_dim)	followed_by	Dense(latent_dim)
Lambda(sample_z, output_shape=(latent_dim,))	followed_by	Input
define_VAE	call	Reshape((28, 28, 1))
Dense(latent_dim)	followed_by	Model
Flatten()	call	Flatten
Input	followed_by	Dense(256, activation='elu')
Dense(784, activation='sigmoid')	call	Dense
Dense	has_activation	sigmoid
Input	has_shape	(latent_dim,)
Input	followed_by	Flatten()
Dense	has_arg0	400
define_VAE	call	Lambda(sample_z, output_shape=(latent_dim,))
define_VAE	call	Dense(256, activation='elu')
Dense(latent_dim)	call	Dense
Dense	has_activation	elu
Lambda	has_output_shape	(latent_dim,)
reshape	has_arg0	(28, 28, 1)
load_model	call	define_model_resnet
define_model_resnet	followed_by	categorical_crossentropy
Dropout(rate=0.5)	call	Dropout
Dense(400, activation='elu')	followed_by	Dense(256, activation='elu')
define_VAE	call	Decoder
Input	has_shape	(28, 28, 1)
define_VAE	call	Flatten()
Reshape((28, 28, 1))	call	reshape
define_model_resnet	call	Model
Dense(256, activation='elu')	followed_by	Dense(400, activation='elu')
define_VAE	call	Model
Dense(784, activation='sigmoid')	followed_by	Reshape((28, 28, 1))
Dense(400, activation='elu')	call	Dense
Dropout	has_rate	0.5
Lambda(sample_z, output_shape=(latent_dim,))	call	Lambda
Decoder	followed_by	Model
Model	followed_by	Decoder
Reshape((28, 28, 1))	followed_by	Model
define_model_resnet	call	Dense(2, activation='softmax')
Dense(2, activation='softmax')	followed_by	Model
Dense(400, activation='elu')	followed_by	Dense(784, activation='sigmoid')
define_VAE	call	Dense(latent_dim)
Dense	has_arg0	256
Dense(256, activation='elu')	call	Dense
define_VAE	call	Dense(400, activation='elu')
define_VAE	call	Dense(784, activation='sigmoid')
Model	followed_by	Lambda(sample_z, output_shape=(latent_dim,))
Dropout(rate=0.5)	followed_by	Dense(2, activation='softmax')
Flatten()	followed_by	Dense(400, activation='elu')
Dense	has_activation	softmax
add	call	MaxPooling2D
add	followed_by	Adadelta
Conv2D	has_arg1	(3, 3)
Conv2D	has_arg0	32
Dense	has_activation	relu
MaxPooling2D	has_pool_size	(2, 2)
reshape	followed_by	reshape
add	call	Conv2D
reshape	followed_by	to_categorical
Dropout	has_arg0	0.5
gen_save_name	call	split
.mnist_cnn	call	Sequential
split	has_arg0	.
Dense	has_activation	softmax
Dropout	has_arg0	0.25
add	call	Dense
.mnist_cnn	call	reshape
to_categorical	followed_by	Sequential
Conv2D	has_activation	relu
.mnist_cnn	call	to_categorical
load_data	followed_by	reshape
.mnist_cnn	call	Adadelta
Dense	has_arg0	128
add	call	Flatten
Conv2D	has_arg0	64
.mnist_cnn	call	gen_save_name
.mnist_cnn	call	load_data
to_categorical	followed_by	to_categorical
Adadelta	followed_by	gen_save_name
add	call	Dropout
add	followed_by	add
reshape	has_arg0	1
.mnist_cnn	call	add
Sequential	followed_by	add
src.utilities.MCEnsembleWrapper.__call__	call	mean
stack	call	mean
mean	has_axis	0
mean	call	stack
